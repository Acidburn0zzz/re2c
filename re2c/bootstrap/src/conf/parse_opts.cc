/* Generated by re2c 0.14.3 on Thu Jul 30 14:53:05 2015 */
#include <stdio.h>

#include "src/conf/msg.h"
#include "src/conf/opt.h"

namespace re2c
{

static inline bool next (char * & arg, char ** & argv)
{
	arg = *++argv;
	return arg != NULL;
}

parse_opts_t parse_opts (char ** argv, Opt & opts)
{
#define YYCTYPE char
	YYCTYPE * YYCURSOR;
	YYCTYPE * YYMARKER;
	Warn::option_t option;



opt:
	if (!next (YYCURSOR, argv))
	{
		goto end;
	}

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};

	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy2;
	if (yych == '-') goto yy5;
	goto yy4;
yy2:
	++YYCURSOR;
yy3:
	{
		error ("bad option: %s", *argv);
		return EXIT_FAIL;
	}
yy4:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy39;
yy5:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= '-') {
		if (yych <= 0x00) goto yy11;
		if (yych >= '-') goto yy9;
	} else {
		if (yych == 'W') goto yy7;
	}
	{ goto opt_short; }
yy7:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'e') {
		if (yych <= 0x00) goto yy15;
		if (yych >= 'e') goto yy17;
	} else {
		if (yych == 'n') goto yy19;
	}
yy8:
	{ option = Warn::W;        goto opt_warn; }
yy9:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy13;
	{ goto opt_long; }
yy11:
	++YYCURSOR;
	{ if (!opts.source ("<stdin>")) return EXIT_FAIL; goto opt; }
yy13:
	++YYCURSOR;
	{
		// all remaining arguments are non-options
		// so they must be input files
		// re2c expects exactly one input file
		for (char * f; next (f, argv);)
		{
			if (!opts.source (f))
			{
				return EXIT_FAIL;
			}
		}
		goto end;
	}
yy15:
	++YYCURSOR;
	{ warn.set_all (Warn::W);      goto opt; }
yy17:
	yych = *++YYCURSOR;
	if (yych == 'r') goto yy30;
yy18:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy3;
		} else {
			goto yy8;
		}
	} else {
		goto yy22;
	}
yy19:
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy18;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy18;
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy23;
yy22:
	{ option = Warn::WNO;      goto opt_warn; }
yy23:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy18;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy18;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy18;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy18;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy18;
	++YYCURSOR;
	{ option = Warn::WNOERROR; goto opt_warn; }
yy30:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy18;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy18;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy18;
	yych = *++YYCURSOR;
	if (yych <= 0x00) goto yy36;
	if (yych != '-') goto yy18;
	++YYCURSOR;
	{ option = Warn::WERROR;   goto opt_warn; }
yy36:
	++YYCURSOR;
	{ warn.set_all (Warn::WERROR); goto opt; }
yy38:
	++YYCURSOR;
	yych = *YYCURSOR;
yy39:
	if (yybm[0+yych] & 128) {
		goto yy38;
	}
	++YYCURSOR;
	{ if (!opts.source (*argv))     return EXIT_FAIL; goto opt; }
}


opt_warn:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'l') {
		if (yych == 'e') goto yy46;
	} else {
		if (yych <= 'm') goto yy47;
		if (yych <= 'n') goto yy48;
	}
	++YYCURSOR;
yy45:
	{
		error ("bad warning: %s", *argv);
		return EXIT_FAIL;
	}
yy46:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'm') goto yy83;
	goto yy45;
yy47:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy64;
	goto yy45;
yy48:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'a') goto yy45;
	yych = *++YYCURSOR;
	if (yych == 'k') goto yy51;
yy50:
	YYCURSOR = YYMARKER;
	goto yy45;
yy51:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy50;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'f') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy50;
	++YYCURSOR;
	{ warn.set (Warn::NAKED_DEFAULT,         option); goto opt; }
yy64:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy50;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy50;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy50;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy50;
	++YYCURSOR;
	{ warn.set (Warn::MATCH_EMPTY_STRING,    option); goto opt; }
yy83:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy50;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy50;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy50;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy50;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy50;
	++YYCURSOR;
	{ warn.set (Warn::EMPTY_CHARACTER_CLASS, option); goto opt; }
}


opt_short:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'c') {
		if (yych <= 'C') {
			if (yych <= '7') {
				if (yych <= 0x00) goto yy107;
				if (yych == '1') goto yy111;
				goto yy109;
			} else {
				if (yych <= '8') goto yy113;
				if (yych == '?') goto yy115;
				goto yy109;
			}
		} else {
			if (yych <= 'U') {
				if (yych <= 'D') goto yy117;
				if (yych == 'F') goto yy119;
				goto yy109;
			} else {
				if (yych <= 'V') goto yy121;
				if (yych <= 'a') goto yy109;
				if (yych <= 'b') goto yy123;
				goto yy125;
			}
		}
	} else {
		if (yych <= 'o') {
			if (yych <= 'g') {
				if (yych <= 'd') goto yy127;
				if (yych <= 'e') goto yy129;
				if (yych <= 'f') goto yy131;
				goto yy133;
			} else {
				if (yych <= 'h') goto yy115;
				if (yych <= 'i') goto yy135;
				if (yych <= 'n') goto yy109;
				goto yy137;
			}
		} else {
			if (yych <= 't') {
				if (yych <= 'q') goto yy109;
				if (yych <= 'r') goto yy139;
				if (yych <= 's') goto yy141;
				goto yy143;
			} else {
				if (yych <= 'v') {
					if (yych <= 'u') goto yy145;
					goto yy147;
				} else {
					if (yych <= 'w') goto yy149;
					if (yych <= 'x') goto yy151;
					goto yy109;
				}
			}
		}
	}
yy107:
	++YYCURSOR;
	{ goto opt; }
yy109:
	++YYCURSOR;
	{
		error ("bad short option: %s", *argv);
		return EXIT_FAIL;
	}
yy111:
	++YYCURSOR;
	{ goto opt_short; }
yy113:
	++YYCURSOR;
	{ if (!opts.utf_8 ())      { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy115:
	++YYCURSOR;
	{ usage ();   return EXIT_OK; }
yy117:
	++YYCURSOR;
	{ opts.emit_dot ();         goto opt_short; }
yy119:
	++YYCURSOR;
	{ opts.flex_syntax ();      goto opt_short; }
yy121:
	++YYCURSOR;
	{ vernum ();  return EXIT_OK; }
yy123:
	++YYCURSOR;
	{ opts.bit_vectors ();      goto opt_short; }
yy125:
	++YYCURSOR;
	{ opts.start_conditions (); goto opt_short; }
yy127:
	++YYCURSOR;
	{ opts.debug_output ();     goto opt_short; }
yy129:
	++YYCURSOR;
	{ if (!opts.ecb ())        { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy131:
	++YYCURSOR;
	{ opts.storable_state ();   goto opt_short; }
yy133:
	++YYCURSOR;
	{ opts.computed_gotos ();   goto opt_short; }
yy135:
	++YYCURSOR;
	{ opts.no_debug_info ();    goto opt_short; }
yy137:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy155;
	{ *argv = YYCURSOR;                                                             goto opt_output; }
yy139:
	++YYCURSOR;
	{ opts.reusable ();         goto opt_short; }
yy141:
	++YYCURSOR;
	{ opts.nested_ifs ();       goto opt_short; }
yy143:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy153;
	{ *argv = YYCURSOR;                                                                  goto opt_header; }
yy145:
	++YYCURSOR;
	{ if (!opts.unicode ())    { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy147:
	++YYCURSOR;
	{ version (); return EXIT_OK; }
yy149:
	++YYCURSOR;
	{ if (!opts.wide_chars ()) { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy151:
	++YYCURSOR;
	{ if (!opts.utf_16 ())     { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy153:
	++YYCURSOR;
	{ if (!next (YYCURSOR, argv)) { error_arg ("-t, --type-header"); return EXIT_FAIL; } goto opt_header; }
yy155:
	++YYCURSOR;
	{ if (!next (YYCURSOR, argv)) { error_arg ("-o, --output"); return EXIT_FAIL; } goto opt_output; }
}


opt_long:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	switch (yych) {
	case 'b':	goto yy161;
	case 'c':	goto yy162;
	case 'd':	goto yy163;
	case 'e':	goto yy164;
	case 'f':	goto yy165;
	case 'h':	goto yy166;
	case 'i':	goto yy167;
	case 'n':	goto yy168;
	case 'o':	goto yy169;
	case 'r':	goto yy170;
	case 's':	goto yy171;
	case 't':	goto yy172;
	case 'u':	goto yy173;
	case 'v':	goto yy174;
	case 'w':	goto yy175;
	default:	goto yy159;
	}
yy159:
	++YYCURSOR;
yy160:
	{
		error ("bad long option: %s", *argv);
		return EXIT_FAIL;
	}
yy161:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'i') goto yy457;
	goto yy160;
yy162:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy417;
	if (yych == 'o') goto yy418;
	goto yy160;
yy163:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy404;
	goto yy160;
yy164:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'l') {
		if (yych == 'c') goto yy366;
		goto yy160;
	} else {
		if (yych <= 'm') goto yy364;
		if (yych <= 'n') goto yy365;
		goto yy160;
	}
yy165:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'l') goto yy352;
	goto yy160;
yy166:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy347;
	goto yy160;
yy167:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy341;
	goto yy160;
yy168:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy300;
	if (yych == 'o') goto yy299;
	goto yy160;
yy169:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'u') goto yy292;
	goto yy160;
yy170:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy283;
	goto yy160;
yy171:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'j') {
		if (yych == 'i') goto yy231;
		goto yy160;
	} else {
		if (yych <= 'k') goto yy232;
		if (yych == 't') goto yy233;
		goto yy160;
	}
yy172:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'y') goto yy219;
	goto yy160;
yy173:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy202;
	if (yych == 't') goto yy201;
	goto yy160;
yy174:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy188;
	goto yy160;
yy175:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'i') goto yy160;
	yych = *++YYCURSOR;
	if (yych == 'd') goto yy178;
yy177:
	YYCURSOR = YYMARKER;
	goto yy160;
yy178:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!opts.wide_chars ()) { error_encoding (); return EXIT_FAIL; } goto opt; }
yy188:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych == 'n') goto yy190;
	if (yych == 's') goto yy191;
	goto yy177;
yy190:
	yych = *++YYCURSOR;
	if (yych == 'u') goto yy197;
	goto yy177;
yy191:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ version (); return EXIT_OK; }
yy197:
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ vernum ();  return EXIT_OK; }
yy201:
	yych = *++YYCURSOR;
	if (yych == 'f') goto yy210;
	goto yy177;
yy202:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!opts.unicode ())    { error_encoding (); return EXIT_FAIL; } goto opt; }
yy210:
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych == '1') goto yy212;
	if (yych == '8') goto yy213;
	goto yy177;
yy212:
	yych = *++YYCURSOR;
	if (yych == '6') goto yy216;
	goto yy177;
yy213:
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!opts.utf_8 ())      { error_encoding (); return EXIT_FAIL; } goto opt; }
yy216:
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!opts.utf_16 ())     { error_encoding (); return EXIT_FAIL; } goto opt; }
yy219:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!next (YYCURSOR, argv)) { error_arg ("-t, --type-header"); return EXIT_FAIL; } goto opt_header; }
yy231:
	yych = *++YYCURSOR;
	if (yych == 'n') goto yy272;
	goto yy177;
yy232:
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy264;
	goto yy177;
yy233:
	yych = *++YYCURSOR;
	if (yych == 'a') goto yy234;
	if (yych == 'o') goto yy235;
	goto yy177;
yy234:
	yych = *++YYCURSOR;
	if (yych == 'r') goto yy249;
	goto yy177;
yy235:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.storable_state ();     goto opt; }
yy249:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.start_conditions ();   goto opt; }
yy264:
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.skeleton ();           goto opt; }
yy272:
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ goto opt; }
yy283:
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.reusable ();           goto opt; }
yy292:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!next (YYCURSOR, argv)) { error_arg ("-o, --output"); return EXIT_FAIL; } goto opt_output; }
yy299:
	yych = *++YYCURSOR;
	if (yych == '-') goto yy311;
	goto yy177;
yy300:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'f') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.nested_ifs ();         goto opt; }
yy311:
	yych = *++YYCURSOR;
	if (yych == 'd') goto yy313;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy325;
	goto yy177;
yy313:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'f') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.no_debug_info ();      goto opt; }
yy325:
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.no_generation_date (); goto opt; }
yy341:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ goto opt_input; }
yy347:
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ usage ();   return EXIT_OK; }
yy352:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'x') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'x') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.flex_syntax ();        goto opt; }
yy364:
	yych = *++YYCURSOR;
	if (yych == 'i') goto yy385;
	if (yych == 'p') goto yy386;
	goto yy177;
yy365:
	yych = *++YYCURSOR;
	if (yych == 'c') goto yy370;
	goto yy177;
yy366:
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ if (!opts.ecb ())        { error_encoding (); return EXIT_FAIL; } goto opt; }
yy370:
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ goto opt_encoding_policy; }
yy385:
	yych = *++YYCURSOR;
	if (yych == 't') goto yy397;
	goto yy177;
yy386:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ goto opt_empty_class; }
yy397:
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.emit_dot ();           goto opt; }
yy404:
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.debug_output ();       goto opt; }
yy417:
	yych = *++YYCURSOR;
	if (yych == 's') goto yy433;
	goto yy177;
yy418:
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.computed_gotos ();     goto opt; }
yy433:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych == 's') goto yy439;
	if (yych != 'v') goto yy177;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy450;
	goto yy177;
yy439:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'v') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.case_insensitive ();   goto opt; }
yy450:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.case_inverted ();      goto opt; }
yy457:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'v') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy177;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy177;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy177;
	++YYCURSOR;
	{ opts.bit_vectors ();        goto opt; }
}


opt_output:

{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy471;
	if (yych != '-') goto yy473;
yy471:
	++YYCURSOR;
	{
		error ("bad argument to option -o, --output: %s", *argv);
		return EXIT_FAIL;
	}
yy473:
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy475;
yy474:
	++YYCURSOR;
	yych = *YYCURSOR;
yy475:
	if (yybm[0+yych] & 128) {
		goto yy474;
	}
	++YYCURSOR;
	{ if (!opts.output (*argv)) return EXIT_FAIL; goto opt; }
}


opt_header:

{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy480;
	if (yych != '-') goto yy482;
yy480:
	++YYCURSOR;
	{
		error ("bad argument to option -t, --type-header: %s", *argv);
		return EXIT_FAIL;
	}
yy482:
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy484;
yy483:
	++YYCURSOR;
	yych = *YYCURSOR;
yy484:
	if (yybm[0+yych] & 128) {
		goto yy483;
	}
	++YYCURSOR;
	{ if (!opts.type_header (*argv)) return EXIT_FAIL; goto opt; }
}


opt_encoding_policy:
	if (!next (YYCURSOR, argv))
	{
		error_arg ("--encoding-policy");
		return EXIT_FAIL;
	}

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'h') {
		if (yych == 'f') goto yy491;
	} else {
		if (yych <= 'i') goto yy492;
		if (yych == 's') goto yy493;
	}
	++YYCURSOR;
yy490:
	{
		error ("bad argument to option --encoding-policy (expected: ignore | substitute | fail): %s", *argv);
		return EXIT_FAIL;
	}
yy491:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy513;
	goto yy490;
yy492:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'g') goto yy506;
	goto yy490;
yy493:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'u') goto yy490;
	yych = *++YYCURSOR;
	if (yych == 'b') goto yy496;
yy495:
	YYCURSOR = YYMARKER;
	goto yy490;
yy496:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy495;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy495;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_SUBSTITUTE); goto opt; }
yy506:
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy495;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy495;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_IGNORE);     goto opt; }
yy513:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy495;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy495;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy495;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_FAIL);       goto opt; }
}


opt_input:
	if (!next (YYCURSOR, argv))
	{
		error_arg ("--input");
		return EXIT_FAIL;
	}

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'b') goto yy520;
	if (yych <= 'c') goto yy522;
	if (yych <= 'd') goto yy523;
yy520:
	++YYCURSOR;
yy521:
	{
		error ("bad argument to option --input (expected: default | custom): %s", *argv);
		return EXIT_FAIL;
	}
yy522:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'u') goto yy533;
	goto yy521;
yy523:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'e') goto yy521;
	yych = *++YYCURSOR;
	if (yych == 'f') goto yy526;
yy525:
	YYCURSOR = YYMARKER;
	goto yy521;
yy526:
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy525;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy525;
	++YYCURSOR;
	{ opts.input (InputAPI::DEFAULT); goto opt; }
yy533:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy525;
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy525;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy525;
	++YYCURSOR;
	{ opts.input (InputAPI::CUSTOM);  goto opt; }
}


opt_empty_class:
	if (!next (YYCURSOR, argv))
	{
		error_arg ("--empty-class");
		return EXIT_FAIL;
	}

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych == 'e') goto yy544;
	if (yych == 'm') goto yy545;
	++YYCURSOR;
yy543:
	{
		error ("bad argument to option --empty-class (expected: match-empty | match-none | error): %s", *argv);
		return EXIT_FAIL;
	}
yy544:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'r') goto yy565;
	goto yy543;
yy545:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'a') goto yy543;
	yych = *++YYCURSOR;
	if (yych == 't') goto yy548;
yy547:
	YYCURSOR = YYMARKER;
	goto yy543;
yy548:
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy547;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy547;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy552;
	if (yych == 'n') goto yy553;
	goto yy547;
yy552:
	yych = *++YYCURSOR;
	if (yych == 'm') goto yy559;
	goto yy547;
yy553:
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy547;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy547;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_MATCH_NONE);  goto opt; }
yy559:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy547;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy547;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_MATCH_EMPTY); goto opt; }
yy565:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy547;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy547;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy547;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_ERROR);       goto opt; }
}


end:
	if (!opts.source_file)
	{
		error ("no source file");
		return EXIT_FAIL;
	}
	if (!cFlag && opts.header_file)
	{
		error ("can only output a header file when using -c switch");
		return EXIT_FAIL;
	}
	if (DFlag && (bFlag || dFlag || sFlag || flag_skeleton))
	{
		error ("cannot combine -D with -b, -d, -s or --skeleton switches");
		return EXIT_FAIL;
	}

	return OK;

#undef YYCTYPE
}

} // namespace re2c
