/* Generated by re2c 0.14.3 on Mon Sep 21 22:04:43 2015 */
#line 1 "../src/parse/scanner_lex.re"
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <sstream>

#include "src/ir/dfa/dfa.h"
#include "src/globals.h"
#include "src/parse/extop.h"
#include "src/parse/parser.h"
#include "src/parse/scanner.h"
#include "src/parse/unescape.h"
#include "y.tab.h"
#include "src/util/s_to_n32_unsafe.h"

extern YYSTYPE yylval;

#define	YYCTYPE		unsigned char
#define	YYCURSOR	cur
#define	YYLIMIT		lim
#define	YYMARKER	ptr
#define	YYCTXMARKER ctx
#define	YYFILL(n)	{ fill (n); }

namespace re2c
{

// source code is in ASCII: pointers have type 'char *'
// but re2c makes an implicit assumption that YYCTYPE is unsigned
// when it generates comparisons
#line 32 "../src/parse/scanner_lex.re"


#line 56 "../src/parse/scanner_lex.re"


Scanner::ParseMode Scanner::echo()
{
	bool ignore_eoc = false;
	int  ignore_cnt = 0;

	if (eof && cur == eof) // Catch EOF
	{
		return Stop;
	}

	tok = cur;
echo:

#line 52 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};

	if ((YYLIMIT - YYCURSOR) < 16) YYFILL(16);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '%') {
		if (yych <= '\t') {
			if (yych >= 0x01) goto yy4;
		} else {
			if (yych <= '\n') goto yy6;
			if (yych <= '$') goto yy4;
			goto yy8;
		}
	} else {
		if (yych <= '*') {
			if (yych <= ')') goto yy4;
			goto yy9;
		} else {
			if (yych == '/') goto yy10;
			goto yy4;
		}
	}
	++YYCURSOR;
#line 199 "../src/parse/scanner_lex.re"
	{
					if (!(ignore_eoc || opts.DFlag || opts.flag_skeleton))
					{
						out.write(tok, tok_len () - 1);
						// -1 so we don't write out the \0
					}
					if(cur == eof)
					{
						return Stop;
					}
				}
#line 123 "src/parse/scanner_lex.cc"
yy4:
	++YYCURSOR;
yy5:
#line 210 "../src/parse/scanner_lex.re"
	{
					goto echo;
				}
#line 131 "src/parse/scanner_lex.cc"
yy6:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych == '#') goto yy91;
yy7:
#line 186 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						ignore_cnt++;
					}
					else if (!(opts.DFlag || opts.flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					cline++;
					goto echo;
				}
#line 154 "src/parse/scanner_lex.cc"
yy8:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '{') goto yy32;
	goto yy5;
yy9:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy84;
	goto yy5;
yy10:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != '*') goto yy5;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '!') goto yy13;
yy12:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy7;
		} else {
			goto yy5;
		}
	} else {
		goto yy85;
	}
yy13:
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy16;
	case 'i':	goto yy15;
	case 'm':	goto yy17;
	case 'r':	goto yy19;
	case 't':	goto yy14;
	case 'u':	goto yy18;
	default:	goto yy12;
	}
yy14:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'y') goto yy74;
	goto yy12;
yy15:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'g') goto yy63;
	goto yy12;
yy16:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy50;
	goto yy12;
yy17:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy42;
	goto yy12;
yy18:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy34;
	goto yy12;
yy19:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy20;
	if (yych == 'u') goto yy21;
	goto yy12;
yy20:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '2') goto yy31;
	goto yy12;
yy21:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 87 "../src/parse/scanner_lex.re"
	{
					if (opts.rFlag)
					{
						opts.mapCodeName.clear();
					}
					else
					{
						fatal("found 'rules:re2c' block without -r flag");
					}
					tok = cur;
					return Rules;
				}
#line 251 "src/parse/scanner_lex.cc"
yy31:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
yy32:
	++YYCURSOR;
#line 72 "../src/parse/scanner_lex.re"
	{
					if (opts.rFlag)
					{
						fatal("found standard 're2c' block while using -r flag");
					}
					if (!(opts.DFlag || opts.flag_skeleton))
					{
						const size_t lexeme_len = cur[-1] == '{'
							? sizeof ("%{") - 1
							: sizeof ("/*!re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Parse;
				}
#line 273 "src/parse/scanner_lex.cc"
yy34:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 99 "../src/parse/scanner_lex.re"
	{
					if (!opts.rFlag)
					{
						fatal("found 'use:re2c' block without -r flag");
					}
					reuse();
					if (!(opts.DFlag || opts.flag_skeleton))
					{
						const size_t lexeme_len = sizeof ("/*!use:re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Reuse;
				}
#line 303 "src/parse/scanner_lex.cc"
yy42:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 113 "../src/parse/scanner_lex.re"
	{
					if (!opts.DFlag)
					{
						out.insert_yymaxfill ();
					}
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 328 "src/parse/scanner_lex.cc"
yy50:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 122 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					out.insert_state_goto (opts.topIndent);
					ignore_eoc = true;
					goto echo;
				}
#line 360 "src/parse/scanner_lex.cc"
yy63:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 128 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 387 "src/parse/scanner_lex.cc"
yy74:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 133 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					if (!opts.DFlag)
					{
						out.insert_line_info ();
						out << "\n";
						out.insert_types ();
						out << "\n";
						out.write_line_info (cline, get_fname ().c_str ());
					}
					goto echo;
				}
#line 420 "src/parse/scanner_lex.cc"
yy84:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy87;
	if (yych == '\r') goto yy86;
yy85:
#line 164 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out << "\n";
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (!(opts.DFlag || opts.flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 446 "src/parse/scanner_lex.cc"
yy86:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy12;
yy87:
	++YYCURSOR;
#line 146 "../src/parse/scanner_lex.re"
	{
					cline++;
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (!(opts.DFlag || opts.flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 471 "src/parse/scanner_lex.cc"
yy89:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych != '#') goto yy12;
yy91:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy91;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy91;
		if (yych != 'l') goto yy12;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy98;
	if (yych <= '9') goto yy12;
	goto yy98;
yy97:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy98:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy97;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy97;
		if (yych <= '0') goto yy12;
		if (yych >= ':') goto yy12;
	}
yy99:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy99;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy12;
		if (yych <= '\t') goto yy101;
		if (yych <= '\n') goto yy103;
		goto yy12;
	} else {
		if (yych <= '\r') goto yy105;
		if (yych != ' ') goto yy12;
	}
yy101:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy101;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy101;
		if (yych == '"') goto yy106;
		goto yy12;
	}
yy103:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 182 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto echo;
				}
#line 551 "src/parse/scanner_lex.cc"
yy105:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy103;
	goto yy12;
yy106:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy106;
	}
	if (yych <= '\n') goto yy12;
	if (yych <= '"') goto yy109;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy12;
	goto yy106;
yy109:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy103;
	if (yych == '\r') goto yy105;
	goto yy12;
}
#line 213 "../src/parse/scanner_lex.re"

}

int Scanner::scan()
{
	uint32_t depth;

scan:
	tchar = cur - pos;
	tline = cline;
	tok = cur;
	switch (lexer_state)
	{
		case LEX_NORMAL:    goto start;
		case LEX_CONF:      goto conf_eq;
		case LEX_FLEX_NAME: goto flex_name;
	}

start:

#line 597 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 192,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 128, 128, 128, 128, 128, 128, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128,   0, 128, 128, 160, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\f') {
				if (yych <= 0x08) goto yy112;
				if (yych <= '\t') goto yy114;
				if (yych <= '\n') goto yy116;
			} else {
				if (yych <= 0x1F) {
					if (yych <= '\r') goto yy118;
				} else {
					if (yych <= ' ') goto yy114;
					if (yych >= '"') goto yy119;
				}
			}
		} else {
			if (yych <= ')') {
				if (yych <= '%') {
					if (yych >= '%') goto yy121;
				} else {
					if (yych <= '&') goto yy112;
					if (yych <= '\'') goto yy122;
					goto yy124;
				}
			} else {
				if (yych <= '+') {
					if (yych <= '*') goto yy126;
					goto yy128;
				} else {
					if (yych <= ',') goto yy124;
					if (yych >= '.') goto yy130;
				}
			}
		}
	} else {
		if (yych <= '[') {
			if (yych <= '<') {
				if (yych <= '9') {
					if (yych <= '/') goto yy132;
					goto yy133;
				} else {
					if (yych <= ':') goto yy134;
					if (yych <= ';') goto yy124;
					goto yy135;
				}
			} else {
				if (yych <= '?') {
					if (yych <= '>') goto yy124;
					goto yy128;
				} else {
					if (yych <= '@') goto yy112;
					if (yych <= 'Z') goto yy133;
					goto yy136;
				}
			}
		} else {
			if (yych <= 'q') {
				if (yych <= '^') {
					if (yych <= '\\') goto yy124;
				} else {
					if (yych != '`') goto yy133;
				}
			} else {
				if (yych <= 'z') {
					if (yych <= 'r') goto yy138;
					goto yy133;
				} else {
					if (yych <= '{') goto yy139;
					if (yych <= '|') goto yy124;
				}
			}
		}
	}
yy112:
	++YYCURSOR;
yy113:
#line 409 "../src/parse/scanner_lex.re"
	{
					fatalf("unexpected character: '%c'", *tok);
					goto scan;
				}
#line 717 "src/parse/scanner_lex.cc"
yy114:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy220;
yy115:
#line 393 "../src/parse/scanner_lex.re"
	{
					goto scan;
				}
#line 727 "src/parse/scanner_lex.cc"
yy116:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy198;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych == '#') goto yy200;
	}
yy117:
#line 402 "../src/parse/scanner_lex.re"
	{
					if (cur == eof) return 0;
					pos = cur;
					cline++;
					goto scan;
				}
#line 745 "src/parse/scanner_lex.cc"
yy118:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy197;
	goto yy113;
yy119:
	++YYCURSOR;
#line 270 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints ('"', cpoints);
		yylval.regexp = cpoint_string (cpoints, opts.bCaseInsensitive || opts.bCaseInverted);
		return REGEXP;
	}
#line 759 "src/parse/scanner_lex.cc"
yy121:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '}') goto yy195;
	goto yy113;
yy122:
	++YYCURSOR;
#line 263 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints ('\'', cpoints);
		yylval.regexp = cpoint_string (cpoints, opts.bCaseInsensitive || !opts.bCaseInverted);
		return REGEXP;
	}
#line 773 "src/parse/scanner_lex.cc"
yy124:
	++YYCURSOR;
yy125:
#line 297 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 781 "src/parse/scanner_lex.cc"
yy126:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '/') goto yy195;
#line 301 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return STAR;
				}
#line 790 "src/parse/scanner_lex.cc"
yy128:
	++YYCURSOR;
#line 305 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return CLOSE;
				}
#line 798 "src/parse/scanner_lex.cc"
yy130:
	++YYCURSOR;
#line 388 "../src/parse/scanner_lex.re"
	{
					yylval.regexp = mkDot();
					return REGEXP;
				}
#line 806 "src/parse/scanner_lex.cc"
yy132:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '*') goto yy191;
	if (yych == '/') goto yy193;
	goto yy125;
yy133:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy165;
yy134:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy187;
	goto yy113;
yy135:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '!') goto yy178;
	if (yych == '>') goto yy180;
	goto yy125;
yy136:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '^') goto yy176;
#line 277 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (']', cpoints);
		yylval.regexp = cpoint_class (cpoints, false);
		return REGEXP;
	}
#line 837 "src/parse/scanner_lex.cc"
yy138:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy166;
	goto yy165;
yy139:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 16) {
		goto yy141;
	}
	if (yych <= 'Z') {
		if (yych == ',') goto yy146;
		if (yych >= 'A') goto yy144;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto yy144;
		} else {
			if (yych <= '`') goto yy140;
			if (yych <= 'z') goto yy144;
		}
	}
yy140:
#line 233 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto code;
				}
#line 866 "src/parse/scanner_lex.cc"
yy141:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 16) {
		goto yy141;
	}
	if (yych <= '^') {
		if (yych <= ',') {
			if (yych >= ',') goto yy152;
		} else {
			if (yych <= '@') goto yy143;
			if (yych <= 'Z') goto yy144;
		}
	} else {
		if (yych <= 'z') {
			if (yych != '`') goto yy144;
		} else {
			if (yych == '}') goto yy150;
		}
	}
yy143:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy117;
		} else {
			goto yy125;
		}
	} else {
		if (yyaccept == 2) {
			goto yy140;
		} else {
			goto yy147;
		}
	}
yy144:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy144;
	}
	if (yych == '}') goto yy148;
	goto yy143;
yy146:
	++YYCURSOR;
yy147:
#line 341 "../src/parse/scanner_lex.re"
	{
					fatal("illegal closure form, use '{n}', '{n,}', '{n,m}' where n and m are numbers");
				}
#line 919 "src/parse/scanner_lex.cc"
yy148:
	++YYCURSOR;
#line 345 "../src/parse/scanner_lex.re"
	{
					if (!opts.FFlag) {
						fatal("curly braces for names only allowed with -F switch");
					}
					yylval.str = new std::string (tok + 1, tok_len () - 2); // -2 to omit braces
					return ID;
				}
#line 930 "src/parse/scanner_lex.cc"
yy150:
	++YYCURSOR;
#line 310 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 1, yylval.extop.min))
					{
						fatal ("repetition count overflow");
					}
					yylval.extop.max = yylval.extop.min;
					return CLOSESIZE;
				}
#line 942 "src/parse/scanner_lex.cc"
yy152:
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy147;
	if (yych <= '9') goto yy155;
	if (yych != '}') goto yy147;
	++YYCURSOR;
#line 332 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 2, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					yylval.extop.max = UINT32_MAX;
					return CLOSESIZE;
				}
#line 959 "src/parse/scanner_lex.cc"
yy155:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '/') goto yy143;
	if (yych <= '9') goto yy155;
	if (yych != '}') goto yy143;
	++YYCURSOR;
#line 319 "../src/parse/scanner_lex.re"
	{
					const char * p = strchr (tok, ',');
					if (!s_to_u32_unsafe (tok + 1, p, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					if (!s_to_u32_unsafe (p + 1, cur - 1, yylval.extop.max))
					{
						fatal ("repetition upper bound overflow");
					}
					return CLOSESIZE;
				}
#line 981 "src/parse/scanner_lex.cc"
yy159:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 373 "../src/parse/scanner_lex.re"
	{
					if (!opts.FFlag) {
						yylval.str = new std::string (tok, tok_len ());
						return ID;
					} else {
						std::vector<uint32_t> cpoints;
						for (char * p = tok; p < cur; ++p)
						{
							cpoints.push_back (static_cast<uint8_t> (*p));
						}
						yylval.regexp = cpoint_string (cpoints, opts.bCaseInsensitive || opts.bCaseInverted);
						return REGEXP;
					}
				}
#line 1000 "src/parse/scanner_lex.cc"
yy161:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy174;
yy162:
	++YYCURSOR;
yy163:
	YYCURSOR = YYCTXMARKER;
#line 368 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					return ID;
				}
#line 1013 "src/parse/scanner_lex.cc"
yy164:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy165:
	if (yych <= '9') {
		if (yych <= ' ') {
			if (yych == '\t') goto yy161;
			if (yych <= 0x1F) goto yy159;
			goto yy161;
		} else {
			if (yych == ',') goto yy162;
			if (yych <= '/') goto yy159;
			goto yy164;
		}
	} else {
		if (yych <= 'Z') {
			if (yych <= '<') goto yy159;
			if (yych <= '>') goto yy162;
			if (yych <= '@') goto yy159;
			goto yy164;
		} else {
			if (yych <= '_') {
				if (yych <= '^') goto yy159;
				goto yy164;
			} else {
				if (yych <= '`') goto yy159;
				if (yych <= 'z') goto yy164;
				goto yy159;
			}
		}
	}
yy166:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy165;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy165;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy165;
	++YYCURSOR;
#line 353 "../src/parse/scanner_lex.re"
	{ goto conf; }
#line 1060 "src/parse/scanner_lex.cc"
yy171:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 355 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					if (opts.FFlag)
					{
						lexer_state = LEX_FLEX_NAME;
						return FID;
					}
					else
					{
						return ID;
					}
				}
#line 1077 "src/parse/scanner_lex.cc"
yy173:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy174:
	if (yybm[0+yych] & 64) {
		goto yy173;
	}
	if (yych == ',') goto yy175;
	if (yych <= '<') goto yy171;
	if (yych >= '?') goto yy171;
yy175:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy163;
yy176:
	++YYCURSOR;
#line 284 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (']', cpoints);
		yylval.regexp = cpoint_class (cpoints, true);
		return REGEXP;
	}
#line 1101 "src/parse/scanner_lex.cc"
yy178:
	++YYCURSOR;
#line 294 "../src/parse/scanner_lex.re"
	{
					return SETUP;
				}
#line 1108 "src/parse/scanner_lex.cc"
yy180:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy182;
yy181:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy182:
	if (yych <= '9') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy143;
			goto yy181;
		} else {
			if (yych == ' ') goto yy181;
			goto yy143;
		}
	} else {
		if (yych <= '=') {
			if (yych <= ':') goto yy186;
			if (yych <= '<') goto yy143;
			goto yy185;
		} else {
			if (yych != '{') goto yy143;
		}
	}
yy183:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 291 "../src/parse/scanner_lex.re"
	{
					return NOCOND;
				}
#line 1142 "src/parse/scanner_lex.cc"
yy185:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '>') goto yy183;
	goto yy143;
yy186:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy183;
	goto yy143;
yy187:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '>') goto yy189;
#line 242 "../src/parse/scanner_lex.re"
	{
					tok += 2; /* skip ":=" */
					depth = 0;
					goto code;
				}
#line 1160 "src/parse/scanner_lex.cc"
yy189:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 238 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 1168 "src/parse/scanner_lex.cc"
yy191:
	++YYCURSOR;
#line 251 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto comment;
				}
#line 1176 "src/parse/scanner_lex.cc"
yy193:
	++YYCURSOR;
#line 248 "../src/parse/scanner_lex.re"
	{
				goto nextLine;
			}
#line 1183 "src/parse/scanner_lex.cc"
yy195:
	++YYCURSOR;
#line 257 "../src/parse/scanner_lex.re"
	{
					tok = cur;
					return 0;
				}
#line 1191 "src/parse/scanner_lex.cc"
yy197:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych != '\t') goto yy117;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych == '#') goto yy200;
		goto yy117;
	}
yy198:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy198;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych != '#') goto yy143;
	}
yy200:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy200;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy200;
		if (yych != 'l') goto yy143;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy207;
	if (yych <= '9') goto yy143;
	goto yy207;
yy206:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy207:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy206;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy206;
		if (yych <= '0') goto yy143;
		if (yych >= ':') goto yy143;
	}
yy208:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy143;
		} else {
			if (yych <= '\n') goto yy212;
			if (yych <= '\f') goto yy143;
			goto yy214;
		}
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy143;
		} else {
			if (yych <= '/') goto yy143;
			if (yych <= '9') goto yy208;
			goto yy143;
		}
	}
yy210:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy210;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy210;
		if (yych == '"') goto yy215;
		goto yy143;
	}
yy212:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 397 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto scan;
				}
#line 1289 "src/parse/scanner_lex.cc"
yy214:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy212;
	goto yy143;
yy215:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy215;
	}
	if (yych <= '\n') goto yy143;
	if (yych <= '"') goto yy218;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy143;
	goto yy215;
yy218:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy212;
	if (yych == '\r') goto yy214;
	goto yy143;
yy219:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy220:
	if (yych == '\t') goto yy219;
	if (yych == ' ') goto yy219;
	goto yy115;
}
#line 413 "../src/parse/scanner_lex.re"


flex_name:

#line 1327 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy225;
	if (yych == '\r') goto yy227;
	++YYCURSOR;
yy224:
#line 424 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		goto start;
	}
#line 1341 "src/parse/scanner_lex.cc"
yy225:
	++YYCURSOR;
yy226:
#line 418 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		lexer_state = LEX_NORMAL;
		return FID_END;
	}
#line 1351 "src/parse/scanner_lex.cc"
yy227:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy224;
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy226;
}
#line 428 "../src/parse/scanner_lex.re"


code:

#line 1364 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48, 112,   0,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		112,  48,  16,  48,  48,  48,  48,  32, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,   0,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
	};
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '&') {
		if (yych <= '\n') {
			if (yych <= 0x00) goto yy231;
			if (yych <= '\t') goto yy233;
			goto yy235;
		} else {
			if (yych == '"') goto yy237;
			goto yy233;
		}
	} else {
		if (yych <= '{') {
			if (yych <= '\'') goto yy238;
			if (yych <= 'z') goto yy233;
			goto yy239;
		} else {
			if (yych == '}') goto yy241;
			goto yy233;
		}
	}
yy231:
	++YYCURSOR;
#line 491 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						if (depth)
						{
							fatal("missing '}'");
						}
						return 0;
					}
					goto code;
				}
#line 1437 "src/parse/scanner_lex.cc"
yy233:
	++YYCURSOR;
yy234:
#line 505 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1445 "src/parse/scanner_lex.cc"
yy235:
	YYCTXMARKER = YYCURSOR + 1;
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych >= '\t') goto yy252;
		} else {
			if (yych <= '\n') goto yy254;
			if (yych >= '\r') goto yy254;
		}
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy252;
		} else {
			if (yych == '#') goto yy255;
		}
	}
yy236:
#line 472 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						tok += strspn(tok, " \t\r\n");
						while (cur > tok && strchr(" \t\r\n", cur[-1]))
						{
							--cur;
						}
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1485 "src/parse/scanner_lex.cc"
yy237:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy234;
	goto yy250;
yy238:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy234;
	goto yy244;
yy239:
	++YYCURSOR;
#line 444 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else
					{
						++depth;
					}
					goto code;
				}
#line 1510 "src/parse/scanner_lex.cc"
yy241:
	++YYCURSOR;
#line 432 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else if (--depth == 0)
					{
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					goto code;
				}
#line 1526 "src/parse/scanner_lex.cc"
yy243:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy244:
	if (yybm[0+yych] & 16) {
		goto yy243;
	}
	if (yych <= '\n') goto yy245;
	if (yych <= '\'') goto yy247;
	goto yy246;
yy245:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy236;
		} else {
			goto yy234;
		}
	} else {
		goto yy253;
	}
yy246:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy243;
yy247:
	++YYCURSOR;
#line 502 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1561 "src/parse/scanner_lex.cc"
yy249:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy250:
	if (yybm[0+yych] & 32) {
		goto yy249;
	}
	if (yych <= '\n') goto yy245;
	if (yych <= '"') goto yy247;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy249;
yy252:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy274;
	} else {
		if (yych <= ' ') goto yy274;
		if (yych == '#') goto yy255;
	}
yy253:
	YYCURSOR = YYCTXMARKER;
#line 459 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						goto code;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1602 "src/parse/scanner_lex.cc"
yy254:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy253;
yy255:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy255;
	}
	if (yych != 'l') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy262;
	if (yych <= '9') goto yy245;
	goto yy262;
yy261:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy262:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy261;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy261;
		if (yych <= '0') goto yy245;
		if (yych >= ':') goto yy245;
	}
yy263:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy263;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy245;
		if (yych <= '\t') goto yy265;
		if (yych <= '\n') goto yy267;
		goto yy245;
	} else {
		if (yych <= '\r') goto yy269;
		if (yych != ' ') goto yy245;
	}
yy265:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy265;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy265;
		if (yych == '"') goto yy270;
		goto yy245;
	}
yy267:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 455 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto code;
				}
#line 1674 "src/parse/scanner_lex.cc"
yy269:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy267;
	goto yy245;
yy270:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy245;
		goto yy270;
	} else {
		if (yych <= '"') goto yy273;
		if (yych != '\\') goto yy270;
	}
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy270;
yy273:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy267;
	if (yych == '\r') goto yy269;
	goto yy245;
yy274:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy274;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy274;
		if (yych == '#') goto yy255;
		goto yy245;
	}
}
#line 508 "../src/parse/scanner_lex.re"


comment:

#line 1718 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= ')') {
		if (yych == '\n') goto yy280;
	} else {
		if (yych <= '*') goto yy282;
		if (yych == '/') goto yy283;
	}
	++YYCURSOR;
yy279:
#line 540 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					goto comment;
				}
#line 1773 "src/parse/scanner_lex.cc"
yy280:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy288;
	}
	if (yych == '#') goto yy291;
yy281:
#line 531 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					tok = pos = cur;
					cline++;
					goto comment;
				}
#line 1791 "src/parse/scanner_lex.cc"
yy282:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy286;
	goto yy279;
yy283:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '*') goto yy279;
	++YYCURSOR;
#line 522 "../src/parse/scanner_lex.re"
	{
					++depth;
					fatal("ambiguous /* found");
					goto comment;
				}
#line 1806 "src/parse/scanner_lex.cc"
yy286:
	++YYCURSOR;
#line 512 "../src/parse/scanner_lex.re"
	{
					if (--depth == 0)
					{
						goto scan;
					}
					else
					{
						goto comment;
					}
				}
#line 1820 "src/parse/scanner_lex.cc"
yy288:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy288;
	}
	if (yych == '#') goto yy291;
yy290:
	YYCURSOR = YYMARKER;
	goto yy281;
yy291:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy291;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy291;
		if (yych != 'l') goto yy290;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy298;
	if (yych <= '9') goto yy290;
	goto yy298;
yy297:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy298:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy297;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy297;
		if (yych <= '0') goto yy290;
		if (yych >= ':') goto yy290;
	}
yy299:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy299;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy290;
		if (yych <= '\t') goto yy301;
		if (yych <= '\n') goto yy303;
		goto yy290;
	} else {
		if (yych <= '\r') goto yy305;
		if (yych != ' ') goto yy290;
	}
yy301:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy301;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy301;
		if (yych == '"') goto yy306;
		goto yy290;
	}
yy303:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 527 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto comment;
				}
#line 1903 "src/parse/scanner_lex.cc"
yy305:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy303;
	goto yy290;
yy306:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy306;
	}
	if (yych <= '\n') goto yy290;
	if (yych <= '"') goto yy309;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy290;
	goto yy306;
yy309:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy303;
	if (yych == '\r') goto yy305;
	goto yy290;
}
#line 547 "../src/parse/scanner_lex.re"


nextLine:

#line 1933 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy314;
	++YYCURSOR;
#line 558 "../src/parse/scanner_lex.re"
	{  if(cur == eof) {
                  return 0;
               }
               goto nextLine;
            }
#line 1946 "src/parse/scanner_lex.cc"
yy314:
	++YYCURSOR;
#line 551 "../src/parse/scanner_lex.re"
	{ if(cur == eof) {
                  return 0;
               }
               tok = pos = cur;
               cline++;
               goto scan;
            }
#line 1957 "src/parse/scanner_lex.cc"
}
#line 563 "../src/parse/scanner_lex.re"


conf:
	tok = cur;
	lexer_state = LEX_CONF;

#line 1966 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if ((YYLIMIT - YYCURSOR) < 27) YYFILL(27);
	yych = (YYCTYPE)*YYCURSOR;
	switch (yych) {
	case 'c':	goto yy320;
	case 'd':	goto yy321;
	case 'f':	goto yy322;
	case 'i':	goto yy323;
	case 'l':	goto yy324;
	case 's':	goto yy325;
	case 'v':	goto yy326;
	case 'y':	goto yy327;
	default:	goto yy318;
	}
yy318:
	++YYCURSOR;
yy319:
#line 569 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "unrecognized configuration"); }
#line 1988 "src/parse/scanner_lex.cc"
yy320:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'g') goto yy652;
	if (yych == 'o') goto yy653;
	goto yy319;
yy321:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy497;
	goto yy319;
yy322:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'l') goto yy490;
	goto yy319;
yy323:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy473;
	goto yy319;
yy324:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy446;
	goto yy319;
yy325:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 't') goto yy417;
	goto yy319;
yy326:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy384;
	goto yy319;
yy327:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != 'y') goto yy319;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= 'a') goto yy329;
		if (yych <= 'b') goto yy330;
		goto yy331;
	} else {
		if (yych == 'f') goto yy332;
	}
yy329:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy319;
		} else {
			goto yy521;
		}
	} else {
		if (yyaccept == 2) {
			goto yy667;
		} else {
			goto yy677;
		}
	}
yy330:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy378;
	goto yy329;
yy331:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy360;
	goto yy329;
yy332:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == 'c') goto yy339;
		goto yy329;
	} else {
		if (yych <= 'e') goto yy338;
		if (yych != 'p') goto yy329;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy351;
	goto yy329;
yy338:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy345;
	goto yy329;
yy339:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	++YYCURSOR;
#line 657 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_CHECK; }
#line 2096 "src/parse/scanner_lex.cc"
yy345:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 658 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_ENABLE; }
#line 2109 "src/parse/scanner_lex.cc"
yy351:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	++YYCURSOR;
#line 659 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_PARAMETER; }
#line 2128 "src/parse/scanner_lex.cc"
yy360:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'c') goto yy363;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy374;
	goto yy329;
yy363:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	++YYCURSOR;
#line 655 "../src/parse/scanner_lex.re"
	{ return CONF_YYCH_CONVERSION; }
#line 2160 "src/parse/scanner_lex.cc"
yy374:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 656 "../src/parse/scanner_lex.re"
	{ return CONF_YYCH_EMIT; }
#line 2169 "src/parse/scanner_lex.cc"
yy378:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 654 "../src/parse/scanner_lex.re"
	{ return CONF_YYBM_HEX; }
#line 2182 "src/parse/scanner_lex.cc"
yy384:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= '`') goto yy329;
		if (yych <= 'a') goto yy394;
		if (yych <= 'b') goto yy395;
		goto yy396;
	} else {
		if (yych <= 'r') goto yy329;
		if (yych <= 's') goto yy397;
		if (yych <= 't') goto yy398;
		goto yy329;
	}
yy394:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'c') goto yy413;
	goto yy329;
yy395:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy403;
	goto yy329;
yy396:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy403;
	if (yych == 't') goto yy409;
	goto yy329;
yy397:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy405;
	goto yy329;
yy398:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
yy403:
	++YYCURSOR;
#line 616 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "variable:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2250 "src/parse/scanner_lex.cc"
yy405:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy403;
	goto yy329;
yy409:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy403;
	goto yy329;
yy413:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy403;
	goto yy329;
yy417:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy420;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy428;
	goto yy329;
yy420:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	++YYCURSOR;
#line 651 "../src/parse/scanner_lex.re"
	{ return CONF_STARTLABEL; }
#line 2306 "src/parse/scanner_lex.cc"
yy428:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy430;
	if (yych == 'n') goto yy431;
	goto yy329;
yy430:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'b') goto yy441;
	goto yy329;
yy431:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	++YYCURSOR;
#line 653 "../src/parse/scanner_lex.re"
	{ return CONF_STATE_NEXTLABEL; }
#line 2338 "src/parse/scanner_lex.cc"
yy441:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 652 "../src/parse/scanner_lex.re"
	{ return CONF_STATE_ABORT; }
#line 2349 "src/parse/scanner_lex.cc"
yy446:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == ':') goto yy451;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy467;
	goto yy329;
yy451:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'F') goto yy454;
	if (yych == 'N') goto yy455;
	goto yy329;
yy454:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'i') goto yy460;
	goto yy329;
yy455:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
yy458:
	++YYCURSOR;
#line 602 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "label:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2391 "src/parse/scanner_lex.cc"
yy460:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'l') goto yy458;
	goto yy329;
yy467:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 650 "../src/parse/scanner_lex.re"
	{ return CONF_LABELPREFIX; }
#line 2420 "src/parse/scanner_lex.cc"
yy473:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'r') goto yy329;
	if (yych <= 's') goto yy480;
	if (yych >= 'u') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy487;
	goto yy329;
yy480:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	++YYCURSOR;
#line 648 "../src/parse/scanner_lex.re"
	{ return CONF_INDENT_STRING; }
#line 2453 "src/parse/scanner_lex.cc"
yy487:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	++YYCURSOR;
#line 649 "../src/parse/scanner_lex.re"
	{ return CONF_INDENT_TOP; }
#line 2460 "src/parse/scanner_lex.cc"
yy490:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'e') {
		if (yych == '8') goto yy495;
		if (yych <= 'd') goto yy329;
	} else {
		if (yych <= 'u') {
			if (yych <= 't') goto yy329;
		} else {
			if (yych <= 'v') goto yy329;
			if (yych >= 'y') goto yy329;
		}
	}
yy495:
	++YYCURSOR;
#line 637 "../src/parse/scanner_lex.re"
	{
		switch (YYCURSOR[-1])
		{
			case 'e': yylval.enc = Enc::EBCDIC; break;
			case 'w': yylval.enc = Enc::UCS2;   break;
			case 'x': yylval.enc = Enc::UTF16;  break;
			case 'u': yylval.enc = Enc::UTF32;  break;
			case '8': yylval.enc = Enc::UTF8;   break;
		}
		return CONF_FLAGS;
	}
#line 2496 "src/parse/scanner_lex.cc"
yy497:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'B':	goto yy508;
	case 'C':	goto yy509;
	case 'D':	goto yy510;
	case 'F':	goto yy507;
	case 'G':	goto yy506;
	case 'L':	goto yy511;
	case 'M':	goto yy512;
	case 'P':	goto yy513;
	case 'R':	goto yy514;
	case 'S':	goto yy505;
	default:	goto yy329;
	}
yy505:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy615;
	if (yych == 'K') goto yy614;
	goto yy329;
yy506:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy584;
	goto yy329;
yy507:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'I') goto yy569;
	goto yy329;
yy508:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'A') goto yy562;
	goto yy329;
yy509:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'S') {
		if (yych == 'O') goto yy545;
		goto yy329;
	} else {
		if (yych <= 'T') goto yy544;
		if (yych <= 'U') goto yy543;
		goto yy329;
	}
yy510:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy540;
	goto yy329;
yy511:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy532;
	if (yych == 'I') goto yy531;
	goto yy329;
yy512:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'A') goto yy527;
	goto yy329;
yy513:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy525;
	goto yy329;
yy514:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'C') goto yy522;
yy521:
#line 592 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "define:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2593 "src/parse/scanner_lex.cc"
yy522:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'X') goto yy329;
yy524:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy521;
yy525:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'K') goto yy524;
	goto yy329;
yy527:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy524;
	goto yy329;
yy531:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'M') goto yy538;
	goto yy329;
yy532:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'H') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'N') goto yy524;
	goto yy329;
yy538:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy524;
	goto yy329;
yy540:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'B') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'G') goto yy524;
	goto yy329;
yy543:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy559;
	goto yy329;
yy544:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'W') goto yy329;
	if (yych <= 'X') goto yy551;
	if (yych <= 'Y') goto yy552;
	goto yy329;
yy545:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy524;
	goto yy329;
yy551:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'M') goto yy554;
	goto yy329;
yy552:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy524;
	goto yy329;
yy554:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy524;
	goto yy329;
yy559:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy524;
	goto yy329;
yy562:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'C') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != 'C') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'X') goto yy524;
	goto yy329;
yy569:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy573;
	if (yych != '@') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'l') goto yy580;
	goto yy329;
yy573:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 629 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYFILL_NAKED; }
#line 2747 "src/parse/scanner_lex.cc"
yy580:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	++YYCURSOR;
#line 630 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYFILL_LEN; }
#line 2756 "src/parse/scanner_lex.cc"
yy584:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy587;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy603;
	goto yy329;
yy587:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != ':') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 631 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYGETCONDITION_NAKED; }
#line 2799 "src/parse/scanner_lex.cc"
yy603:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != ':') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 632 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYGETSTATE_NAKED; }
#line 2823 "src/parse/scanner_lex.cc"
yy614:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'I') goto yy651;
	goto yy329;
yy615:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy618;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy633;
	goto yy329;
yy618:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != '@') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 633 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETCONDITION_COND; }
#line 2868 "src/parse/scanner_lex.cc"
yy633:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy638;
	if (yych != '@') goto yy521;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy645;
	goto yy329;
yy638:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 634 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETSTATE_NAKED; }
#line 2897 "src/parse/scanner_lex.cc"
yy645:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 635 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETSTATE_STATE; }
#line 2910 "src/parse/scanner_lex.cc"
yy651:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'P') goto yy524;
	goto yy329;
yy652:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy700;
	goto yy329;
yy653:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == ':') goto yy658;
		goto yy329;
	} else {
		if (yych <= 'e') goto yy657;
		if (yych != 'p') goto yy329;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy694;
	goto yy329;
yy657:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy684;
	goto yy329;
yy658:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'd') goto yy660;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy674;
	goto yy329;
yy660:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy668;
yy667:
#line 624 "../src/parse/scanner_lex.re"
	{ return CONF_COND_DIVIDER; }
#line 2965 "src/parse/scanner_lex.cc"
yy668:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 625 "../src/parse/scanner_lex.re"
	{ return CONF_COND_DIVIDER_COND; }
#line 2978 "src/parse/scanner_lex.cc"
yy674:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy678;
yy677:
#line 626 "../src/parse/scanner_lex.re"
	{ return CONF_COND_GOTO; }
#line 2990 "src/parse/scanner_lex.cc"
yy678:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 627 "../src/parse/scanner_lex.re"
	{ return CONF_COND_GOTO_COND; }
#line 3003 "src/parse/scanner_lex.cc"
yy684:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'u') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 623 "../src/parse/scanner_lex.re"
	{ return CONF_CONDENUMPREFIX; }
#line 3024 "src/parse/scanner_lex.cc"
yy694:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 622 "../src/parse/scanner_lex.re"
	{ return CONF_CONDPREFIX; }
#line 3037 "src/parse/scanner_lex.cc"
yy700:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 628 "../src/parse/scanner_lex.re"
	{ return CONF_CGOTO_THRESHOLD; }
#line 3066 "src/parse/scanner_lex.cc"
}
#line 660 "../src/parse/scanner_lex.re"


conf_eq:

#line 3073 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy718;
	} else {
		if (yych <= ' ') goto yy718;
		if (yych == '=') goto yy719;
	}
	++YYCURSOR;
yy717:
#line 664 "../src/parse/scanner_lex.re"
	{ fatal ("missing '=' in configuration"); }
#line 3122 "src/parse/scanner_lex.cc"
yy718:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy723;
		goto yy717;
	} else {
		if (yych <= ' ') goto yy723;
		if (yych == '=') goto yy721;
		goto yy717;
	}
yy719:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy722;
yy720:
#line 665 "../src/parse/scanner_lex.re"
	{ goto conf_val; }
#line 3140 "src/parse/scanner_lex.cc"
yy721:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy722:
	if (yybm[0+yych] & 128) {
		goto yy721;
	}
	goto yy720;
yy723:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy723;
	} else {
		if (yych <= ' ') goto yy723;
		if (yych == '=') goto yy721;
	}
	YYCURSOR = YYMARKER;
	goto yy717;
}
#line 666 "../src/parse/scanner_lex.re"


conf_val:
	tok = cur;
	lexer_state = LEX_NORMAL;

#line 3170 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128,   0,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128,   0, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\'') {
		if (yych <= ' ') {
			if (yych <= 0x08) goto yy736;
			if (yych <= '\n') goto yy728;
			if (yych <= 0x1F) goto yy736;
		} else {
			if (yych == '"') goto yy734;
			if (yych <= '&') goto yy736;
			goto yy734;
		}
	} else {
		if (yych <= '0') {
			if (yych == '-') goto yy731;
			if (yych <= '/') goto yy736;
			goto yy729;
		} else {
			if (yych <= '9') goto yy732;
			if (yych != ';') goto yy736;
		}
	}
yy728:
#line 688 "../src/parse/scanner_lex.re"
	{
		yylval.str = new std::string (tok, tok_len ());
		return STRING;
	}
#line 3235 "src/parse/scanner_lex.cc"
yy729:
	++YYCURSOR;
	if (yybm[0+(yych = (YYCTYPE)*YYCURSOR)] & 128) {
		goto yy736;
	}
yy730:
#line 673 "../src/parse/scanner_lex.re"
	{
		if (!s_to_i32_unsafe (tok, cur, yylval.num))
		{
			fatal ("configuration value overflow");
		}
		return NUM;
	}
#line 3250 "src/parse/scanner_lex.cc"
yy731:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy737;
	if (yych >= ':') goto yy737;
yy732:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy732;
	}
	if (yych <= 0x1F) {
		if (yych <= 0x08) goto yy736;
		if (yych <= '\n') goto yy730;
		goto yy736;
	} else {
		if (yych <= ' ') goto yy730;
		if (yych == ';') goto yy730;
		goto yy736;
	}
yy734:
	++YYCURSOR;
#line 681 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (tok[0], cpoints);
		yylval.str = cpoint_conf (cpoints);
		return STRING;
	}
#line 3280 "src/parse/scanner_lex.cc"
yy736:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy737:
	if (yybm[0+yych] & 128) {
		goto yy736;
	}
	goto yy728;
}
#line 692 "../src/parse/scanner_lex.re"

}

static void escape (std::string & dest, const std::string & src)
{
	dest = src;
	size_t l = dest.length();
	for (size_t p = 0; p < l; ++p)
	{
		if (dest[p] == '\\')
		{
			dest.insert(++p, "\\");
			++l;
		}
	}
}

void Scanner::lex_cpoints (char quote, std::vector<uint32_t> & cs)
{
	for (;;)
	{
		tok = cur;
	
#line 3315 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if ((YYLIMIT - YYCURSOR) < 10) YYFILL(10);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy742;
	if (yych == '\\') goto yy744;
	++YYCURSOR;
#line 734 "../src/parse/scanner_lex.re"
	{
			const char c = tok[0];
			if (c == quote)
			{
				return;
			}
			else
			{
				cs.push_back (static_cast<uint8_t> (c));
				continue;
			}
		}
#line 3337 "src/parse/scanner_lex.cc"
yy742:
	++YYCURSOR;
#line 715 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error"); }
#line 3342 "src/parse/scanner_lex.cc"
yy744:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) <= 'b') {
		if (yych <= 'T') {
			if (yych <= '/') {
				if (yych != '\n') goto yy746;
			} else {
				if (yych <= '3') goto yy748;
				if (yych <= '7') goto yy750;
				goto yy746;
			}
		} else {
			if (yych <= 'X') {
				if (yych <= 'U') goto yy751;
				if (yych <= 'W') goto yy746;
				goto yy753;
			} else {
				if (yych == '\\') goto yy754;
				if (yych <= '`') goto yy746;
				goto yy754;
			}
		}
	} else {
		if (yych <= 'r') {
			if (yych <= 'm') {
				if (yych == 'f') goto yy754;
				goto yy746;
			} else {
				if (yych <= 'n') goto yy754;
				if (yych <= 'q') goto yy746;
				goto yy754;
			}
		} else {
			if (yych <= 'u') {
				if (yych <= 's') goto yy746;
				if (yych <= 't') goto yy754;
				goto yy753;
			} else {
				if (yych <= 'v') goto yy754;
				if (yych == 'x') goto yy756;
				goto yy746;
			}
		}
	}
#line 718 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in escape sequence"); }
#line 3389 "src/parse/scanner_lex.cc"
yy746:
	++YYCURSOR;
#line 724 "../src/parse/scanner_lex.re"
	{
			const char c = tok[1];
			if (c != quote)
			{
				warn.useless_escape (tline, tok - pos, c);
			}
			cs.push_back (static_cast<uint8_t> (c));
			continue;
		}
#line 3402 "src/parse/scanner_lex.cc"
yy748:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy749;
	if (yych <= '7') goto yy771;
yy749:
#line 717 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in octal escape sequence"); }
#line 3411 "src/parse/scanner_lex.cc"
yy750:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy749;
yy751:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy752;
		if (yych <= '9') goto yy764;
	} else {
		if (yych <= 'F') goto yy764;
		if (yych <= '`') goto yy752;
		if (yych <= 'f') goto yy764;
	}
yy752:
#line 716 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in hexadecimal escape sequence"); }
#line 3429 "src/parse/scanner_lex.cc"
yy753:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy752;
		if (yych <= '9') goto yy761;
		goto yy752;
	} else {
		if (yych <= 'F') goto yy761;
		if (yych <= '`') goto yy752;
		if (yych <= 'f') goto yy761;
		goto yy752;
	}
yy754:
	++YYCURSOR;
#line 722 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_simple (tok));   continue; }
#line 3447 "src/parse/scanner_lex.cc"
yy756:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy752;
		if (yych >= ':') goto yy752;
	} else {
		if (yych <= 'F') goto yy757;
		if (yych <= '`') goto yy752;
		if (yych >= 'g') goto yy752;
	}
yy757:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych <= '9') goto yy759;
	} else {
		if (yych <= 'F') goto yy759;
		if (yych <= '`') goto yy758;
		if (yych <= 'f') goto yy759;
	}
yy758:
	YYCURSOR = YYMARKER;
	if (yyaccept == 0) {
		goto yy749;
	} else {
		goto yy752;
	}
yy759:
	++YYCURSOR;
#line 720 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_hex (tok, cur)); continue; }
#line 3480 "src/parse/scanner_lex.cc"
yy761:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy762;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy762:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy763;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy763:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych <= '9') goto yy759;
		goto yy758;
	} else {
		if (yych <= 'F') goto yy759;
		if (yych <= '`') goto yy758;
		if (yych <= 'f') goto yy759;
		goto yy758;
	}
yy764:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy765;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy765:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy766;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy766:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy767;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy767:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy768;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy768:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy769;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy769:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych >= ':') goto yy758;
	} else {
		if (yych <= 'F') goto yy770;
		if (yych <= '`') goto yy758;
		if (yych >= 'g') goto yy758;
	}
yy770:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy758;
		if (yych <= '9') goto yy759;
		goto yy758;
	} else {
		if (yych <= 'F') goto yy759;
		if (yych <= '`') goto yy758;
		if (yych <= 'f') goto yy759;
		goto yy758;
	}
yy771:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '/') goto yy758;
	if (yych >= '8') goto yy758;
	++YYCURSOR;
#line 721 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_oct (tok, cur)); continue; }
#line 3592 "src/parse/scanner_lex.cc"
}
#line 746 "../src/parse/scanner_lex.re"

	}
}

void Scanner::set_sourceline ()
{
sourceline:
	tok = cur;

#line 3604 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy778;
	} else {
		if (yych <= '"') goto yy780;
		if (yych <= '0') goto yy776;
		if (yych <= '9') goto yy781;
	}
yy776:
	++YYCURSOR;
yy777:
#line 778 "../src/parse/scanner_lex.re"
	{
  					goto sourceline;
  				}
#line 3657 "src/parse/scanner_lex.cc"
yy778:
	++YYCURSOR;
#line 766 "../src/parse/scanner_lex.re"
	{
  					if (cur == eof)
  					{
						--cur; 
					}
			  		else
			  		{
			  			pos = cur; 
			  		}
			  		tok = cur;
			  		return; 
				}
#line 3673 "src/parse/scanner_lex.cc"
yy780:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy777;
	goto yy786;
yy781:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy784;
yy782:
#line 755 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok, cur, cline))
					{
						fatal ("line number overflow");
					}
					goto sourceline; 
				}
#line 3691 "src/parse/scanner_lex.cc"
yy783:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy784:
	if (yybm[0+yych] & 64) {
		goto yy783;
	}
	goto yy782;
yy785:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy786:
	if (yybm[0+yych] & 128) {
		goto yy785;
	}
	if (yych <= '\n') goto yy787;
	if (yych <= '"') goto yy789;
	goto yy788;
yy787:
	YYCURSOR = YYMARKER;
	goto yy777;
yy788:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy787;
	goto yy785;
yy789:
	++YYCURSOR;
#line 762 "../src/parse/scanner_lex.re"
	{
					escape (in.file_name, std::string (tok + 1, tok_len () - 2)); // -2 to omit quotes
			  		goto sourceline; 
				}
#line 3728 "src/parse/scanner_lex.cc"
}
#line 781 "../src/parse/scanner_lex.re"

}

} // end namespace re2c
