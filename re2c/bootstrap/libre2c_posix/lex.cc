/* Generated by re2c 1.1.1 on Sat Jan 12 23:45:53 2019 */
#line 1 "../libre2c_posix/lex.re"
#include <stdio.h>

#include "src/util/c99_stdint.h"

#include "src/encoding/enc.h"
#include "src/parse/ast.h"
#include "src/util/range.h"
#include "parse.h"
#include "libre2c_posix/lex.h"

extern YYSTYPE yylval;

namespace re2c {

int lex(const char *&cur)
{
    
#line 21 "libre2c_posix/lex.cc"
{
	char yych;
	yych = *cur;
	if (yych <= '9') {
		if (yych <= '+') {
			if (yych <= 0x00) goto yy2;
			if (yych <= '\'') goto yy4;
			goto yy6;
		} else {
			if (yych == '.') goto yy8;
			if (yych <= '/') goto yy4;
			goto yy10;
		}
	} else {
		if (yych <= 'Z') {
			if (yych == '?') goto yy6;
			if (yych <= '@') goto yy4;
			goto yy12;
		} else {
			if (yych <= '`') goto yy4;
			if (yych <= 'z') goto yy12;
			if (yych <= '}') goto yy6;
			goto yy4;
		}
	}
yy2:
	++cur;
#line 23 "../libre2c_posix/lex.re"
	{ return 0; }
#line 51 "libre2c_posix/lex.cc"
yy4:
	++cur;
#line 22 "../libre2c_posix/lex.re"
	{ printf("syntax error: %s\n", cur); exit(1); }
#line 56 "libre2c_posix/lex.cc"
yy6:
	++cur;
#line 24 "../libre2c_posix/lex.re"
	{ return cur[-1]; }
#line 61 "libre2c_posix/lex.cc"
yy8:
	++cur;
#line 26 "../libre2c_posix/lex.re"
	{
            yylval.regexp = ast_dot(0, 0);
            return REGEXP;
        }
#line 69 "libre2c_posix/lex.cc"
yy10:
	++cur;
#line 31 "../libre2c_posix/lex.re"
	{
            yylval.number = static_cast<uint32_t>(cur[-1] - '0');
            return DIGIT;
        }
#line 77 "libre2c_posix/lex.cc"
yy12:
	++cur;
#line 36 "../libre2c_posix/lex.re"
	{
            ASTChar c(static_cast<uint32_t>(cur[-1]), 0);
            std::vector<ASTChar> *str = new std::vector<ASTChar>;
            str->push_back(c);
            yylval.regexp = ast_str(0, 0, str, false);
            return REGEXP;
        }
#line 88 "libre2c_posix/lex.cc"
}
#line 43 "../libre2c_posix/lex.re"

}

} // namespace re2c
