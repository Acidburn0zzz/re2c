/* Generated by re2c 0.15.2 on Tue Dec  1 15:54:11 2015 */
#line 1 "../src/parse/lex_conf.re"
#include "src/util/c99_stdint.h"
#include <string>

#include "src/codegen/output.h"
#include "src/conf/opt.h"
#include "src/globals.h"
#include "src/ir/regexp/encoding/enc.h"
#include "src/parse/scanner.h"
#include "src/util/s_to_n32_unsafe.h"

namespace re2c
{

// global re2c config (affects the whole file)
#line 36 "../src/parse/lex_conf.re"


void Scanner::lex_conf ()
{
	tok = cur;

#line 25 "src/parse/lex_conf.cc"
{
	unsigned char yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,  64,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 64,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 27) fill(27);
	yych = (unsigned char)*cur;
	switch (yych) {
	case 'c':	goto yy4;
	case 'd':	goto yy5;
	case 'f':	goto yy6;
	case 'i':	goto yy7;
	case 'l':	goto yy8;
	case 's':	goto yy9;
	case 'v':	goto yy10;
	case 'y':	goto yy11;
	default:	goto yy2;
	}
yy2:
	++cur;
yy3:
#line 42 "../src/parse/lex_conf.re"
	{ fatal ((tok - pos) - tchar, "unrecognized configuration"); }
#line 81 "src/parse/lex_conf.cc"
yy4:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'g') goto yy393;
	if (yych == 'o') goto yy394;
	goto yy3;
yy5:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'e') goto yy202;
	goto yy3;
yy6:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'l') goto yy195;
	goto yy3;
yy7:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'n') goto yy178;
	goto yy3;
yy8:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'a') goto yy149;
	goto yy3;
yy9:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 't') goto yy111;
	goto yy3;
yy10:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'a') goto yy68;
	goto yy3;
yy11:
	yyaccept = 0;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych != 'y') goto yy3;
	yych = (unsigned char)*++cur;
	if (yych <= 'c') {
		if (yych <= 'a') goto yy13;
		if (yych <= 'b') goto yy14;
		goto yy15;
	} else {
		if (yych == 'f') goto yy16;
	}
yy13:
	cur = ptr;
	if (yyaccept <= 5) {
		if (yyaccept <= 2) {
			if (yyaccept <= 1) {
				if (yyaccept == 0) {
					goto yy3;
				} else {
					goto yy139;
				}
			} else {
				goto yy228;
			}
		} else {
			if (yyaccept <= 4) {
				if (yyaccept == 3) {
					goto yy244;
				} else {
					goto yy274;
				}
			} else {
				goto yy297;
			}
		}
	} else {
		if (yyaccept <= 8) {
			if (yyaccept <= 7) {
				if (yyaccept == 6) {
					goto yy316;
				} else {
					goto yy327;
				}
			} else {
				goto yy380;
			}
		} else {
			if (yyaccept == 9) {
				goto yy408;
			} else {
				goto yy418;
			}
		}
	}
yy14:
	yych = (unsigned char)*++cur;
	if (yych == 'm') goto yy62;
	goto yy13;
yy15:
	yych = (unsigned char)*++cur;
	if (yych == 'h') goto yy44;
	goto yy13;
yy16:
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych <= 'd') {
		if (yych != 'c') goto yy13;
	} else {
		if (yych <= 'e') goto yy23;
		if (yych == 'p') goto yy22;
		goto yy13;
	}
	yych = (unsigned char)*++cur;
	if (yych == 'h') goto yy39;
	goto yy13;
yy22:
	yych = (unsigned char)*++cur;
	if (yych == 'a') goto yy30;
	goto yy13;
yy23:
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	++cur;
#line 141 "../src/parse/lex_conf.re"
	{ opts.set_fill_use     (lex_conf_number () != 0); return; }
#line 219 "src/parse/lex_conf.cc"
yy30:
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'm') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	++cur;
#line 143 "../src/parse/lex_conf.re"
	{ opts.set_fill_arg_use (lex_conf_number () != 0); return; }
#line 238 "src/parse/lex_conf.cc"
yy39:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	++cur;
#line 145 "../src/parse/lex_conf.re"
	{ opts.set_fill_check   (lex_conf_number () != 0); return; }
#line 249 "src/parse/lex_conf.cc"
yy44:
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'c') goto yy47;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'm') goto yy58;
	goto yy13;
yy47:
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'v') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 's') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	++cur;
#line 137 "../src/parse/lex_conf.re"
	{ opts.set_yychConversion (lex_conf_number () != 0); return; }
#line 281 "src/parse/lex_conf.cc"
yy58:
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	++cur;
#line 138 "../src/parse/lex_conf.re"
	{ opts.set_bEmitYYCh      (lex_conf_number () != 0); return; }
#line 290 "src/parse/lex_conf.cc"
yy62:
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'h') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	++cur;
#line 95 "../src/parse/lex_conf.re"
	{ opts.set_yybmHexTable (lex_conf_number () != 0); return; }
#line 303 "src/parse/lex_conf.cc"
yy68:
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych <= 'c') {
		if (yych <= '`') goto yy13;
		if (yych <= 'a') goto yy82;
		if (yych <= 'b') goto yy81;
		goto yy79;
	} else {
		if (yych <= 'r') goto yy13;
		if (yych <= 's') goto yy78;
		if (yych <= 't') goto yy80;
		goto yy13;
	}
yy78:
	yych = (unsigned char)*++cur;
	if (yych == 't') goto yy105;
	goto yy13;
yy79:
	yych = (unsigned char)*++cur;
	if (yych == 'h') goto yy98;
	if (yych == 't') goto yy97;
	goto yy13;
yy80:
	yych = (unsigned char)*++cur;
	if (yych == 'a') goto yy91;
	goto yy13;
yy81:
	yych = (unsigned char)*++cur;
	if (yych == 'm') goto yy89;
	goto yy13;
yy82:
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'p') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	++cur;
#line 92 "../src/parse/lex_conf.re"
	{ opts.set_yyaccept        (lex_conf_string ()); return; }
#line 366 "src/parse/lex_conf.cc"
yy89:
	++cur;
#line 94 "../src/parse/lex_conf.re"
	{ opts.set_yybm         (lex_conf_string ()); return; }
#line 371 "src/parse/lex_conf.cc"
yy91:
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'g') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	++cur;
#line 106 "../src/parse/lex_conf.re"
	{ opts.set_yytarget (lex_conf_string ()); return; }
#line 384 "src/parse/lex_conf.cc"
yy97:
	yych = (unsigned char)*++cur;
	if (yych == 'a') goto yy100;
	goto yy13;
yy98:
	++cur;
#line 136 "../src/parse/lex_conf.re"
	{ opts.set_yych           (lex_conf_string ()); return; }
#line 393 "src/parse/lex_conf.cc"
yy100:
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	++cur;
#line 81 "../src/parse/lex_conf.re"
	{ opts.set_yyctable         (lex_conf_string ()); return; }
#line 404 "src/parse/lex_conf.cc"
yy105:
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	++cur;
#line 154 "../src/parse/lex_conf.re"
	{ lex_conf_string (); return; }
#line 417 "src/parse/lex_conf.cc"
yy111:
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'r') goto yy113;
	if (yych == 't') goto yy114;
	goto yy13;
yy113:
	yych = (unsigned char)*++cur;
	if (yych == 't') goto yy133;
	goto yy13;
yy114:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'a') goto yy117;
	if (yych == 'n') goto yy118;
	goto yy13;
yy117:
	yych = (unsigned char)*++cur;
	if (yych == 'b') goto yy128;
	goto yy13;
yy118:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	++cur;
#line 91 "../src/parse/lex_conf.re"
	{ opts.set_bUseStateNext   (lex_conf_number () != 0); return; }
#line 462 "src/parse/lex_conf.cc"
yy128:
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	++cur;
#line 90 "../src/parse/lex_conf.re"
	{ opts.set_bUseStateAbort  (lex_conf_number () != 0); return; }
#line 473 "src/parse/lex_conf.cc"
yy133:
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yyaccept = 1;
	yych = (unsigned char)*(ptr = ++cur);
	ctx = cur;
	if (yybm[0+yych] & 64) {
		goto yy140;
	}
	if (yych == '=') goto yy142;
yy139:
#line 151 "../src/parse/lex_conf.re"
	{ out.set_user_start_label (lex_conf_string ()); return; }
#line 495 "src/parse/lex_conf.cc"
yy140:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yybm[0+yych] & 64) {
		goto yy140;
	}
	if (yych != '=') goto yy13;
yy142:
	++cur;
	if ((lim - cur) < 2) fill(2);
	yych = (unsigned char)*cur;
	if (yych <= ',') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy13;
			goto yy142;
		} else {
			if (yych == ' ') goto yy142;
			goto yy13;
		}
	} else {
		if (yych <= '/') {
			if (yych <= '-') goto yy146;
			goto yy13;
		} else {
			if (yych <= '0') goto yy144;
			if (yych <= '9') goto yy147;
			goto yy13;
		}
	}
yy144:
	++cur;
yy145:
	cur = ctx;
#line 150 "../src/parse/lex_conf.re"
	{ out.set_force_start_label (lex_conf_number () != 0); return; }
#line 532 "src/parse/lex_conf.cc"
yy146:
	yych = (unsigned char)*++cur;
	if (yych <= '0') goto yy13;
	if (yych >= ':') goto yy13;
yy147:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yybm[0+yych] & 128) {
		goto yy147;
	}
	goto yy145;
yy149:
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == ':') goto yy154;
	if (yych != 'p') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'r') goto yy172;
	goto yy13;
yy154:
	yych = (unsigned char)*++cur;
	if (yych != 'y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'F') goto yy157;
	if (yych == 'N') goto yy158;
	goto yy13;
yy157:
	yych = (unsigned char)*++cur;
	if (yych == 'i') goto yy163;
	goto yy13;
yy158:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	++cur;
#line 89 "../src/parse/lex_conf.re"
	{ opts.set_yynext          (lex_conf_string ()); return; }
#line 581 "src/parse/lex_conf.cc"
yy163:
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'L') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'b') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	++cur;
#line 88 "../src/parse/lex_conf.re"
	{ opts.set_yyfilllabel     (lex_conf_string ()); return; }
#line 600 "src/parse/lex_conf.cc"
yy172:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'f') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	++cur;
#line 147 "../src/parse/lex_conf.re"
	{ opts.set_labelPrefix (lex_conf_string ()); return; }
#line 613 "src/parse/lex_conf.cc"
yy178:
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych <= 'r') goto yy13;
	if (yych <= 's') goto yy185;
	if (yych >= 'u') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'o') goto yy192;
	goto yy13;
yy185:
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'g') goto yy13;
	++cur;
#line 121 "../src/parse/lex_conf.re"
	{ opts.set_indString (lex_conf_string ()); return; }
#line 646 "src/parse/lex_conf.cc"
yy192:
	yych = (unsigned char)*++cur;
	if (yych != 'p') goto yy13;
	++cur;
#line 123 "../src/parse/lex_conf.re"
	{
		const int32_t n = lex_conf_number ();
		if (n < 0)
		{
			fatal ("configuration 'indent:top' must be nonnegative");
		}
		opts.set_topIndent (static_cast<uint32_t> (n));
		return;
	}
#line 661 "src/parse/lex_conf.cc"
yy195:
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'g') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 's') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych <= 'e') {
		if (yych == '8') goto yy200;
		if (yych <= 'd') goto yy13;
	} else {
		if (yych <= 'u') {
			if (yych <= 't') goto yy13;
		} else {
			if (yych <= 'v') goto yy13;
			if (yych >= 'y') goto yy13;
		}
	}
yy200:
	++cur;
#line 45 "../src/parse/lex_conf.re"
	{
		Enc::type_t enc = Enc::ASCII;
		switch (cur[-1])
		{
			case 'e': enc = Enc::EBCDIC; break;
			case 'w': enc = Enc::UCS2;   break;
			case 'x': enc = Enc::UTF16;  break;
			case 'u': enc = Enc::UTF32;  break;
			case '8': enc = Enc::UTF8;   break;
		}
		const int32_t n = lex_conf_number ();
		if (n == 0)
		{
			opts.unset_encoding (enc);
		}
		else if (!opts.set_encoding (enc))
		{
			fatalf ("Cannot set %s encoding: please reset %s encoding first"
				, Enc::name (enc)
				, Enc::name (opts->encoding.type ()));
		}
		return;
	}
#line 709 "src/parse/lex_conf.cc"
yy202:
	yych = (unsigned char)*++cur;
	if (yych != 'f') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'Y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'Y') goto yy13;
	yych = (unsigned char)*++cur;
	switch (yych) {
	case 'B':	goto yy215;
	case 'C':	goto yy211;
	case 'D':	goto yy212;
	case 'F':	goto yy210;
	case 'G':	goto yy219;
	case 'L':	goto yy213;
	case 'M':	goto yy218;
	case 'P':	goto yy217;
	case 'R':	goto yy214;
	case 'S':	goto yy216;
	default:	goto yy13;
	}
yy210:
	yych = (unsigned char)*++cur;
	if (yych == 'I') goto yy377;
	goto yy13;
yy211:
	yych = (unsigned char)*++cur;
	if (yych <= 'S') {
		if (yych == 'O') goto yy350;
		goto yy13;
	} else {
		if (yych <= 'T') goto yy352;
		if (yych <= 'U') goto yy351;
		goto yy13;
	}
yy212:
	yych = (unsigned char)*++cur;
	if (yych == 'E') goto yy345;
	goto yy13;
yy213:
	yych = (unsigned char)*++cur;
	if (yych == 'E') goto yy333;
	if (yych == 'I') goto yy332;
	goto yy13;
yy214:
	yych = (unsigned char)*++cur;
	if (yych == 'E') goto yy321;
	goto yy13;
yy215:
	yych = (unsigned char)*++cur;
	if (yych == 'A') goto yy311;
	goto yy13;
yy216:
	yych = (unsigned char)*++cur;
	if (yych == 'E') goto yy262;
	if (yych == 'K') goto yy263;
	goto yy13;
yy217:
	yych = (unsigned char)*++cur;
	if (yych == 'E') goto yy258;
	goto yy13;
yy218:
	yych = (unsigned char)*++cur;
	if (yych == 'A') goto yy252;
	goto yy13;
yy219:
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'C') goto yy222;
	if (yych == 'S') goto yy223;
	goto yy13;
yy222:
	yych = (unsigned char)*++cur;
	if (yych == 'O') goto yy236;
	goto yy13;
yy223:
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'A') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yyaccept = 2;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == ':') goto yy229;
yy228:
#line 83 "../src/parse/lex_conf.re"
	{ opts.set_state_get       (lex_conf_string ()); return; }
#line 811 "src/parse/lex_conf.cc"
yy229:
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 84 "../src/parse/lex_conf.re"
	{ opts.set_state_get_naked (lex_conf_number () != 0); return; }
#line 826 "src/parse/lex_conf.cc"
yy236:
	yych = (unsigned char)*++cur;
	if (yych != 'N') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'D') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'O') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'N') goto yy13;
	yyaccept = 3;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == ':') goto yy245;
yy244:
#line 70 "../src/parse/lex_conf.re"
	{ opts.set_cond_get         (lex_conf_string ()); return; }
#line 848 "src/parse/lex_conf.cc"
yy245:
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 71 "../src/parse/lex_conf.re"
	{ opts.set_cond_get_naked   (lex_conf_number () != 0); return; }
#line 863 "src/parse/lex_conf.cc"
yy252:
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'K') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	++cur;
#line 109 "../src/parse/lex_conf.re"
	{ opts.set_yymarker    (lex_conf_string ()); return; }
#line 876 "src/parse/lex_conf.cc"
yy258:
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'K') goto yy13;
	++cur;
#line 113 "../src/parse/lex_conf.re"
	{ opts.set_yypeek       (lex_conf_string ()); return; }
#line 885 "src/parse/lex_conf.cc"
yy262:
	yych = (unsigned char)*++cur;
	if (yych == 'T') goto yy267;
	goto yy13;
yy263:
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'P') goto yy13;
	++cur;
#line 114 "../src/parse/lex_conf.re"
	{ opts.set_yyskip       (lex_conf_string ()); return; }
#line 898 "src/parse/lex_conf.cc"
yy267:
	yych = (unsigned char)*++cur;
	if (yych == 'C') goto yy268;
	if (yych == 'S') goto yy269;
	goto yy13;
yy268:
	yych = (unsigned char)*++cur;
	if (yych == 'O') goto yy289;
	goto yy13;
yy269:
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'A') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yyaccept = 4;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == ':') goto yy276;
	if (yych == '@') goto yy275;
yy274:
#line 85 "../src/parse/lex_conf.re"
	{ opts.set_state_set       (lex_conf_string ()); return; }
#line 924 "src/parse/lex_conf.cc"
yy275:
	yych = (unsigned char)*++cur;
	if (yych == 's') goto yy283;
	goto yy13;
yy276:
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 86 "../src/parse/lex_conf.re"
	{ opts.set_state_set_naked (lex_conf_number () != 0); return; }
#line 943 "src/parse/lex_conf.cc"
yy283:
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	++cur;
#line 87 "../src/parse/lex_conf.re"
	{ opts.set_state_set_arg   (lex_conf_string ()); return; }
#line 956 "src/parse/lex_conf.cc"
yy289:
	yych = (unsigned char)*++cur;
	if (yych != 'N') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'D') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'O') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'N') goto yy13;
	yyaccept = 5;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == ':') goto yy298;
	if (yych == '@') goto yy299;
yy297:
#line 72 "../src/parse/lex_conf.re"
	{ opts.set_cond_set         (lex_conf_string ()); return; }
#line 979 "src/parse/lex_conf.cc"
yy298:
	yych = (unsigned char)*++cur;
	if (yych == 'n') goto yy305;
	goto yy13;
yy299:
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 73 "../src/parse/lex_conf.re"
	{ opts.set_cond_set_arg     (lex_conf_string ()); return; }
#line 996 "src/parse/lex_conf.cc"
yy305:
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 74 "../src/parse/lex_conf.re"
	{ opts.set_cond_set_naked   (lex_conf_number () != 0); return; }
#line 1009 "src/parse/lex_conf.cc"
yy311:
	yych = (unsigned char)*++cur;
	if (yych != 'C') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'K') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'U') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'P') goto yy13;
	yyaccept = 6;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'C') goto yy317;
yy316:
#line 115 "../src/parse/lex_conf.re"
	{ opts.set_yybackup     (lex_conf_string ()); return; }
#line 1025 "src/parse/lex_conf.cc"
yy317:
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'X') goto yy13;
	++cur;
#line 116 "../src/parse/lex_conf.re"
	{ opts.set_yybackupctx  (lex_conf_string ()); return; }
#line 1034 "src/parse/lex_conf.cc"
yy321:
	yych = (unsigned char)*++cur;
	if (yych != 'S') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'O') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yyaccept = 7;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == 'C') goto yy328;
yy327:
#line 117 "../src/parse/lex_conf.re"
	{ opts.set_yyrestore    (lex_conf_string ()); return; }
#line 1052 "src/parse/lex_conf.cc"
yy328:
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'X') goto yy13;
	++cur;
#line 118 "../src/parse/lex_conf.re"
	{ opts.set_yyrestorectx (lex_conf_string ()); return; }
#line 1061 "src/parse/lex_conf.cc"
yy332:
	yych = (unsigned char)*++cur;
	if (yych == 'M') goto yy341;
	goto yy13;
yy333:
	yych = (unsigned char)*++cur;
	if (yych != 'S') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'S') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'H') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'A') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'N') goto yy13;
	++cur;
#line 119 "../src/parse/lex_conf.re"
	{ opts.set_yylessthan   (lex_conf_string ()); return; }
#line 1082 "src/parse/lex_conf.cc"
yy341:
	yych = (unsigned char)*++cur;
	if (yych != 'I') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	++cur;
#line 111 "../src/parse/lex_conf.re"
	{ opts.set_yylimit     (lex_conf_string ()); return; }
#line 1091 "src/parse/lex_conf.cc"
yy345:
	yych = (unsigned char)*++cur;
	if (yych != 'B') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'U') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'G') goto yy13;
	++cur;
#line 133 "../src/parse/lex_conf.re"
	{ opts.set_yydebug (lex_conf_string ()); return; }
#line 1102 "src/parse/lex_conf.cc"
yy350:
	yych = (unsigned char)*++cur;
	if (yych == 'N') goto yy370;
	goto yy13;
yy351:
	yych = (unsigned char)*++cur;
	if (yych == 'R') goto yy365;
	goto yy13;
yy352:
	yych = (unsigned char)*++cur;
	if (yych <= 'W') goto yy13;
	if (yych <= 'X') goto yy354;
	if (yych >= 'Z') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'P') goto yy362;
	goto yy13;
yy354:
	yych = (unsigned char)*++cur;
	if (yych != 'M') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'A') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'K') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	++cur;
#line 110 "../src/parse/lex_conf.re"
	{ opts.set_yyctxmarker (lex_conf_string ()); return; }
#line 1135 "src/parse/lex_conf.cc"
yy362:
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	++cur;
#line 135 "../src/parse/lex_conf.re"
	{ opts.set_yyctype        (lex_conf_string ()); return; }
#line 1142 "src/parse/lex_conf.cc"
yy365:
	yych = (unsigned char)*++cur;
	if (yych != 'S') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'O') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'R') goto yy13;
	++cur;
#line 108 "../src/parse/lex_conf.re"
	{ opts.set_yycursor    (lex_conf_string ()); return; }
#line 1153 "src/parse/lex_conf.cc"
yy370:
	yych = (unsigned char)*++cur;
	if (yych != 'D') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'T') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'Y') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'P') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'E') goto yy13;
	++cur;
#line 69 "../src/parse/lex_conf.re"
	{ opts.set_yycondtype       (lex_conf_string ()); return; }
#line 1168 "src/parse/lex_conf.cc"
yy377:
	yych = (unsigned char)*++cur;
	if (yych != 'L') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'L') goto yy13;
	yyaccept = 8;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == ':') goto yy381;
	if (yych == '@') goto yy382;
yy380:
#line 140 "../src/parse/lex_conf.re"
	{ opts.set_fill         (lex_conf_string ()); return; }
#line 1181 "src/parse/lex_conf.cc"
yy381:
	yych = (unsigned char)*++cur;
	if (yych == 'n') goto yy387;
	goto yy13;
yy382:
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	++cur;
#line 142 "../src/parse/lex_conf.re"
	{ opts.set_fill_arg     (lex_conf_string ()); return; }
#line 1196 "src/parse/lex_conf.cc"
yy387:
	yych = (unsigned char)*++cur;
	if (yych != 'a') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'k') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 144 "../src/parse/lex_conf.re"
	{ opts.set_fill_naked   (lex_conf_number () != 0); return; }
#line 1209 "src/parse/lex_conf.cc"
yy393:
	yych = (unsigned char)*++cur;
	if (yych == 'o') goto yy441;
	goto yy13;
yy394:
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych <= 'd') {
		if (yych == ':') goto yy399;
		goto yy13;
	} else {
		if (yych <= 'e') goto yy398;
		if (yych != 'p') goto yy13;
	}
	yych = (unsigned char)*++cur;
	if (yych == 'r') goto yy435;
	goto yy13;
yy398:
	yych = (unsigned char)*++cur;
	if (yych == 'n') goto yy425;
	goto yy13;
yy399:
	yych = (unsigned char)*++cur;
	if (yych == 'd') goto yy401;
	if (yych != 'g') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych == 'o') goto yy415;
	goto yy13;
yy401:
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'v') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yyaccept = 9;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == '@') goto yy409;
yy408:
#line 77 "../src/parse/lex_conf.re"
	{ opts.set_condDivider      (lex_conf_string ()); return; }
#line 1260 "src/parse/lex_conf.cc"
yy409:
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 78 "../src/parse/lex_conf.re"
	{ opts.set_condDividerParam (lex_conf_string ()); return; }
#line 1273 "src/parse/lex_conf.cc"
yy415:
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yyaccept = 10;
	yych = (unsigned char)*(ptr = ++cur);
	if (yych == '@') goto yy419;
yy418:
#line 79 "../src/parse/lex_conf.re"
	{ opts.set_condGoto         (lex_conf_string ()); return; }
#line 1285 "src/parse/lex_conf.cc"
yy419:
	yych = (unsigned char)*++cur;
	if (yych != 'c') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'n') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 80 "../src/parse/lex_conf.re"
	{ opts.set_condGotoParam    (lex_conf_string ()); return; }
#line 1298 "src/parse/lex_conf.cc"
yy425:
	yych = (unsigned char)*++cur;
	if (yych != 'u') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'm') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'p') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'f') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	++cur;
#line 76 "../src/parse/lex_conf.re"
	{ opts.set_condEnumPrefix   (lex_conf_string ()); return; }
#line 1319 "src/parse/lex_conf.cc"
yy435:
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'f') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'i') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'x') goto yy13;
	++cur;
#line 75 "../src/parse/lex_conf.re"
	{ opts.set_condPrefix       (lex_conf_string ()); return; }
#line 1332 "src/parse/lex_conf.cc"
yy441:
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != ':') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 't') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'h') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'r') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'e') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 's') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'h') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'o') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'l') goto yy13;
	yych = (unsigned char)*++cur;
	if (yych != 'd') goto yy13;
	++cur;
#line 97 "../src/parse/lex_conf.re"
	{
		const int32_t n = lex_conf_number ();
		if (n < 0)
		{
			fatal ("configuration 'cgoto:threshold' must be nonnegative");
		}
		opts.set_cGotoThreshold (static_cast<uint32_t> (n));
		return;
	}
#line 1369 "src/parse/lex_conf.cc"
}
#line 155 "../src/parse/lex_conf.re"

}

void Scanner::lex_conf_assign ()
{

#line 1378 "src/parse/lex_conf.cc"
{
	unsigned char yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) fill(2);
	yych = (unsigned char)*cur;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy459;
	} else {
		if (yych <= ' ') goto yy459;
		if (yych == '=') goto yy460;
	}
	++cur;
yy458:
#line 161 "../src/parse/lex_conf.re"
	{ fatal ("missing '=' in configuration"); }
#line 1427 "src/parse/lex_conf.cc"
yy459:
	yych = (unsigned char)*(ptr = ++cur);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy464;
		goto yy458;
	} else {
		if (yych <= ' ') goto yy464;
		if (yych == '=') goto yy462;
		goto yy458;
	}
yy460:
	++cur;
	yych = (unsigned char)*cur;
	goto yy463;
yy461:
#line 162 "../src/parse/lex_conf.re"
	{ return; }
#line 1445 "src/parse/lex_conf.cc"
yy462:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
yy463:
	if (yybm[0+yych] & 128) {
		goto yy462;
	}
	goto yy461;
yy464:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy464;
	} else {
		if (yych <= ' ') goto yy464;
		if (yych == '=') goto yy462;
	}
	cur = ptr;
	goto yy458;
}
#line 163 "../src/parse/lex_conf.re"

}

void Scanner::lex_conf_semicolon ()
{

#line 1475 "src/parse/lex_conf.cc"
{
	unsigned char yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) fill(2);
	yych = (unsigned char)*cur;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy471;
	} else {
		if (yych <= ' ') goto yy471;
		if (yych == ';') goto yy472;
	}
	++cur;
yy470:
#line 169 "../src/parse/lex_conf.re"
	{ fatal ("missing ending ';' in configuration"); }
#line 1524 "src/parse/lex_conf.cc"
yy471:
	yych = (unsigned char)*(ptr = ++cur);
	if (yybm[0+yych] & 128) {
		goto yy475;
	}
	if (yych == ';') goto yy474;
	goto yy470;
yy472:
	++cur;
yy473:
#line 170 "../src/parse/lex_conf.re"
	{ return; }
#line 1537 "src/parse/lex_conf.cc"
yy474:
	yych = (unsigned char)*++cur;
	goto yy473;
yy475:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yybm[0+yych] & 128) {
		goto yy475;
	}
	if (yych == ';') goto yy474;
	cur = ptr;
	goto yy470;
}
#line 171 "../src/parse/lex_conf.re"

}

int32_t Scanner::lex_conf_number ()
{
	lex_conf_assign ();
	tok = cur;

#line 1561 "src/parse/lex_conf.cc"
{
	unsigned char yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) fill(2);
	yych = (unsigned char)*cur;
	if (yych <= '/') {
		if (yych == '-') goto yy483;
	} else {
		if (yych <= '0') goto yy481;
		if (yych <= '9') goto yy484;
	}
yy480:
yy481:
	++cur;
yy482:
#line 180 "../src/parse/lex_conf.re"
	{
		int32_t n = 0;
		if (!s_to_i32_unsafe (tok, cur, n))
		{
			fatal ("configuration value overflow");
		}
		lex_conf_semicolon ();
		return n;
	}
#line 1620 "src/parse/lex_conf.cc"
yy483:
	yych = (unsigned char)*++cur;
	if (yych <= '0') goto yy480;
	if (yych >= ':') goto yy480;
yy484:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yybm[0+yych] & 128) {
		goto yy484;
	}
	goto yy482;
}
#line 189 "../src/parse/lex_conf.re"

}

std::string Scanner::lex_conf_string ()
{
	lex_conf_assign ();
	std::string s;
	tok = cur;

#line 1644 "src/parse/lex_conf.cc"
{
	unsigned char yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128,   0,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128,   0, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yych <= '!') {
		if (yych <= '\n') {
			if (yych <= 0x08) goto yy491;
		} else {
			if (yych != ' ') goto yy491;
		}
	} else {
		if (yych <= '\'') {
			if (yych <= '"') goto yy489;
			if (yych <= '&') goto yy491;
			goto yy489;
		} else {
			if (yych != ';') goto yy491;
		}
	}
yy488:
#line 212 "../src/parse/lex_conf.re"
	{
		s = std::string(tok, tok_len());
		goto end;
	}
#line 1704 "src/parse/lex_conf.cc"
yy489:
	++cur;
#line 198 "../src/parse/lex_conf.re"
	{
		const char quote = tok[0];
		for (bool end;;) {
			const uint32_t c = lex_str_chr(quote, end);
			if (end) {
				goto end;
			}
			if (c > 0xFF) {
				fatalf ("multibyte character in configuration string: 0x%X", c);
			} else {
				s += static_cast<char>(c);
			}
		}
	}
#line 1722 "src/parse/lex_conf.cc"
yy491:
	++cur;
	if (lim <= cur) fill(1);
	yych = (unsigned char)*cur;
	if (yybm[0+yych] & 128) {
		goto yy491;
	}
	goto yy488;
}
#line 216 "../src/parse/lex_conf.re"

end:
	lex_conf_semicolon ();
	return s;
}

} // end namespace re2c
