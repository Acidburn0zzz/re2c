/* Generated by re2c 0.14.3 on Mon Oct 12 14:08:24 2015 */
#line 1 "../src/parse/scanner_lex.re"
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <sstream>

#include "src/ir/dfa/dfa.h"
#include "src/globals.h"
#include "src/parse/extop.h"
#include "src/parse/parser.h"
#include "src/parse/scanner.h"
#include "src/parse/unescape.h"
#include "y.tab.h"
#include "src/util/s_to_n32_unsafe.h"

extern YYSTYPE yylval;

#define	YYCTYPE		unsigned char
#define	YYCURSOR	cur
#define	YYLIMIT		lim
#define	YYMARKER	ptr
#define	YYCTXMARKER ctx
#define	YYFILL(n)	{ fill (n); }

namespace re2c
{

// source code is in ASCII: pointers have type 'char *'
// but re2c makes an implicit assumption that YYCTYPE is unsigned
// when it generates comparisons
#line 32 "../src/parse/scanner_lex.re"


#line 58 "../src/parse/scanner_lex.re"


Scanner::ParseMode Scanner::echo()
{
	bool ignore_eoc = false;
	int  ignore_cnt = 0;

	if (eof && cur == eof) // Catch EOF
	{
		return Stop;
	}

	tok = cur;
echo:

#line 52 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};

	if ((YYLIMIT - YYCURSOR) < 16) YYFILL(16);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '%') {
		if (yych <= '\t') {
			if (yych >= 0x01) goto yy4;
		} else {
			if (yych <= '\n') goto yy6;
			if (yych <= '$') goto yy4;
			goto yy8;
		}
	} else {
		if (yych <= '*') {
			if (yych <= ')') goto yy4;
			goto yy9;
		} else {
			if (yych == '/') goto yy10;
			goto yy4;
		}
	}
	++YYCURSOR;
#line 201 "../src/parse/scanner_lex.re"
	{
					if (!ignore_eoc && opts->target == opt_t::CODE)
					{
						out.write(tok, tok_len () - 1);
						// -1 so we don't write out the \0
					}
					if(cur == eof)
					{
						return Stop;
					}
				}
#line 123 "src/parse/scanner_lex.cc"
yy4:
	++YYCURSOR;
yy5:
#line 212 "../src/parse/scanner_lex.re"
	{
					goto echo;
				}
#line 131 "src/parse/scanner_lex.cc"
yy6:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych == '#') goto yy91;
yy7:
#line 188 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						ignore_cnt++;
					}
					else if (opts->target == opt_t::CODE)
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					cline++;
					goto echo;
				}
#line 154 "src/parse/scanner_lex.cc"
yy8:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '{') goto yy32;
	goto yy5;
yy9:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy84;
	goto yy5;
yy10:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != '*') goto yy5;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '!') goto yy13;
yy12:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy7;
		} else {
			goto yy5;
		}
	} else {
		goto yy85;
	}
yy13:
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy16;
	case 'i':	goto yy15;
	case 'm':	goto yy17;
	case 'r':	goto yy19;
	case 't':	goto yy14;
	case 'u':	goto yy18;
	default:	goto yy12;
	}
yy14:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'y') goto yy74;
	goto yy12;
yy15:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'g') goto yy63;
	goto yy12;
yy16:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy50;
	goto yy12;
yy17:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy42;
	goto yy12;
yy18:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy34;
	goto yy12;
yy19:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy20;
	if (yych == 'u') goto yy21;
	goto yy12;
yy20:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '2') goto yy31;
	goto yy12;
yy21:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 89 "../src/parse/scanner_lex.re"
	{
					if (opts->rFlag)
					{
						opts.reset_mapCodeName ();
					}
					else
					{
						fatal("found 'rules:re2c' block without -r flag");
					}
					tok = cur;
					return Rules;
				}
#line 251 "src/parse/scanner_lex.cc"
yy31:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
yy32:
	++YYCURSOR;
#line 74 "../src/parse/scanner_lex.re"
	{
					if (opts->rFlag)
					{
						fatal("found standard 're2c' block while using -r flag");
					}
					if (opts->target == opt_t::CODE)
					{
						const size_t lexeme_len = cur[-1] == '{'
							? sizeof ("%{") - 1
							: sizeof ("/*!re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Parse;
				}
#line 273 "src/parse/scanner_lex.cc"
yy34:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 101 "../src/parse/scanner_lex.re"
	{
					if (!opts->rFlag)
					{
						fatal("found 'use:re2c' block without -r flag");
					}
					reuse();
					if (opts->target == opt_t::CODE)
					{
						const size_t lexeme_len = sizeof ("/*!use:re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Reuse;
				}
#line 303 "src/parse/scanner_lex.cc"
yy42:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 115 "../src/parse/scanner_lex.re"
	{
					if (opts->target != opt_t::DOT)
					{
						out.insert_yymaxfill ();
					}
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 328 "src/parse/scanner_lex.cc"
yy50:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 124 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					out.insert_state_goto (opts->topIndent);
					ignore_eoc = true;
					goto echo;
				}
#line 360 "src/parse/scanner_lex.cc"
yy63:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 130 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 387 "src/parse/scanner_lex.cc"
yy74:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 135 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					if (opts->target != opt_t::DOT)
					{
						out.insert_line_info ();
						out << "\n";
						out.insert_types ();
						out << "\n";
						out.write_line_info (cline, get_fname ().c_str ());
					}
					goto echo;
				}
#line 420 "src/parse/scanner_lex.cc"
yy84:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy87;
	if (yych == '\r') goto yy86;
yy85:
#line 166 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out << "\n";
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (opts->target == opt_t::CODE)
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 446 "src/parse/scanner_lex.cc"
yy86:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy12;
yy87:
	++YYCURSOR;
#line 148 "../src/parse/scanner_lex.re"
	{
					cline++;
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (opts->target == opt_t::CODE)
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 471 "src/parse/scanner_lex.cc"
yy89:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych != '#') goto yy12;
yy91:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy91;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy91;
		if (yych != 'l') goto yy12;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy98;
	if (yych <= '9') goto yy12;
	goto yy98;
yy97:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy98:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy97;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy97;
		if (yych <= '0') goto yy12;
		if (yych >= ':') goto yy12;
	}
yy99:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy99;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy12;
		if (yych <= '\t') goto yy101;
		if (yych <= '\n') goto yy103;
		goto yy12;
	} else {
		if (yych <= '\r') goto yy105;
		if (yych != ' ') goto yy12;
	}
yy101:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy101;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy101;
		if (yych == '"') goto yy106;
		goto yy12;
	}
yy103:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 184 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto echo;
				}
#line 551 "src/parse/scanner_lex.cc"
yy105:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy103;
	goto yy12;
yy106:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy106;
	}
	if (yych <= '\n') goto yy12;
	if (yych <= '"') goto yy109;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy12;
	goto yy106;
yy109:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy103;
	if (yych == '\r') goto yy105;
	goto yy12;
}
#line 215 "../src/parse/scanner_lex.re"

}

int Scanner::scan()
{
	uint32_t depth;

scan:
	tchar = cur - pos;
	tline = cline;
	tok = cur;
	switch (lexer_state)
	{
		case LEX_NORMAL:    goto start;
		case LEX_FLEX_NAME: goto flex_name;
	}

start:

#line 596 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 192,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 128, 128, 128, 128, 128, 128, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128,   0, 128, 128, 160, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\f') {
				if (yych <= 0x08) goto yy112;
				if (yych <= '\t') goto yy114;
				if (yych <= '\n') goto yy116;
			} else {
				if (yych <= 0x1F) {
					if (yych <= '\r') goto yy118;
				} else {
					if (yych <= ' ') goto yy114;
					if (yych >= '"') goto yy119;
				}
			}
		} else {
			if (yych <= ')') {
				if (yych <= '%') {
					if (yych >= '%') goto yy121;
				} else {
					if (yych <= '&') goto yy112;
					if (yych <= '\'') goto yy122;
					goto yy124;
				}
			} else {
				if (yych <= '+') {
					if (yych <= '*') goto yy126;
					goto yy128;
				} else {
					if (yych <= ',') goto yy124;
					if (yych >= '.') goto yy130;
				}
			}
		}
	} else {
		if (yych <= '[') {
			if (yych <= '<') {
				if (yych <= '9') {
					if (yych <= '/') goto yy132;
					goto yy133;
				} else {
					if (yych <= ':') goto yy134;
					if (yych <= ';') goto yy124;
					goto yy135;
				}
			} else {
				if (yych <= '?') {
					if (yych <= '>') goto yy124;
					goto yy128;
				} else {
					if (yych <= '@') goto yy112;
					if (yych <= 'Z') goto yy133;
					goto yy136;
				}
			}
		} else {
			if (yych <= 'q') {
				if (yych <= '^') {
					if (yych <= '\\') goto yy124;
				} else {
					if (yych != '`') goto yy133;
				}
			} else {
				if (yych <= 'z') {
					if (yych <= 'r') goto yy138;
					goto yy133;
				} else {
					if (yych <= '{') goto yy139;
					if (yych <= '|') goto yy124;
				}
			}
		}
	}
yy112:
	++YYCURSOR;
yy113:
#line 410 "../src/parse/scanner_lex.re"
	{
					fatalf("unexpected character: '%c'", *tok);
					goto scan;
				}
#line 716 "src/parse/scanner_lex.cc"
yy114:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy220;
yy115:
#line 394 "../src/parse/scanner_lex.re"
	{
					goto scan;
				}
#line 726 "src/parse/scanner_lex.cc"
yy116:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy198;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych == '#') goto yy200;
	}
yy117:
#line 403 "../src/parse/scanner_lex.re"
	{
					if (cur == eof) return 0;
					pos = cur;
					cline++;
					goto scan;
				}
#line 744 "src/parse/scanner_lex.cc"
yy118:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy197;
	goto yy113;
yy119:
	++YYCURSOR;
#line 271 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints ('"', cpoints);
		yylval.regexp = cpoint_string (cpoints, opts->bCaseInsensitive || opts->bCaseInverted);
		return REGEXP;
	}
#line 758 "src/parse/scanner_lex.cc"
yy121:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '}') goto yy195;
	goto yy113;
yy122:
	++YYCURSOR;
#line 264 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints ('\'', cpoints);
		yylval.regexp = cpoint_string (cpoints, opts->bCaseInsensitive || !opts->bCaseInverted);
		return REGEXP;
	}
#line 772 "src/parse/scanner_lex.cc"
yy124:
	++YYCURSOR;
yy125:
#line 298 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 780 "src/parse/scanner_lex.cc"
yy126:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '/') goto yy195;
#line 302 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return STAR;
				}
#line 789 "src/parse/scanner_lex.cc"
yy128:
	++YYCURSOR;
#line 306 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return CLOSE;
				}
#line 797 "src/parse/scanner_lex.cc"
yy130:
	++YYCURSOR;
#line 389 "../src/parse/scanner_lex.re"
	{
					yylval.regexp = mkDot();
					return REGEXP;
				}
#line 805 "src/parse/scanner_lex.cc"
yy132:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '*') goto yy191;
	if (yych == '/') goto yy193;
	goto yy125;
yy133:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy165;
yy134:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy187;
	goto yy113;
yy135:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '!') goto yy178;
	if (yych == '>') goto yy180;
	goto yy125;
yy136:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '^') goto yy176;
#line 278 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (']', cpoints);
		yylval.regexp = cpoint_class (cpoints, false);
		return REGEXP;
	}
#line 836 "src/parse/scanner_lex.cc"
yy138:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy166;
	goto yy165;
yy139:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 16) {
		goto yy141;
	}
	if (yych <= 'Z') {
		if (yych == ',') goto yy146;
		if (yych >= 'A') goto yy144;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto yy144;
		} else {
			if (yych <= '`') goto yy140;
			if (yych <= 'z') goto yy144;
		}
	}
yy140:
#line 234 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto code;
				}
#line 865 "src/parse/scanner_lex.cc"
yy141:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 16) {
		goto yy141;
	}
	if (yych <= '^') {
		if (yych <= ',') {
			if (yych >= ',') goto yy152;
		} else {
			if (yych <= '@') goto yy143;
			if (yych <= 'Z') goto yy144;
		}
	} else {
		if (yych <= 'z') {
			if (yych != '`') goto yy144;
		} else {
			if (yych == '}') goto yy150;
		}
	}
yy143:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy117;
		} else {
			goto yy125;
		}
	} else {
		if (yyaccept == 2) {
			goto yy140;
		} else {
			goto yy147;
		}
	}
yy144:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy144;
	}
	if (yych == '}') goto yy148;
	goto yy143;
yy146:
	++YYCURSOR;
yy147:
#line 342 "../src/parse/scanner_lex.re"
	{
					fatal("illegal closure form, use '{n}', '{n,}', '{n,m}' where n and m are numbers");
				}
#line 918 "src/parse/scanner_lex.cc"
yy148:
	++YYCURSOR;
#line 346 "../src/parse/scanner_lex.re"
	{
					if (!opts->FFlag) {
						fatal("curly braces for names only allowed with -F switch");
					}
					yylval.str = new std::string (tok + 1, tok_len () - 2); // -2 to omit braces
					return ID;
				}
#line 929 "src/parse/scanner_lex.cc"
yy150:
	++YYCURSOR;
#line 311 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 1, yylval.extop.min))
					{
						fatal ("repetition count overflow");
					}
					yylval.extop.max = yylval.extop.min;
					return CLOSESIZE;
				}
#line 941 "src/parse/scanner_lex.cc"
yy152:
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy147;
	if (yych <= '9') goto yy155;
	if (yych != '}') goto yy147;
	++YYCURSOR;
#line 333 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 2, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					yylval.extop.max = UINT32_MAX;
					return CLOSESIZE;
				}
#line 958 "src/parse/scanner_lex.cc"
yy155:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '/') goto yy143;
	if (yych <= '9') goto yy155;
	if (yych != '}') goto yy143;
	++YYCURSOR;
#line 320 "../src/parse/scanner_lex.re"
	{
					const char * p = strchr (tok, ',');
					if (!s_to_u32_unsafe (tok + 1, p, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					if (!s_to_u32_unsafe (p + 1, cur - 1, yylval.extop.max))
					{
						fatal ("repetition upper bound overflow");
					}
					return CLOSESIZE;
				}
#line 980 "src/parse/scanner_lex.cc"
yy159:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 374 "../src/parse/scanner_lex.re"
	{
					if (!opts->FFlag) {
						yylval.str = new std::string (tok, tok_len ());
						return ID;
					} else {
						std::vector<uint32_t> cpoints;
						for (char * p = tok; p < cur; ++p)
						{
							cpoints.push_back (static_cast<uint8_t> (*p));
						}
						yylval.regexp = cpoint_string (cpoints, opts->bCaseInsensitive || opts->bCaseInverted);
						return REGEXP;
					}
				}
#line 999 "src/parse/scanner_lex.cc"
yy161:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy174;
yy162:
	++YYCURSOR;
yy163:
	YYCURSOR = YYCTXMARKER;
#line 369 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					return ID;
				}
#line 1012 "src/parse/scanner_lex.cc"
yy164:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy165:
	if (yych <= '9') {
		if (yych <= ' ') {
			if (yych == '\t') goto yy161;
			if (yych <= 0x1F) goto yy159;
			goto yy161;
		} else {
			if (yych == ',') goto yy162;
			if (yych <= '/') goto yy159;
			goto yy164;
		}
	} else {
		if (yych <= 'Z') {
			if (yych <= '<') goto yy159;
			if (yych <= '>') goto yy162;
			if (yych <= '@') goto yy159;
			goto yy164;
		} else {
			if (yych <= '_') {
				if (yych <= '^') goto yy159;
				goto yy164;
			} else {
				if (yych <= '`') goto yy159;
				if (yych <= 'z') goto yy164;
				goto yy159;
			}
		}
	}
yy166:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy165;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy165;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy165;
	++YYCURSOR;
#line 354 "../src/parse/scanner_lex.re"
	{ goto conf; }
#line 1059 "src/parse/scanner_lex.cc"
yy171:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 356 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					if (opts->FFlag)
					{
						lexer_state = LEX_FLEX_NAME;
						return FID;
					}
					else
					{
						return ID;
					}
				}
#line 1076 "src/parse/scanner_lex.cc"
yy173:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy174:
	if (yybm[0+yych] & 64) {
		goto yy173;
	}
	if (yych == ',') goto yy175;
	if (yych <= '<') goto yy171;
	if (yych >= '?') goto yy171;
yy175:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy163;
yy176:
	++YYCURSOR;
#line 285 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (']', cpoints);
		yylval.regexp = cpoint_class (cpoints, true);
		return REGEXP;
	}
#line 1100 "src/parse/scanner_lex.cc"
yy178:
	++YYCURSOR;
#line 295 "../src/parse/scanner_lex.re"
	{
					return SETUP;
				}
#line 1107 "src/parse/scanner_lex.cc"
yy180:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy182;
yy181:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy182:
	if (yych <= '9') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy143;
			goto yy181;
		} else {
			if (yych == ' ') goto yy181;
			goto yy143;
		}
	} else {
		if (yych <= '=') {
			if (yych <= ':') goto yy186;
			if (yych <= '<') goto yy143;
			goto yy185;
		} else {
			if (yych != '{') goto yy143;
		}
	}
yy183:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 292 "../src/parse/scanner_lex.re"
	{
					return NOCOND;
				}
#line 1141 "src/parse/scanner_lex.cc"
yy185:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '>') goto yy183;
	goto yy143;
yy186:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy183;
	goto yy143;
yy187:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '>') goto yy189;
#line 243 "../src/parse/scanner_lex.re"
	{
					tok += 2; /* skip ":=" */
					depth = 0;
					goto code;
				}
#line 1159 "src/parse/scanner_lex.cc"
yy189:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 239 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 1167 "src/parse/scanner_lex.cc"
yy191:
	++YYCURSOR;
#line 252 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto comment;
				}
#line 1175 "src/parse/scanner_lex.cc"
yy193:
	++YYCURSOR;
#line 249 "../src/parse/scanner_lex.re"
	{
				goto nextLine;
			}
#line 1182 "src/parse/scanner_lex.cc"
yy195:
	++YYCURSOR;
#line 258 "../src/parse/scanner_lex.re"
	{
					tok = cur;
					return 0;
				}
#line 1190 "src/parse/scanner_lex.cc"
yy197:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych != '\t') goto yy117;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych == '#') goto yy200;
		goto yy117;
	}
yy198:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy198;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych != '#') goto yy143;
	}
yy200:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy200;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy200;
		if (yych != 'l') goto yy143;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy143;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy207;
	if (yych <= '9') goto yy143;
	goto yy207;
yy206:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy207:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy206;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy206;
		if (yych <= '0') goto yy143;
		if (yych >= ':') goto yy143;
	}
yy208:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy143;
		} else {
			if (yych <= '\n') goto yy212;
			if (yych <= '\f') goto yy143;
			goto yy214;
		}
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy143;
		} else {
			if (yych <= '/') goto yy143;
			if (yych <= '9') goto yy208;
			goto yy143;
		}
	}
yy210:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy210;
		goto yy143;
	} else {
		if (yych <= ' ') goto yy210;
		if (yych == '"') goto yy215;
		goto yy143;
	}
yy212:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 398 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto scan;
				}
#line 1288 "src/parse/scanner_lex.cc"
yy214:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy212;
	goto yy143;
yy215:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy215;
	}
	if (yych <= '\n') goto yy143;
	if (yych <= '"') goto yy218;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy143;
	goto yy215;
yy218:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy212;
	if (yych == '\r') goto yy214;
	goto yy143;
yy219:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy220:
	if (yych == '\t') goto yy219;
	if (yych == ' ') goto yy219;
	goto yy115;
}
#line 414 "../src/parse/scanner_lex.re"


flex_name:

#line 1326 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy225;
	if (yych == '\r') goto yy227;
	++YYCURSOR;
yy224:
#line 425 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		goto start;
	}
#line 1340 "src/parse/scanner_lex.cc"
yy225:
	++YYCURSOR;
yy226:
#line 419 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		lexer_state = LEX_NORMAL;
		return FID_END;
	}
#line 1350 "src/parse/scanner_lex.cc"
yy227:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy224;
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy226;
}
#line 429 "../src/parse/scanner_lex.re"


code:

#line 1363 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48, 112,   0,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		112,  48,  16,  48,  48,  48,  48,  32, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,   0,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
	};
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '&') {
		if (yych <= '\n') {
			if (yych <= 0x00) goto yy231;
			if (yych <= '\t') goto yy233;
			goto yy235;
		} else {
			if (yych == '"') goto yy237;
			goto yy233;
		}
	} else {
		if (yych <= '{') {
			if (yych <= '\'') goto yy238;
			if (yych <= 'z') goto yy233;
			goto yy239;
		} else {
			if (yych == '}') goto yy241;
			goto yy233;
		}
	}
yy231:
	++YYCURSOR;
#line 492 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						if (depth)
						{
							fatal("missing '}'");
						}
						return 0;
					}
					goto code;
				}
#line 1436 "src/parse/scanner_lex.cc"
yy233:
	++YYCURSOR;
yy234:
#line 506 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1444 "src/parse/scanner_lex.cc"
yy235:
	YYCTXMARKER = YYCURSOR + 1;
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych >= '\t') goto yy252;
		} else {
			if (yych <= '\n') goto yy254;
			if (yych >= '\r') goto yy254;
		}
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy252;
		} else {
			if (yych == '#') goto yy255;
		}
	}
yy236:
#line 473 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						tok += strspn(tok, " \t\r\n");
						while (cur > tok && strchr(" \t\r\n", cur[-1]))
						{
							--cur;
						}
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1484 "src/parse/scanner_lex.cc"
yy237:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy234;
	goto yy250;
yy238:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy234;
	goto yy244;
yy239:
	++YYCURSOR;
#line 445 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else
					{
						++depth;
					}
					goto code;
				}
#line 1509 "src/parse/scanner_lex.cc"
yy241:
	++YYCURSOR;
#line 433 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else if (--depth == 0)
					{
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					goto code;
				}
#line 1525 "src/parse/scanner_lex.cc"
yy243:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy244:
	if (yybm[0+yych] & 16) {
		goto yy243;
	}
	if (yych <= '\n') goto yy245;
	if (yych <= '\'') goto yy247;
	goto yy246;
yy245:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy236;
		} else {
			goto yy234;
		}
	} else {
		goto yy253;
	}
yy246:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy243;
yy247:
	++YYCURSOR;
#line 503 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1560 "src/parse/scanner_lex.cc"
yy249:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy250:
	if (yybm[0+yych] & 32) {
		goto yy249;
	}
	if (yych <= '\n') goto yy245;
	if (yych <= '"') goto yy247;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy249;
yy252:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy274;
	} else {
		if (yych <= ' ') goto yy274;
		if (yych == '#') goto yy255;
	}
yy253:
	YYCURSOR = YYCTXMARKER;
#line 460 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						goto code;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1601 "src/parse/scanner_lex.cc"
yy254:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy253;
yy255:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy255;
	}
	if (yych != 'l') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy245;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy262;
	if (yych <= '9') goto yy245;
	goto yy262;
yy261:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy262:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy261;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy261;
		if (yych <= '0') goto yy245;
		if (yych >= ':') goto yy245;
	}
yy263:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy263;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy245;
		if (yych <= '\t') goto yy265;
		if (yych <= '\n') goto yy267;
		goto yy245;
	} else {
		if (yych <= '\r') goto yy269;
		if (yych != ' ') goto yy245;
	}
yy265:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy265;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy265;
		if (yych == '"') goto yy270;
		goto yy245;
	}
yy267:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 456 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto code;
				}
#line 1673 "src/parse/scanner_lex.cc"
yy269:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy267;
	goto yy245;
yy270:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy245;
		goto yy270;
	} else {
		if (yych <= '"') goto yy273;
		if (yych != '\\') goto yy270;
	}
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy245;
	goto yy270;
yy273:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy267;
	if (yych == '\r') goto yy269;
	goto yy245;
yy274:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy274;
		goto yy245;
	} else {
		if (yych <= ' ') goto yy274;
		if (yych == '#') goto yy255;
		goto yy245;
	}
}
#line 509 "../src/parse/scanner_lex.re"


comment:

#line 1717 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= ')') {
		if (yych == '\n') goto yy280;
	} else {
		if (yych <= '*') goto yy282;
		if (yych == '/') goto yy283;
	}
	++YYCURSOR;
yy279:
#line 541 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					goto comment;
				}
#line 1772 "src/parse/scanner_lex.cc"
yy280:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy288;
	}
	if (yych == '#') goto yy291;
yy281:
#line 532 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					tok = pos = cur;
					cline++;
					goto comment;
				}
#line 1790 "src/parse/scanner_lex.cc"
yy282:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy286;
	goto yy279;
yy283:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '*') goto yy279;
	++YYCURSOR;
#line 523 "../src/parse/scanner_lex.re"
	{
					++depth;
					fatal("ambiguous /* found");
					goto comment;
				}
#line 1805 "src/parse/scanner_lex.cc"
yy286:
	++YYCURSOR;
#line 513 "../src/parse/scanner_lex.re"
	{
					if (--depth == 0)
					{
						goto scan;
					}
					else
					{
						goto comment;
					}
				}
#line 1819 "src/parse/scanner_lex.cc"
yy288:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy288;
	}
	if (yych == '#') goto yy291;
yy290:
	YYCURSOR = YYMARKER;
	goto yy281;
yy291:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy291;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy291;
		if (yych != 'l') goto yy290;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy290;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy298;
	if (yych <= '9') goto yy290;
	goto yy298;
yy297:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy298:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy297;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy297;
		if (yych <= '0') goto yy290;
		if (yych >= ':') goto yy290;
	}
yy299:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy299;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy290;
		if (yych <= '\t') goto yy301;
		if (yych <= '\n') goto yy303;
		goto yy290;
	} else {
		if (yych <= '\r') goto yy305;
		if (yych != ' ') goto yy290;
	}
yy301:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy301;
		goto yy290;
	} else {
		if (yych <= ' ') goto yy301;
		if (yych == '"') goto yy306;
		goto yy290;
	}
yy303:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 528 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto comment;
				}
#line 1902 "src/parse/scanner_lex.cc"
yy305:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy303;
	goto yy290;
yy306:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy306;
	}
	if (yych <= '\n') goto yy290;
	if (yych <= '"') goto yy309;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy290;
	goto yy306;
yy309:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy303;
	if (yych == '\r') goto yy305;
	goto yy290;
}
#line 548 "../src/parse/scanner_lex.re"


nextLine:

#line 1932 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy314;
	++YYCURSOR;
#line 559 "../src/parse/scanner_lex.re"
	{  if(cur == eof) {
                  return 0;
               }
               goto nextLine;
            }
#line 1945 "src/parse/scanner_lex.cc"
yy314:
	++YYCURSOR;
#line 552 "../src/parse/scanner_lex.re"
	{ if(cur == eof) {
                  return 0;
               }
               tok = pos = cur;
               cline++;
               goto scan;
            }
#line 1956 "src/parse/scanner_lex.cc"
}
#line 564 "../src/parse/scanner_lex.re"


conf:
	tok = cur;

#line 1964 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,  64,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 64,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 27) YYFILL(27);
	yych = (YYCTYPE)*YYCURSOR;
	switch (yych) {
	case 'c':	goto yy320;
	case 'd':	goto yy321;
	case 'f':	goto yy322;
	case 'i':	goto yy323;
	case 'l':	goto yy324;
	case 's':	goto yy325;
	case 'v':	goto yy326;
	case 'y':	goto yy327;
	default:	goto yy318;
	}
yy318:
	++YYCURSOR;
yy319:
#line 569 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "unrecognized configuration"); }
#line 2020 "src/parse/scanner_lex.cc"
yy320:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'g') goto yy709;
	if (yych == 'o') goto yy710;
	goto yy319;
yy321:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy518;
	goto yy319;
yy322:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'l') goto yy511;
	goto yy319;
yy323:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy494;
	goto yy319;
yy324:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy465;
	goto yy319;
yy325:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 't') goto yy427;
	goto yy319;
yy326:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy384;
	goto yy319;
yy327:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != 'y') goto yy319;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= 'a') goto yy329;
		if (yych <= 'b') goto yy330;
		goto yy331;
	} else {
		if (yych == 'f') goto yy332;
	}
yy329:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 5) {
		if (yyaccept <= 2) {
			if (yyaccept <= 1) {
				if (yyaccept == 0) {
					goto yy319;
				} else {
					goto yy455;
				}
			} else {
				goto yy541;
			}
		} else {
			if (yyaccept <= 4) {
				if (yyaccept == 3) {
					goto yy581;
				} else {
					goto yy602;
				}
			} else {
				goto yy618;
			}
		}
	} else {
		if (yyaccept <= 8) {
			if (yyaccept <= 7) {
				if (yyaccept == 6) {
					goto yy655;
				} else {
					goto yy672;
				}
			} else {
				goto yy695;
			}
		} else {
			if (yyaccept == 9) {
				goto yy724;
			} else {
				goto yy734;
			}
		}
	}
yy330:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy378;
	goto yy329;
yy331:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy360;
	goto yy329;
yy332:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == 'c') goto yy339;
		goto yy329;
	} else {
		if (yych <= 'e') goto yy338;
		if (yych != 'p') goto yy329;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy351;
	goto yy329;
yy338:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy345;
	goto yy329;
yy339:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	++YYCURSOR;
#line 663 "../src/parse/scanner_lex.re"
	{ opts.set_fill_check       (lex_conf_number () != 0); return CONF; }
#line 2156 "src/parse/scanner_lex.cc"
yy345:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 664 "../src/parse/scanner_lex.re"
	{ opts.set_fill_use         (lex_conf_number () != 0); return CONF; }
#line 2169 "src/parse/scanner_lex.cc"
yy351:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	++YYCURSOR;
#line 665 "../src/parse/scanner_lex.re"
	{ opts.set_fill_arg_use     (lex_conf_number () != 0); return CONF; }
#line 2188 "src/parse/scanner_lex.cc"
yy360:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'c') goto yy363;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy374;
	goto yy329;
yy363:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	++YYCURSOR;
#line 661 "../src/parse/scanner_lex.re"
	{ opts.set_yychConversion   (lex_conf_number () != 0); return CONF; }
#line 2220 "src/parse/scanner_lex.cc"
yy374:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 662 "../src/parse/scanner_lex.re"
	{ opts.set_bEmitYYCh        (lex_conf_number () != 0); return CONF; }
#line 2229 "src/parse/scanner_lex.cc"
yy378:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 660 "../src/parse/scanner_lex.re"
	{ opts.set_yybmHexTable     (lex_conf_number () != 0); return CONF; }
#line 2242 "src/parse/scanner_lex.cc"
yy384:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= '`') goto yy329;
		if (yych <= 'a') goto yy398;
		if (yych <= 'b') goto yy397;
		goto yy396;
	} else {
		if (yych <= 'r') goto yy329;
		if (yych <= 's') goto yy395;
		if (yych >= 'u') goto yy329;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy421;
	goto yy329;
yy395:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy415;
	goto yy329;
yy396:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy407;
	if (yych == 't') goto yy409;
	goto yy329;
yy397:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy405;
	goto yy329;
yy398:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 654 "../src/parse/scanner_lex.re"
	{ opts.set_yyaccept         (lex_conf_string ()); return CONF; }
#line 2303 "src/parse/scanner_lex.cc"
yy405:
	++YYCURSOR;
#line 655 "../src/parse/scanner_lex.re"
	{ opts.set_yybm             (lex_conf_string ()); return CONF; }
#line 2308 "src/parse/scanner_lex.cc"
yy407:
	++YYCURSOR;
#line 656 "../src/parse/scanner_lex.re"
	{ opts.set_yych             (lex_conf_string ()); return CONF; }
#line 2313 "src/parse/scanner_lex.cc"
yy409:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 657 "../src/parse/scanner_lex.re"
	{ opts.set_yyctable         (lex_conf_string ()); return CONF; }
#line 2326 "src/parse/scanner_lex.cc"
yy415:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 658 "../src/parse/scanner_lex.re"
	{ lex_conf_string (); return CONF; }
#line 2339 "src/parse/scanner_lex.cc"
yy421:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 659 "../src/parse/scanner_lex.re"
	{ opts.set_yytarget         (lex_conf_string ()); return CONF; }
#line 2352 "src/parse/scanner_lex.cc"
yy427:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy429;
	if (yych == 't') goto yy430;
	goto yy329;
yy429:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy449;
	goto yy329;
yy430:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy433;
	if (yych == 'n') goto yy434;
	goto yy329;
yy433:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'b') goto yy444;
	goto yy329;
yy434:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	++YYCURSOR;
#line 653 "../src/parse/scanner_lex.re"
	{ opts.set_bUseStateNext    (lex_conf_number () != 0); return CONF; }
#line 2397 "src/parse/scanner_lex.cc"
yy444:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 652 "../src/parse/scanner_lex.re"
	{ opts.set_bUseStateAbort   (lex_conf_number () != 0); return CONF; }
#line 2408 "src/parse/scanner_lex.cc"
yy449:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	YYCTXMARKER = YYCURSOR + 1;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 64) {
		goto yy456;
	}
	if (yych == '=') goto yy458;
yy455:
#line 669 "../src/parse/scanner_lex.re"
	{ out.set_user_start_label (lex_conf_string ()); return CONF; }
#line 2430 "src/parse/scanner_lex.cc"
yy456:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy456;
	}
	if (yych != '=') goto yy329;
yy458:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= ',') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy329;
			goto yy458;
		} else {
			if (yych == ' ') goto yy458;
			goto yy329;
		}
	} else {
		if (yych <= '/') {
			if (yych <= '-') goto yy462;
			goto yy329;
		} else {
			if (yych <= '0') goto yy460;
			if (yych <= '9') goto yy463;
			goto yy329;
		}
	}
yy460:
	++YYCURSOR;
yy461:
	YYCURSOR = YYCTXMARKER;
#line 668 "../src/parse/scanner_lex.re"
	{ out.set_force_start_label (lex_conf_number () != 0); return CONF; }
#line 2467 "src/parse/scanner_lex.cc"
yy462:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy329;
	if (yych >= ':') goto yy329;
yy463:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy463;
	}
	goto yy461;
yy465:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == ':') goto yy470;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy488;
	goto yy329;
yy470:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'F') goto yy473;
	if (yych == 'N') goto yy474;
	goto yy329;
yy473:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'i') goto yy479;
	goto yy329;
yy474:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	++YYCURSOR;
#line 650 "../src/parse/scanner_lex.re"
	{ opts.set_yynext           (lex_conf_string ()); return CONF; }
#line 2516 "src/parse/scanner_lex.cc"
yy479:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	++YYCURSOR;
#line 649 "../src/parse/scanner_lex.re"
	{ opts.set_yyfilllabel      (lex_conf_string ()); return CONF; }
#line 2535 "src/parse/scanner_lex.cc"
yy488:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 651 "../src/parse/scanner_lex.re"
	{ opts.set_labelPrefix      (lex_conf_string ()); return CONF; }
#line 2548 "src/parse/scanner_lex.cc"
yy494:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'r') goto yy329;
	if (yych <= 's') goto yy501;
	if (yych >= 'u') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy508;
	goto yy329;
yy501:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	++YYCURSOR;
#line 638 "../src/parse/scanner_lex.re"
	{ opts.set_indString        (lex_conf_string ()); return CONF; }
#line 2581 "src/parse/scanner_lex.cc"
yy508:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	++YYCURSOR;
#line 640 "../src/parse/scanner_lex.re"
	{
		const int32_t n = lex_conf_number ();
		if (n < 0)
		{
			fatal ("configuration 'indent:top' must be nonnegative");
		}
		opts.set_topIndent (static_cast<uint32_t> (n));
		return CONF;
	}
#line 2596 "src/parse/scanner_lex.cc"
yy511:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'e') {
		if (yych == '8') goto yy516;
		if (yych <= 'd') goto yy329;
	} else {
		if (yych <= 'u') {
			if (yych <= 't') goto yy329;
		} else {
			if (yych <= 'v') goto yy329;
			if (yych >= 'y') goto yy329;
		}
	}
yy516:
	++YYCURSOR;
#line 615 "../src/parse/scanner_lex.re"
	{
		Enc::type_t enc = Enc::ASCII;
		switch (YYCURSOR[-1])
		{
			case 'e': enc = Enc::EBCDIC; break;
			case 'w': enc = Enc::UCS2;   break;
			case 'x': enc = Enc::UTF16;  break;
			case 'u': enc = Enc::UTF32;  break;
			case '8': enc = Enc::UTF8;   break;
		}
		const int32_t n = lex_conf_number ();
		if (n == 0)
		{
			opts.unset_encoding (enc);
		}
		else if (!opts.set_encoding (enc))
		{
			fatalf ("Cannot set %s encoding: please reset %s encoding first"
				, Enc::name (enc)
				, Enc::name (opts->encoding.type ()));
		}
		return CONF;
	}
#line 2644 "src/parse/scanner_lex.cc"
yy518:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'B':	goto yy535;
	case 'C':	goto yy534;
	case 'D':	goto yy533;
	case 'F':	goto yy532;
	case 'G':	goto yy531;
	case 'L':	goto yy530;
	case 'M':	goto yy529;
	case 'P':	goto yy528;
	case 'R':	goto yy527;
	case 'S':	goto yy526;
	default:	goto yy329;
	}
yy526:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy660;
	if (yych == 'K') goto yy661;
	goto yy329;
yy527:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy649;
	goto yy329;
yy528:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy645;
	goto yy329;
yy529:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'A') goto yy639;
	goto yy329;
yy530:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy626;
	if (yych == 'I') goto yy627;
	goto yy329;
yy531:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy594;
	goto yy329;
yy532:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'I') goto yy578;
	goto yy329;
yy533:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy573;
	goto yy329;
yy534:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'S') {
		if (yych == 'O') goto yy546;
		goto yy329;
	} else {
		if (yych <= 'T') goto yy547;
		if (yych <= 'U') goto yy548;
		goto yy329;
	}
yy535:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'C') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'C') goto yy542;
yy541:
#line 587 "../src/parse/scanner_lex.re"
	{ opts.set_yybackup         (lex_conf_string ()); return CONF; }
#line 2735 "src/parse/scanner_lex.cc"
yy542:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'X') goto yy329;
	++YYCURSOR;
#line 588 "../src/parse/scanner_lex.re"
	{ opts.set_yybackupctx      (lex_conf_string ()); return CONF; }
#line 2744 "src/parse/scanner_lex.cc"
yy546:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'N') goto yy566;
	goto yy329;
yy547:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'W') goto yy329;
	if (yych <= 'X') goto yy555;
	if (yych <= 'Y') goto yy554;
	goto yy329;
yy548:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	++YYCURSOR;
#line 592 "../src/parse/scanner_lex.re"
	{ opts.set_yycursor         (lex_conf_string ()); return CONF; }
#line 2767 "src/parse/scanner_lex.cc"
yy554:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'P') goto yy563;
	goto yy329;
yy555:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'M') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	++YYCURSOR;
#line 590 "../src/parse/scanner_lex.re"
	{ opts.set_yyctxmarker      (lex_conf_string ()); return CONF; }
#line 2788 "src/parse/scanner_lex.cc"
yy563:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	++YYCURSOR;
#line 591 "../src/parse/scanner_lex.re"
	{ opts.set_yyctype          (lex_conf_string ()); return CONF; }
#line 2795 "src/parse/scanner_lex.cc"
yy566:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	++YYCURSOR;
#line 589 "../src/parse/scanner_lex.re"
	{ opts.set_yycondtype       (lex_conf_string ()); return CONF; }
#line 2810 "src/parse/scanner_lex.cc"
yy573:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'B') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'G') goto yy329;
	++YYCURSOR;
#line 593 "../src/parse/scanner_lex.re"
	{ opts.set_yydebug          (lex_conf_string ()); return CONF; }
#line 2821 "src/parse/scanner_lex.cc"
yy578:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy329;
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy583;
	if (yych == '@') goto yy582;
yy581:
#line 594 "../src/parse/scanner_lex.re"
	{ opts.set_fill             (lex_conf_string ()); return CONF; }
#line 2834 "src/parse/scanner_lex.cc"
yy582:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'l') goto yy590;
	goto yy329;
yy583:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 595 "../src/parse/scanner_lex.re"
	{ opts.set_fill_naked       (lex_conf_number () != 0); return CONF; }
#line 2853 "src/parse/scanner_lex.cc"
yy590:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	++YYCURSOR;
#line 596 "../src/parse/scanner_lex.re"
	{ opts.set_fill_arg         (lex_conf_string ()); return CONF; }
#line 2862 "src/parse/scanner_lex.cc"
yy594:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy596;
	if (yych == 'S') goto yy597;
	goto yy329;
yy596:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'O') goto yy610;
	goto yy329;
yy597:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 4;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy603;
yy602:
#line 599 "../src/parse/scanner_lex.re"
	{ opts.set_state_get        (lex_conf_string ()); return CONF; }
#line 2889 "src/parse/scanner_lex.cc"
yy603:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 600 "../src/parse/scanner_lex.re"
	{ opts.set_state_get_naked  (lex_conf_number () != 0); return CONF; }
#line 2904 "src/parse/scanner_lex.cc"
yy610:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yyaccept = 5;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy619;
yy618:
#line 597 "../src/parse/scanner_lex.re"
	{ opts.set_cond_get         (lex_conf_string ()); return CONF; }
#line 2926 "src/parse/scanner_lex.cc"
yy619:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 598 "../src/parse/scanner_lex.re"
	{ opts.set_cond_get_naked   (lex_conf_number () != 0); return CONF; }
#line 2941 "src/parse/scanner_lex.cc"
yy626:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'S') goto yy632;
	goto yy329;
yy627:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'M') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	++YYCURSOR;
#line 602 "../src/parse/scanner_lex.re"
	{ opts.set_yylimit          (lex_conf_string ()); return CONF; }
#line 2956 "src/parse/scanner_lex.cc"
yy632:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'H') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	++YYCURSOR;
#line 601 "../src/parse/scanner_lex.re"
	{ opts.set_yylessthan       (lex_conf_string ()); return CONF; }
#line 2971 "src/parse/scanner_lex.cc"
yy639:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	++YYCURSOR;
#line 603 "../src/parse/scanner_lex.re"
	{ opts.set_yymarker         (lex_conf_string ()); return CONF; }
#line 2984 "src/parse/scanner_lex.cc"
yy645:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy329;
	++YYCURSOR;
#line 604 "../src/parse/scanner_lex.re"
	{ opts.set_yypeek           (lex_conf_string ()); return CONF; }
#line 2993 "src/parse/scanner_lex.cc"
yy649:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 6;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'C') goto yy656;
yy655:
#line 605 "../src/parse/scanner_lex.re"
	{ opts.set_yyrestore        (lex_conf_string ()); return CONF; }
#line 3011 "src/parse/scanner_lex.cc"
yy656:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'X') goto yy329;
	++YYCURSOR;
#line 606 "../src/parse/scanner_lex.re"
	{ opts.set_yyrestorectx     (lex_conf_string ()); return CONF; }
#line 3020 "src/parse/scanner_lex.cc"
yy660:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy665;
	goto yy329;
yy661:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy329;
	++YYCURSOR;
#line 613 "../src/parse/scanner_lex.re"
	{ opts.set_yyskip           (lex_conf_string ()); return CONF; }
#line 3033 "src/parse/scanner_lex.cc"
yy665:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy666;
	if (yych == 'S') goto yy667;
	goto yy329;
yy666:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'O') goto yy687;
	goto yy329;
yy667:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy329;
	yyaccept = 7;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy674;
	if (yych == '@') goto yy673;
yy672:
#line 610 "../src/parse/scanner_lex.re"
	{ opts.set_state_set        (lex_conf_string ()); return CONF; }
#line 3059 "src/parse/scanner_lex.cc"
yy673:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy681;
	goto yy329;
yy674:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 611 "../src/parse/scanner_lex.re"
	{ opts.set_state_set_naked  (lex_conf_number () != 0); return CONF; }
#line 3078 "src/parse/scanner_lex.cc"
yy681:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	++YYCURSOR;
#line 612 "../src/parse/scanner_lex.re"
	{ opts.set_state_set_arg    (lex_conf_string ()); return CONF; }
#line 3091 "src/parse/scanner_lex.cc"
yy687:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy329;
	yyaccept = 8;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy696;
	if (yych == '@') goto yy697;
yy695:
#line 607 "../src/parse/scanner_lex.re"
	{ opts.set_cond_set         (lex_conf_string ()); return CONF; }
#line 3114 "src/parse/scanner_lex.cc"
yy696:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy703;
	goto yy329;
yy697:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 608 "../src/parse/scanner_lex.re"
	{ opts.set_cond_set_arg     (lex_conf_string ()); return CONF; }
#line 3131 "src/parse/scanner_lex.cc"
yy703:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 609 "../src/parse/scanner_lex.re"
	{ opts.set_cond_set_naked   (lex_conf_number () != 0); return CONF; }
#line 3144 "src/parse/scanner_lex.cc"
yy709:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy757;
	goto yy329;
yy710:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == ':') goto yy715;
		goto yy329;
	} else {
		if (yych <= 'e') goto yy714;
		if (yych != 'p') goto yy329;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy751;
	goto yy329;
yy714:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy741;
	goto yy329;
yy715:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'd') goto yy717;
	if (yych != 'g') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy731;
	goto yy329;
yy717:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yyaccept = 9;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy725;
yy724:
#line 573 "../src/parse/scanner_lex.re"
	{ opts.set_condDivider      (lex_conf_string ()); return CONF; }
#line 3195 "src/parse/scanner_lex.cc"
yy725:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 574 "../src/parse/scanner_lex.re"
	{ opts.set_condDividerParam (lex_conf_string ()); return CONF; }
#line 3208 "src/parse/scanner_lex.cc"
yy731:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yyaccept = 10;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy735;
yy734:
#line 575 "../src/parse/scanner_lex.re"
	{ opts.set_condGoto         (lex_conf_string ()); return CONF; }
#line 3220 "src/parse/scanner_lex.cc"
yy735:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 576 "../src/parse/scanner_lex.re"
	{ opts.set_condGotoParam    (lex_conf_string ()); return CONF; }
#line 3233 "src/parse/scanner_lex.cc"
yy741:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'u') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 572 "../src/parse/scanner_lex.re"
	{ opts.set_condEnumPrefix   (lex_conf_string ()); return CONF; }
#line 3254 "src/parse/scanner_lex.cc"
yy751:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy329;
	++YYCURSOR;
#line 571 "../src/parse/scanner_lex.re"
	{ opts.set_condPrefix       (lex_conf_string ()); return CONF; }
#line 3267 "src/parse/scanner_lex.cc"
yy757:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy329;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy329;
	++YYCURSOR;
#line 578 "../src/parse/scanner_lex.re"
	{
		const int32_t n = lex_conf_number ();
		if (n < 0)
		{
			fatal ("configuration 'cgoto:threshold' must be nonnegative");
		}
		opts.set_cGotoThreshold (static_cast<uint32_t> (n));
		return CONF;
	}
#line 3304 "src/parse/scanner_lex.cc"
}
#line 670 "../src/parse/scanner_lex.re"

}

void Scanner::lex_conf_assign ()
{

#line 3313 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy775;
	} else {
		if (yych <= ' ') goto yy775;
		if (yych == '=') goto yy776;
	}
	++YYCURSOR;
yy774:
#line 676 "../src/parse/scanner_lex.re"
	{ fatal ("missing '=' in configuration"); }
#line 3362 "src/parse/scanner_lex.cc"
yy775:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy780;
		goto yy774;
	} else {
		if (yych <= ' ') goto yy780;
		if (yych == '=') goto yy778;
		goto yy774;
	}
yy776:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy779;
yy777:
#line 677 "../src/parse/scanner_lex.re"
	{ return; }
#line 3380 "src/parse/scanner_lex.cc"
yy778:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy779:
	if (yybm[0+yych] & 128) {
		goto yy778;
	}
	goto yy777;
yy780:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy780;
	} else {
		if (yych <= ' ') goto yy780;
		if (yych == '=') goto yy778;
	}
	YYCURSOR = YYMARKER;
	goto yy774;
}
#line 678 "../src/parse/scanner_lex.re"

}

void Scanner::lex_conf_semicolon ()
{

#line 3410 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy787;
	} else {
		if (yych <= ' ') goto yy787;
		if (yych == ';') goto yy788;
	}
	++YYCURSOR;
yy786:
#line 684 "../src/parse/scanner_lex.re"
	{ fatal ("missing ending ';' in configuration"); }
#line 3459 "src/parse/scanner_lex.cc"
yy787:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 128) {
		goto yy791;
	}
	if (yych == ';') goto yy790;
	goto yy786;
yy788:
	++YYCURSOR;
yy789:
#line 685 "../src/parse/scanner_lex.re"
	{ return; }
#line 3472 "src/parse/scanner_lex.cc"
yy790:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy789;
yy791:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy791;
	}
	if (yych == ';') goto yy790;
	YYCURSOR = YYMARKER;
	goto yy786;
}
#line 686 "../src/parse/scanner_lex.re"

}

int32_t Scanner::lex_conf_number ()
{
	lex_conf_assign ();
	tok = cur;

#line 3496 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '/') {
		if (yych == '-') goto yy799;
	} else {
		if (yych <= '0') goto yy797;
		if (yych <= '9') goto yy800;
	}
yy796:
yy797:
	++YYCURSOR;
yy798:
#line 695 "../src/parse/scanner_lex.re"
	{
		int32_t n = 0;
		if (!s_to_i32_unsafe (tok, cur, n))
		{
			fatal ("configuration value overflow");
		}
		lex_conf_semicolon ();
		return n;
	}
#line 3555 "src/parse/scanner_lex.cc"
yy799:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy796;
	if (yych >= ':') goto yy796;
yy800:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy800;
	}
	goto yy798;
}
#line 704 "../src/parse/scanner_lex.re"

}

std::string Scanner::lex_conf_string ()
{
	lex_conf_assign ();
	std::string s;
	tok = cur;

#line 3579 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128,   0,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128,   0, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych <= '\n') {
			if (yych <= 0x08) goto yy807;
		} else {
			if (yych != ' ') goto yy807;
		}
	} else {
		if (yych <= '\'') {
			if (yych <= '"') goto yy805;
			if (yych <= '&') goto yy807;
			goto yy805;
		} else {
			if (yych != ';') goto yy807;
		}
	}
yy804:
#line 721 "../src/parse/scanner_lex.re"
	{
		s = std::string (tok, tok_len ());
		goto end;
	}
#line 3639 "src/parse/scanner_lex.cc"
yy805:
	++YYCURSOR;
#line 714 "../src/parse/scanner_lex.re"
	{
		std::vector<uint32_t> cpoints;
		lex_cpoints (tok[0], cpoints);
		s = cpoint_conf (cpoints);
		goto end;
	}
#line 3649 "src/parse/scanner_lex.cc"
yy807:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy807;
	}
	goto yy804;
}
#line 725 "../src/parse/scanner_lex.re"

end:
	lex_conf_semicolon ();
	return s;
}

std::string Scanner::cpoint_conf (const std::vector<uint32_t> & cs) const
{
	const size_t n = cs.size ();
	std::string s;
	for (size_t i = 0; i < n; ++i)
	{
		const uint32_t c = cs[i];
		if (c > 0xFF)
		{
			fatalf ("multibyte character in configuration string: 0x%X", c);
		}
		else
		{
			s += static_cast<char> (c);
		}
	}
	return s;
}

static void escape (std::string & dest, const std::string & src)
{
	dest = src;
	size_t l = dest.length();
	for (size_t p = 0; p < l; ++p)
	{
		if (dest[p] == '\\')
		{
			dest.insert(++p, "\\");
			++l;
		}
	}
}

void Scanner::lex_cpoints (char quote, std::vector<uint32_t> & cs)
{
	for (;;)
	{
		tok = cur;
	
#line 3705 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if ((YYLIMIT - YYCURSOR) < 10) YYFILL(10);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy813;
	if (yych == '\\') goto yy815;
	++YYCURSOR;
#line 789 "../src/parse/scanner_lex.re"
	{
			const char c = tok[0];
			if (c == quote)
			{
				return;
			}
			else
			{
				cs.push_back (static_cast<uint8_t> (c));
				continue;
			}
		}
#line 3727 "src/parse/scanner_lex.cc"
yy813:
	++YYCURSOR;
#line 770 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error"); }
#line 3732 "src/parse/scanner_lex.cc"
yy815:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) <= 'b') {
		if (yych <= 'T') {
			if (yych <= '/') {
				if (yych != '\n') goto yy817;
			} else {
				if (yych <= '3') goto yy819;
				if (yych <= '7') goto yy821;
				goto yy817;
			}
		} else {
			if (yych <= 'X') {
				if (yych <= 'U') goto yy822;
				if (yych <= 'W') goto yy817;
				goto yy824;
			} else {
				if (yych == '\\') goto yy825;
				if (yych <= '`') goto yy817;
				goto yy825;
			}
		}
	} else {
		if (yych <= 'r') {
			if (yych <= 'm') {
				if (yych == 'f') goto yy825;
				goto yy817;
			} else {
				if (yych <= 'n') goto yy825;
				if (yych <= 'q') goto yy817;
				goto yy825;
			}
		} else {
			if (yych <= 'u') {
				if (yych <= 's') goto yy817;
				if (yych <= 't') goto yy825;
				goto yy824;
			} else {
				if (yych <= 'v') goto yy825;
				if (yych == 'x') goto yy827;
				goto yy817;
			}
		}
	}
#line 773 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in escape sequence"); }
#line 3779 "src/parse/scanner_lex.cc"
yy817:
	++YYCURSOR;
#line 779 "../src/parse/scanner_lex.re"
	{
			const char c = tok[1];
			if (c != quote)
			{
				warn.useless_escape (tline, tok - pos, c);
			}
			cs.push_back (static_cast<uint8_t> (c));
			continue;
		}
#line 3792 "src/parse/scanner_lex.cc"
yy819:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy820;
	if (yych <= '7') goto yy842;
yy820:
#line 772 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in octal escape sequence"); }
#line 3801 "src/parse/scanner_lex.cc"
yy821:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy820;
yy822:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy823;
		if (yych <= '9') goto yy835;
	} else {
		if (yych <= 'F') goto yy835;
		if (yych <= '`') goto yy823;
		if (yych <= 'f') goto yy835;
	}
yy823:
#line 771 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in hexadecimal escape sequence"); }
#line 3819 "src/parse/scanner_lex.cc"
yy824:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy823;
		if (yych <= '9') goto yy832;
		goto yy823;
	} else {
		if (yych <= 'F') goto yy832;
		if (yych <= '`') goto yy823;
		if (yych <= 'f') goto yy832;
		goto yy823;
	}
yy825:
	++YYCURSOR;
#line 777 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_simple (tok));   continue; }
#line 3837 "src/parse/scanner_lex.cc"
yy827:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy823;
		if (yych >= ':') goto yy823;
	} else {
		if (yych <= 'F') goto yy828;
		if (yych <= '`') goto yy823;
		if (yych >= 'g') goto yy823;
	}
yy828:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych <= '9') goto yy830;
	} else {
		if (yych <= 'F') goto yy830;
		if (yych <= '`') goto yy829;
		if (yych <= 'f') goto yy830;
	}
yy829:
	YYCURSOR = YYMARKER;
	if (yyaccept == 0) {
		goto yy820;
	} else {
		goto yy823;
	}
yy830:
	++YYCURSOR;
#line 775 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_hex (tok, cur)); continue; }
#line 3870 "src/parse/scanner_lex.cc"
yy832:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy833;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy833:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy834;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy834:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych <= '9') goto yy830;
		goto yy829;
	} else {
		if (yych <= 'F') goto yy830;
		if (yych <= '`') goto yy829;
		if (yych <= 'f') goto yy830;
		goto yy829;
	}
yy835:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy836;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy836:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy837;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy837:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy838;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy838:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy839;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy839:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy840;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy840:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych >= ':') goto yy829;
	} else {
		if (yych <= 'F') goto yy841;
		if (yych <= '`') goto yy829;
		if (yych >= 'g') goto yy829;
	}
yy841:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy829;
		if (yych <= '9') goto yy830;
		goto yy829;
	} else {
		if (yych <= 'F') goto yy830;
		if (yych <= '`') goto yy829;
		if (yych <= 'f') goto yy830;
		goto yy829;
	}
yy842:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '/') goto yy829;
	if (yych >= '8') goto yy829;
	++YYCURSOR;
#line 776 "../src/parse/scanner_lex.re"
	{ cs.push_back (unesc_oct (tok, cur)); continue; }
#line 3982 "src/parse/scanner_lex.cc"
}
#line 801 "../src/parse/scanner_lex.re"

	}
}

void Scanner::set_sourceline ()
{
sourceline:
	tok = cur;

#line 3994 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy849;
	} else {
		if (yych <= '"') goto yy851;
		if (yych <= '0') goto yy847;
		if (yych <= '9') goto yy852;
	}
yy847:
	++YYCURSOR;
yy848:
#line 833 "../src/parse/scanner_lex.re"
	{
  					goto sourceline;
  				}
#line 4047 "src/parse/scanner_lex.cc"
yy849:
	++YYCURSOR;
#line 821 "../src/parse/scanner_lex.re"
	{
  					if (cur == eof)
  					{
						--cur; 
					}
			  		else
			  		{
			  			pos = cur; 
			  		}
			  		tok = cur;
			  		return; 
				}
#line 4063 "src/parse/scanner_lex.cc"
yy851:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy848;
	goto yy857;
yy852:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy855;
yy853:
#line 810 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok, cur, cline))
					{
						fatal ("line number overflow");
					}
					goto sourceline; 
				}
#line 4081 "src/parse/scanner_lex.cc"
yy854:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy855:
	if (yybm[0+yych] & 64) {
		goto yy854;
	}
	goto yy853;
yy856:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy857:
	if (yybm[0+yych] & 128) {
		goto yy856;
	}
	if (yych <= '\n') goto yy858;
	if (yych <= '"') goto yy860;
	goto yy859;
yy858:
	YYCURSOR = YYMARKER;
	goto yy848;
yy859:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy858;
	goto yy856;
yy860:
	++YYCURSOR;
#line 817 "../src/parse/scanner_lex.re"
	{
					escape (in.file_name, std::string (tok + 1, tok_len () - 2)); // -2 to omit quotes
			  		goto sourceline; 
				}
#line 4118 "src/parse/scanner_lex.cc"
}
#line 836 "../src/parse/scanner_lex.re"

}

} // end namespace re2c
