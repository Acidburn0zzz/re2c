#include <stdio.h>
#define YYCTYPE unsigned short
bool scan(const YYCTYPE * start, const YYCTYPE * const limit)
{
	__attribute__((unused)) const YYCTYPE * YYMARKER; // silence compiler warnings when YYMARKER is not used
#	define YYCURSOR start
P:
	/*!re2c
		re2c:yyfill:enable = 0;
				P = [\x21-\x23\x25-\x2a\x2c-\x2f\x3a-\x3b\x3f-\x40\x5b-\x5d\x5f-\x5f\x7b-\x7b\x7d-\x7d\xa1-\xa1\xab-\xab\xb7-\xb7\xbb-\xbb\xbf-\xbf\u037e-\u037e\u0387-\u0387\u055a-\u055f\u0589-\u058a\u05be-\u05be\u05c0-\u05c0\u05c3-\u05c3\u05c6-\u05c6\u05f3-\u05f4\u0609-\u060a\u060c-\u060d\u061b-\u061b\u061e-\u061f\u066a-\u066d\u06d4-\u06d4\u0700-\u070d\u07f7-\u07f9\u0830-\u083e\u085e-\u085e\u0964-\u0965\u0970-\u0970\u0df4-\u0df4\u0e4f-\u0e4f\u0e5a-\u0e5b\u0f04-\u0f12\u0f3a-\u0f3d\u0f85-\u0f85\u0fd0-\u0fd4\u0fd9-\u0fda\u104a-\u104f\u10fb-\u10fb\u1361-\u1368\u1400-\u1400\u166d-\u166e\u169b-\u169c\u16eb-\u16ed\u1735-\u1736\u17d4-\u17d6\u17d8-\u17da\u1800-\u180a\u1944-\u1945\u1a1e-\u1a1f\u1aa0-\u1aa6\u1aa8-\u1aad\u1b5a-\u1b60\u1bfc-\u1bff\u1c3b-\u1c3f\u1c7e-\u1c7f\u1cd3-\u1cd3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205e\u207d-\u207e\u208d-\u208e\u2329-\u232a\u2768-\u2775\u27c5-\u27c6\u27e6-\u27ef\u2983-\u2998\u29d8-\u29db\u29fc-\u29fd\u2cf9-\u2cfc\u2cfe-\u2cff\u2d70-\u2d70\u2e00-\u2e2e\u2e30-\u2e31\u3001-\u3003\u3008-\u3011\u3014-\u301f\u3030-\u3030\u303d-\u303d\u30a0-\u30a0\u30fb-\u30fb\ua4fe-\ua4ff\ua60d-\ua60f\ua673-\ua673\ua67e-\ua67e\ua6f2-\ua6f7\ua874-\ua877\ua8ce-\ua8cf\ua8f8-\ua8fa\ua92e-\ua92f\ua95f-\ua95f\ua9c1-\ua9cd\ua9de-\ua9df\uaa5c-\uaa5f\uaade-\uaadf\uabeb-\uabeb\ufd3e-\ufd3f\ufe10-\ufe19\ufe30-\ufe52\ufe54-\ufe61\ufe63-\ufe63\ufe68-\ufe68\ufe6a-\ufe6b\uff01-\uff03\uff05-\uff0a\uff0c-\uff0f\uff1a-\uff1b\uff1f-\uff20\uff3b-\uff3d\uff3f-\uff3f\uff5b-\uff5b\uff5d-\uff5d\uff5f-\uff65\U00010100-\U00010101\U0001039f-\U0001039f\U000103d0-\U000103d0\U00010857-\U00010857\U0001091f-\U0001091f\U0001093f-\U0001093f\U00010a50-\U00010a58\U00010a7f-\U00010a7f\U00010b39-\U00010b3f\U00011047-\U0001104d\U000110bb-\U000110bc\U000110be-\U000110c1\U00012470-\U00012473];
		P { goto P; }
		[^] { return YYCURSOR == limit; }
	*/
}
static const char buffer_P [] = "\x21\x00\x22\x00\x23\x00\x25\x00\x26\x00\x27\x00\x28\x00\x29\x00\x2A\x00\x2C\x00\x2D\x00\x2E\x00\x2F\x00\x3A\x00\x3B\x00\x3F\x00\x40\x00\x5B\x00\x5C\x00\x5D\x00\x5F\x00\x7B\x00\x7D\x00\xA1\x00\xAB\x00\xB7\x00\xBB\x00\xBF\x00\x7E\x03\x87\x03\x5A\x05\x5B\x05\x5C\x05\x5D\x05\x5E\x05\x5F\x05\x89\x05\x8A\x05\xBE\x05\xC0\x05\xC3\x05\xC6\x05\xF3\x05\xF4\x05\x09\x06\x0A\x06\x0C\x06\x0D\x06\x1B\x06\x1E\x06\x1F\x06\x6A\x06\x6B\x06\x6C\x06\x6D\x06\xD4\x06\x00\x07\x01\x07\x02\x07\x03\x07\x04\x07\x05\x07\x06\x07\x07\x07\x08\x07\x09\x07\x0A\x07\x0B\x07\x0C\x07\x0D\x07\xF7\x07\xF8\x07\xF9\x07\x30\x08\x31\x08\x32\x08\x33\x08\x34\x08\x35\x08\x36\x08\x37\x08\x38\x08\x39\x08\x3A\x08\x3B\x08\x3C\x08\x3D\x08\x3E\x08\x5E\x08\x64\x09\x65\x09\x70\x09\xF4\x0D\x4F\x0E\x5A\x0E\x5B\x0E\x04\x0F\x05\x0F\x06\x0F\x07\x0F\x08\x0F\x09\x0F\x0A\x0F\x0B\x0F\x0C\x0F\x0D\x0F\x0E\x0F\x0F\x0F\x10\x0F\x11\x0F\x12\x0F\x3A\x0F\x3B\x0F\x3C\x0F\x3D\x0F\x85\x0F\xD0\x0F\xD1\x0F\xD2\x0F\xD3\x0F\xD4\x0F\xD9\x0F\xDA\x0F\x4A\x10\x4B\x10\x4C\x10\x4D\x10\x4E\x10\x4F\x10\xFB\x10\x61\x13\x62\x13\x63\x13\x64\x13\x65\x13\x66\x13\x67\x13\x68\x13\x00\x14\x6D\x16\x6E\x16\x9B\x16\x9C\x16\xEB\x16\xEC\x16\xED\x16\x35\x17\x36\x17\xD4\x17\xD5\x17\xD6\x17\xD8\x17\xD9\x17\xDA\x17\x00\x18\x01\x18\x02\x18\x03\x18\x04\x18\x05\x18\x06\x18\x07\x18\x08\x18\x09\x18\x0A\x18\x44\x19\x45\x19\x1E\x1A\x1F\x1A\xA0\x1A\xA1\x1A\xA2\x1A\xA3\x1A\xA4\x1A\xA5\x1A\xA6\x1A\xA8\x1A\xA9\x1A\xAA\x1A\xAB\x1A\xAC\x1A\xAD\x1A\x5A\x1B\x5B\x1B\x5C\x1B\x5D\x1B\x5E\x1B\x5F\x1B\x60\x1B\xFC\x1B\xFD\x1B\xFE\x1B\xFF\x1B\x3B\x1C\x3C\x1C\x3D\x1C\x3E\x1C\x3F\x1C\x7E\x1C\x7F\x1C\xD3\x1C\x10\x20\x11\x20\x12\x20\x13\x20\x14\x20\x15\x20\x16\x20\x17\x20\x18\x20\x19\x20\x1A\x20\x1B\x20\x1C\x20\x1D\x20\x1E\x20\x1F\x20\x20\x20\x21\x20\x22\x20\x23\x20\x24\x20\x25\x20\x26\x20\x27\x20\x30\x20\x31\x20\x32\x20\x33\x20\x34\x20\x35\x20\x36\x20\x37\x20\x38\x20\x39\x20\x3A\x20\x3B\x20\x3C\x20\x3D\x20\x3E\x20\x3F\x20\x40\x20\x41\x20\x42\x20\x43\x20\x45\x20\x46\x20\x47\x20\x48\x20\x49\x20\x4A\x20\x4B\x20\x4C\x20\x4D\x20\x4E\x20\x4F\x20\x50\x20\x51\x20\x53\x20\x54\x20\x55\x20\x56\x20\x57\x20\x58\x20\x59\x20\x5A\x20\x5B\x20\x5C\x20\x5D\x20\x5E\x20\x7D\x20\x7E\x20\x8D\x20\x8E\x20\x29\x23\x2A\x23\x68\x27\x69\x27\x6A\x27\x6B\x27\x6C\x27\x6D\x27\x6E\x27\x6F\x27\x70\x27\x71\x27\x72\x27\x73\x27\x74\x27\x75\x27\xC5\x27\xC6\x27\xE6\x27\xE7\x27\xE8\x27\xE9\x27\xEA\x27\xEB\x27\xEC\x27\xED\x27\xEE\x27\xEF\x27\x83\x29\x84\x29\x85\x29\x86\x29\x87\x29\x88\x29\x89\x29\x8A\x29\x8B\x29\x8C\x29\x8D\x29\x8E\x29\x8F\x29\x90\x29\x91\x29\x92\x29\x93\x29\x94\x29\x95\x29\x96\x29\x97\x29\x98\x29\xD8\x29\xD9\x29\xDA\x29\xDB\x29\xFC\x29\xFD\x29\xF9\x2C\xFA\x2C\xFB\x2C\xFC\x2C\xFE\x2C\xFF\x2C\x70\x2D\x00\x2E\x01\x2E\x02\x2E\x03\x2E\x04\x2E\x05\x2E\x06\x2E\x07\x2E\x08\x2E\x09\x2E\x0A\x2E\x0B\x2E\x0C\x2E\x0D\x2E\x0E\x2E\x0F\x2E\x10\x2E\x11\x2E\x12\x2E\x13\x2E\x14\x2E\x15\x2E\x16\x2E\x17\x2E\x18\x2E\x19\x2E\x1A\x2E\x1B\x2E\x1C\x2E\x1D\x2E\x1E\x2E\x1F\x2E\x20\x2E\x21\x2E\x22\x2E\x23\x2E\x24\x2E\x25\x2E\x26\x2E\x27\x2E\x28\x2E\x29\x2E\x2A\x2E\x2B\x2E\x2C\x2E\x2D\x2E\x2E\x2E\x30\x2E\x31\x2E\x01\x30\x02\x30\x03\x30\x08\x30\x09\x30\x0A\x30\x0B\x30\x0C\x30\x0D\x30\x0E\x30\x0F\x30\x10\x30\x11\x30\x14\x30\x15\x30\x16\x30\x17\x30\x18\x30\x19\x30\x1A\x30\x1B\x30\x1C\x30\x1D\x30\x1E\x30\x1F\x30\x30\x30\x3D\x30\xA0\x30\xFB\x30\xFE\xA4\xFF\xA4\x0D\xA6\x0E\xA6\x0F\xA6\x73\xA6\x7E\xA6\xF2\xA6\xF3\xA6\xF4\xA6\xF5\xA6\xF6\xA6\xF7\xA6\x74\xA8\x75\xA8\x76\xA8\x77\xA8\xCE\xA8\xCF\xA8\xF8\xA8\xF9\xA8\xFA\xA8\x2E\xA9\x2F\xA9\x5F\xA9\xC1\xA9\xC2\xA9\xC3\xA9\xC4\xA9\xC5\xA9\xC6\xA9\xC7\xA9\xC8\xA9\xC9\xA9\xCA\xA9\xCB\xA9\xCC\xA9\xCD\xA9\xDE\xA9\xDF\xA9\x5C\xAA\x5D\xAA\x5E\xAA\x5F\xAA\xDE\xAA\xDF\xAA\xEB\xAB\x3E\xFD\x3F\xFD\x10\xFE\x11\xFE\x12\xFE\x13\xFE\x14\xFE\x15\xFE\x16\xFE\x17\xFE\x18\xFE\x19\xFE\x30\xFE\x31\xFE\x32\xFE\x33\xFE\x34\xFE\x35\xFE\x36\xFE\x37\xFE\x38\xFE\x39\xFE\x3A\xFE\x3B\xFE\x3C\xFE\x3D\xFE\x3E\xFE\x3F\xFE\x40\xFE\x41\xFE\x42\xFE\x43\xFE\x44\xFE\x45\xFE\x46\xFE\x47\xFE\x48\xFE\x49\xFE\x4A\xFE\x4B\xFE\x4C\xFE\x4D\xFE\x4E\xFE\x4F\xFE\x50\xFE\x51\xFE\x52\xFE\x54\xFE\x55\xFE\x56\xFE\x57\xFE\x58\xFE\x59\xFE\x5A\xFE\x5B\xFE\x5C\xFE\x5D\xFE\x5E\xFE\x5F\xFE\x60\xFE\x61\xFE\x63\xFE\x68\xFE\x6A\xFE\x6B\xFE\x01\xFF\x02\xFF\x03\xFF\x05\xFF\x06\xFF\x07\xFF\x08\xFF\x09\xFF\x0A\xFF\x0C\xFF\x0D\xFF\x0E\xFF\x0F\xFF\x1A\xFF\x1B\xFF\x1F\xFF\x20\xFF\x3B\xFF\x3C\xFF\x3D\xFF\x3F\xFF\x5B\xFF\x5D\xFF\x5F\xFF\x60\xFF\x61\xFF\x62\xFF\x63\xFF\x64\xFF\x65\xFF\x00\xD8\x00\xDD\x00\xD8\x01\xDD\x00\xD8\x9F\xDF\x00\xD8\xD0\xDF\x02\xD8\x57\xDC\x02\xD8\x1F\xDD\x02\xD8\x3F\xDD\x02\xD8\x50\xDE\x02\xD8\x51\xDE\x02\xD8\x52\xDE\x02\xD8\x53\xDE\x02\xD8\x54\xDE\x02\xD8\x55\xDE\x02\xD8\x56\xDE\x02\xD8\x57\xDE\x02\xD8\x58\xDE\x02\xD8\x7F\xDE\x02\xD8\x39\xDF\x02\xD8\x3A\xDF\x02\xD8\x3B\xDF\x02\xD8\x3C\xDF\x02\xD8\x3D\xDF\x02\xD8\x3E\xDF\x02\xD8\x3F\xDF\x04\xD8\x47\xDC\x04\xD8\x48\xDC\x04\xD8\x49\xDC\x04\xD8\x4A\xDC\x04\xD8\x4B\xDC\x04\xD8\x4C\xDC\x04\xD8\x4D\xDC\x04\xD8\xBB\xDC\x04\xD8\xBC\xDC\x04\xD8\xBE\xDC\x04\xD8\xBF\xDC\x04\xD8\xC0\xDC\x04\xD8\xC1\xDC\x09\xD8\x70\xDC\x09\xD8\x71\xDC\x09\xD8\x72\xDC\x09\xD8\x73\xDC\x00\x00";
int main ()
{
	if (!scan (reinterpret_cast<const YYCTYPE *> (buffer_P), reinterpret_cast<const YYCTYPE *> (buffer_P + sizeof (buffer_P) - 1)))
		printf("test 'P' failed\n");
}
