#include <stdio.h>
#define YYCTYPE unsigned short
bool scan(const YYCTYPE * start, const YYCTYPE * const limit)
{
	__attribute__((unused)) const YYCTYPE * YYMARKER; // silence compiler warnings when YYMARKER is not used
#	define YYCURSOR start
Nl:
	/*!re2c
		re2c:yyfill:enable = 0;
		Nl = [\u16ee-\u16f0\u2160-\u2182\u2185-\u2188\u3007-\u3007\u3021-\u3029\u3038-\u303a\ua6e6-\ua6ef\U00010140-\U00010174\U00010341-\U00010341\U0001034a-\U0001034a\U000103d1-\U000103d5\U00012400-\U00012462];
		Nl { goto Nl; }
		[^] { return YYCURSOR == limit; }
	*/
}
static const char buffer_Nl [] = "\xEE\x16\xEF\x16\xF0\x16\x60\x21\x61\x21\x62\x21\x63\x21\x64\x21\x65\x21\x66\x21\x67\x21\x68\x21\x69\x21\x6A\x21\x6B\x21\x6C\x21\x6D\x21\x6E\x21\x6F\x21\x70\x21\x71\x21\x72\x21\x73\x21\x74\x21\x75\x21\x76\x21\x77\x21\x78\x21\x79\x21\x7A\x21\x7B\x21\x7C\x21\x7D\x21\x7E\x21\x7F\x21\x80\x21\x81\x21\x82\x21\x85\x21\x86\x21\x87\x21\x88\x21\x07\x30\x21\x30\x22\x30\x23\x30\x24\x30\x25\x30\x26\x30\x27\x30\x28\x30\x29\x30\x38\x30\x39\x30\x3A\x30\xE6\xA6\xE7\xA6\xE8\xA6\xE9\xA6\xEA\xA6\xEB\xA6\xEC\xA6\xED\xA6\xEE\xA6\xEF\xA6\x00\xD8\x40\xDD\x00\xD8\x41\xDD\x00\xD8\x42\xDD\x00\xD8\x43\xDD\x00\xD8\x44\xDD\x00\xD8\x45\xDD\x00\xD8\x46\xDD\x00\xD8\x47\xDD\x00\xD8\x48\xDD\x00\xD8\x49\xDD\x00\xD8\x4A\xDD\x00\xD8\x4B\xDD\x00\xD8\x4C\xDD\x00\xD8\x4D\xDD\x00\xD8\x4E\xDD\x00\xD8\x4F\xDD\x00\xD8\x50\xDD\x00\xD8\x51\xDD\x00\xD8\x52\xDD\x00\xD8\x53\xDD\x00\xD8\x54\xDD\x00\xD8\x55\xDD\x00\xD8\x56\xDD\x00\xD8\x57\xDD\x00\xD8\x58\xDD\x00\xD8\x59\xDD\x00\xD8\x5A\xDD\x00\xD8\x5B\xDD\x00\xD8\x5C\xDD\x00\xD8\x5D\xDD\x00\xD8\x5E\xDD\x00\xD8\x5F\xDD\x00\xD8\x60\xDD\x00\xD8\x61\xDD\x00\xD8\x62\xDD\x00\xD8\x63\xDD\x00\xD8\x64\xDD\x00\xD8\x65\xDD\x00\xD8\x66\xDD\x00\xD8\x67\xDD\x00\xD8\x68\xDD\x00\xD8\x69\xDD\x00\xD8\x6A\xDD\x00\xD8\x6B\xDD\x00\xD8\x6C\xDD\x00\xD8\x6D\xDD\x00\xD8\x6E\xDD\x00\xD8\x6F\xDD\x00\xD8\x70\xDD\x00\xD8\x71\xDD\x00\xD8\x72\xDD\x00\xD8\x73\xDD\x00\xD8\x74\xDD\x00\xD8\x41\xDF\x00\xD8\x4A\xDF\x00\xD8\xD1\xDF\x00\xD8\xD2\xDF\x00\xD8\xD3\xDF\x00\xD8\xD4\xDF\x00\xD8\xD5\xDF\x09\xD8\x00\xDC\x09\xD8\x01\xDC\x09\xD8\x02\xDC\x09\xD8\x03\xDC\x09\xD8\x04\xDC\x09\xD8\x05\xDC\x09\xD8\x06\xDC\x09\xD8\x07\xDC\x09\xD8\x08\xDC\x09\xD8\x09\xDC\x09\xD8\x0A\xDC\x09\xD8\x0B\xDC\x09\xD8\x0C\xDC\x09\xD8\x0D\xDC\x09\xD8\x0E\xDC\x09\xD8\x0F\xDC\x09\xD8\x10\xDC\x09\xD8\x11\xDC\x09\xD8\x12\xDC\x09\xD8\x13\xDC\x09\xD8\x14\xDC\x09\xD8\x15\xDC\x09\xD8\x16\xDC\x09\xD8\x17\xDC\x09\xD8\x18\xDC\x09\xD8\x19\xDC\x09\xD8\x1A\xDC\x09\xD8\x1B\xDC\x09\xD8\x1C\xDC\x09\xD8\x1D\xDC\x09\xD8\x1E\xDC\x09\xD8\x1F\xDC\x09\xD8\x20\xDC\x09\xD8\x21\xDC\x09\xD8\x22\xDC\x09\xD8\x23\xDC\x09\xD8\x24\xDC\x09\xD8\x25\xDC\x09\xD8\x26\xDC\x09\xD8\x27\xDC\x09\xD8\x28\xDC\x09\xD8\x29\xDC\x09\xD8\x2A\xDC\x09\xD8\x2B\xDC\x09\xD8\x2C\xDC\x09\xD8\x2D\xDC\x09\xD8\x2E\xDC\x09\xD8\x2F\xDC\x09\xD8\x30\xDC\x09\xD8\x31\xDC\x09\xD8\x32\xDC\x09\xD8\x33\xDC\x09\xD8\x34\xDC\x09\xD8\x35\xDC\x09\xD8\x36\xDC\x09\xD8\x37\xDC\x09\xD8\x38\xDC\x09\xD8\x39\xDC\x09\xD8\x3A\xDC\x09\xD8\x3B\xDC\x09\xD8\x3C\xDC\x09\xD8\x3D\xDC\x09\xD8\x3E\xDC\x09\xD8\x3F\xDC\x09\xD8\x40\xDC\x09\xD8\x41\xDC\x09\xD8\x42\xDC\x09\xD8\x43\xDC\x09\xD8\x44\xDC\x09\xD8\x45\xDC\x09\xD8\x46\xDC\x09\xD8\x47\xDC\x09\xD8\x48\xDC\x09\xD8\x49\xDC\x09\xD8\x4A\xDC\x09\xD8\x4B\xDC\x09\xD8\x4C\xDC\x09\xD8\x4D\xDC\x09\xD8\x4E\xDC\x09\xD8\x4F\xDC\x09\xD8\x50\xDC\x09\xD8\x51\xDC\x09\xD8\x52\xDC\x09\xD8\x53\xDC\x09\xD8\x54\xDC\x09\xD8\x55\xDC\x09\xD8\x56\xDC\x09\xD8\x57\xDC\x09\xD8\x58\xDC\x09\xD8\x59\xDC\x09\xD8\x5A\xDC\x09\xD8\x5B\xDC\x09\xD8\x5C\xDC\x09\xD8\x5D\xDC\x09\xD8\x5E\xDC\x09\xD8\x5F\xDC\x09\xD8\x60\xDC\x09\xD8\x61\xDC\x09\xD8\x62\xDC\x00\x00";
int main ()
{
	if (!scan (reinterpret_cast<const YYCTYPE *> (buffer_Nl), reinterpret_cast<const YYCTYPE *> (buffer_Nl + sizeof (buffer_Nl) - 1)))
		printf("test 'Nl' failed\n");
}
