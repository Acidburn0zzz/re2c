/* Generated by re2c 0.14.3 on Tue Jul 21 12:00:08 2015 */
#include <stdio.h>

#include "src/conf/msg.h"
#include "src/conf/opt.h"

namespace re2c
{

parse_opts_t parse_opts (int argc, char ** argv, Opt & opts)
{
	if (argc == 1)
	{
		usage ();
		return EXIT_FAIL;
	}

#define YYCTYPE char
	YYCTYPE * YYCURSOR;
	YYCTYPE * YYMARKER;



opt:
	YYCURSOR = *++argv;
	if (YYCURSOR == NULL)
	{
		goto end;
	}

{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};

	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy2;
	if (yych == '-') goto yy5;
	goto yy4;
yy2:
	++YYCURSOR;
	{
		error ("bad option: %s\n", *argv);
		return EXIT_FAIL;
	}
yy4:
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy14;
yy5:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy9;
	if (yych == '-') goto yy7;
	{ goto opt_short; }
yy7:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy11;
	{ goto opt_long; }
yy9:
	++YYCURSOR;
	{ if (!opts.source ("<stdin>")) return EXIT_FAIL; goto opt; }
yy11:
	++YYCURSOR;
	{ goto end; }
yy13:
	++YYCURSOR;
	yych = *YYCURSOR;
yy14:
	if (yybm[0+yych] & 128) {
		goto yy13;
	}
	++YYCURSOR;
	{ if (!opts.source (*argv))     return EXIT_FAIL; goto opt; }
}


opt_short:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'c') {
		if (yych <= 'C') {
			if (yych <= '7') {
				if (yych <= 0x00) goto yy19;
				if (yych == '1') goto yy23;
				goto yy21;
			} else {
				if (yych <= '8') goto yy25;
				if (yych == '?') goto yy27;
				goto yy21;
			}
		} else {
			if (yych <= 'U') {
				if (yych <= 'D') goto yy29;
				if (yych == 'F') goto yy31;
				goto yy21;
			} else {
				if (yych <= 'V') goto yy33;
				if (yych <= 'a') goto yy21;
				if (yych <= 'b') goto yy35;
				goto yy37;
			}
		}
	} else {
		if (yych <= 'o') {
			if (yych <= 'g') {
				if (yych <= 'd') goto yy39;
				if (yych <= 'e') goto yy41;
				if (yych <= 'f') goto yy43;
				goto yy45;
			} else {
				if (yych <= 'h') goto yy27;
				if (yych <= 'i') goto yy47;
				if (yych <= 'n') goto yy21;
				goto yy49;
			}
		} else {
			if (yych <= 't') {
				if (yych <= 'q') goto yy21;
				if (yych <= 'r') goto yy51;
				if (yych <= 's') goto yy53;
				goto yy55;
			} else {
				if (yych <= 'v') {
					if (yych <= 'u') goto yy57;
					goto yy59;
				} else {
					if (yych <= 'w') goto yy61;
					if (yych <= 'x') goto yy63;
					goto yy21;
				}
			}
		}
	}
yy19:
	++YYCURSOR;
	{ goto opt; }
yy21:
	++YYCURSOR;
	{
		error ("bad short option: %s\n", *argv);
		return EXIT_FAIL;
	}
yy23:
	++YYCURSOR;
	{ goto opt_short; }
yy25:
	++YYCURSOR;
	{ if (!opts.utf_8 ())      { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy27:
	++YYCURSOR;
	{ usage ();   return EXIT_OK; }
yy29:
	++YYCURSOR;
	{ opts.emit_dot ();         goto opt_short; }
yy31:
	++YYCURSOR;
	{ opts.flex_syntax ();      goto opt_short; }
yy33:
	++YYCURSOR;
	{ vernum ();  return EXIT_OK; }
yy35:
	++YYCURSOR;
	{ opts.bit_vectors ();      goto opt_short; }
yy37:
	++YYCURSOR;
	{ opts.start_conditions (); goto opt_short; }
yy39:
	++YYCURSOR;
	{ opts.debug_output ();     goto opt_short; }
yy41:
	++YYCURSOR;
	{ if (!opts.ecb ())        { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy43:
	++YYCURSOR;
	{ opts.storable_state ();   goto opt_short; }
yy45:
	++YYCURSOR;
	{ opts.computed_gotos ();   goto opt_short; }
yy47:
	++YYCURSOR;
	{ opts.no_debug_info ();    goto opt_short; }
yy49:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy67;
	{ *argv = YYCURSOR;   goto opt_output; }
yy51:
	++YYCURSOR;
	{ opts.reusable ();         goto opt_short; }
yy53:
	++YYCURSOR;
	{ opts.nested_ifs ();       goto opt_short; }
yy55:
	++YYCURSOR;
	if ((yych = *YYCURSOR) <= 0x00) goto yy65;
	{ *argv = YYCURSOR;   goto opt_header; }
yy57:
	++YYCURSOR;
	{ if (!opts.unicode ())    { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy59:
	++YYCURSOR;
	{ version (); return EXIT_OK; }
yy61:
	++YYCURSOR;
	{ if (!opts.wide_chars ()) { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy63:
	++YYCURSOR;
	{ if (!opts.utf_16 ())     { error_encoding (); return EXIT_FAIL; } goto opt_short; }
yy65:
	++YYCURSOR;
	{ YYCURSOR = *++argv; goto opt_header; }
yy67:
	++YYCURSOR;
	{ YYCURSOR = *++argv; goto opt_output; }
}


opt_long:

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	switch (yych) {
	case 'b':	goto yy73;
	case 'c':	goto yy74;
	case 'd':	goto yy75;
	case 'e':	goto yy76;
	case 'f':	goto yy77;
	case 'h':	goto yy78;
	case 'i':	goto yy79;
	case 'n':	goto yy80;
	case 'o':	goto yy81;
	case 'r':	goto yy82;
	case 's':	goto yy83;
	case 't':	goto yy84;
	case 'u':	goto yy85;
	case 'v':	goto yy86;
	case 'w':	goto yy87;
	default:	goto yy71;
	}
yy71:
	++YYCURSOR;
yy72:
	{
		error ("bad long option: %s\n", *argv);
		return EXIT_FAIL;
	}
yy73:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'i') goto yy369;
	goto yy72;
yy74:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy329;
	if (yych == 'o') goto yy330;
	goto yy72;
yy75:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy316;
	goto yy72;
yy76:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'l') {
		if (yych == 'c') goto yy278;
		goto yy72;
	} else {
		if (yych <= 'm') goto yy276;
		if (yych <= 'n') goto yy277;
		goto yy72;
	}
yy77:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'l') goto yy264;
	goto yy72;
yy78:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy259;
	goto yy72;
yy79:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy253;
	goto yy72;
yy80:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy212;
	if (yych == 'o') goto yy211;
	goto yy72;
yy81:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'u') goto yy204;
	goto yy72;
yy82:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy195;
	goto yy72;
yy83:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych <= 'j') {
		if (yych == 'i') goto yy143;
		goto yy72;
	} else {
		if (yych <= 'k') goto yy144;
		if (yych == 't') goto yy145;
		goto yy72;
	}
yy84:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'y') goto yy131;
	goto yy72;
yy85:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy114;
	if (yych == 't') goto yy113;
	goto yy72;
yy86:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy100;
	goto yy72;
yy87:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'i') goto yy72;
	yych = *++YYCURSOR;
	if (yych == 'd') goto yy90;
yy89:
	YYCURSOR = YYMARKER;
	goto yy72;
yy90:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ if (!opts.wide_chars ()) { error_encoding (); return EXIT_FAIL; } goto opt; }
yy100:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych == 'n') goto yy102;
	if (yych == 's') goto yy103;
	goto yy89;
yy102:
	yych = *++YYCURSOR;
	if (yych == 'u') goto yy109;
	goto yy89;
yy103:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ version (); return EXIT_OK; }
yy109:
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ vernum ();  return EXIT_OK; }
yy113:
	yych = *++YYCURSOR;
	if (yych == 'f') goto yy122;
	goto yy89;
yy114:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ if (!opts.unicode ())    { error_encoding (); return EXIT_FAIL; } goto opt; }
yy122:
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych == '1') goto yy124;
	if (yych == '8') goto yy125;
	goto yy89;
yy124:
	yych = *++YYCURSOR;
	if (yych == '6') goto yy128;
	goto yy89;
yy125:
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ if (!opts.utf_8 ())      { error_encoding (); return EXIT_FAIL; } goto opt; }
yy128:
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ if (!opts.utf_16 ())     { error_encoding (); return EXIT_FAIL; } goto opt; }
yy131:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ YYCURSOR = *++argv; goto opt_header; }
yy143:
	yych = *++YYCURSOR;
	if (yych == 'n') goto yy184;
	goto yy89;
yy144:
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy176;
	goto yy89;
yy145:
	yych = *++YYCURSOR;
	if (yych == 'a') goto yy146;
	if (yych == 'o') goto yy147;
	goto yy89;
yy146:
	yych = *++YYCURSOR;
	if (yych == 'r') goto yy161;
	goto yy89;
yy147:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.storable_state ();     goto opt; }
yy161:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.start_conditions ();   goto opt; }
yy176:
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.skeleton ();           goto opt; }
yy184:
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ goto opt; }
yy195:
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.reusable ();           goto opt; }
yy204:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ YYCURSOR = *++argv; goto opt_output; }
yy211:
	yych = *++YYCURSOR;
	if (yych == '-') goto yy223;
	goto yy89;
yy212:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'f') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.nested_ifs ();         goto opt; }
yy223:
	yych = *++YYCURSOR;
	if (yych == 'd') goto yy225;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy237;
	goto yy89;
yy225:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'f') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.no_debug_info ();      goto opt; }
yy237:
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.no_generation_date (); goto opt; }
yy253:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ goto opt_input; }
yy259:
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ usage ();   return EXIT_OK; }
yy264:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'x') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'x') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.flex_syntax ();        goto opt; }
yy276:
	yych = *++YYCURSOR;
	if (yych == 'i') goto yy297;
	if (yych == 'p') goto yy298;
	goto yy89;
yy277:
	yych = *++YYCURSOR;
	if (yych == 'c') goto yy282;
	goto yy89;
yy278:
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ if (!opts.ecb ())        { error_encoding (); return EXIT_FAIL; } goto opt; }
yy282:
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ goto opt_encoding_policy; }
yy297:
	yych = *++YYCURSOR;
	if (yych == 't') goto yy309;
	goto yy89;
yy298:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ goto opt_empty_class; }
yy309:
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.emit_dot ();           goto opt; }
yy316:
	yych = *++YYCURSOR;
	if (yych != 'b') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.debug_output ();       goto opt; }
yy329:
	yych = *++YYCURSOR;
	if (yych == 's') goto yy345;
	goto yy89;
yy330:
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'g') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.computed_gotos ();     goto opt; }
yy345:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych == 's') goto yy351;
	if (yych != 'v') goto yy89;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy362;
	goto yy89;
yy351:
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'v') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.case_insensitive ();   goto opt; }
yy362:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'd') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.case_inverted ();      goto opt; }
yy369:
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'v') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy89;
	yych = *++YYCURSOR;
	if (yych != 's') goto yy89;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy89;
	++YYCURSOR;
	{ opts.bit_vectors ();        goto opt; }
}


opt_output:

{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy383;
	if (yych != '-') goto yy385;
yy383:
	++YYCURSOR;
	{
		error ("bad argument to option -o, --output: %s\n", *argv);
		return EXIT_FAIL;
	}
yy385:
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy387;
yy386:
	++YYCURSOR;
	yych = *YYCURSOR;
yy387:
	if (yybm[0+yych] & 128) {
		goto yy386;
	}
	++YYCURSOR;
	{ if (!opts.output (*argv)) return EXIT_FAIL; goto opt; }
}


opt_header:

{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	yych = *YYCURSOR;
	if (yych <= 0x00) goto yy392;
	if (yych != '-') goto yy394;
yy392:
	++YYCURSOR;
	{
		error ("bad argument to option -t, --type-header: %s\n", *argv);
		return EXIT_FAIL;
	}
yy394:
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy396;
yy395:
	++YYCURSOR;
	yych = *YYCURSOR;
yy396:
	if (yybm[0+yych] & 128) {
		goto yy395;
	}
	++YYCURSOR;
	{ if (!opts.type_header (*argv)) return EXIT_FAIL; goto opt; }
}


opt_encoding_policy:
	YYCURSOR = *++argv;

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'h') {
		if (yych == 'f') goto yy403;
	} else {
		if (yych <= 'i') goto yy404;
		if (yych == 's') goto yy405;
	}
	++YYCURSOR;
yy402:
	{
		error ("bad argument to option --encoding-policy (expected: ignore | substitute | fail): %s\n", *argv);
		return EXIT_FAIL;
	}
yy403:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy425;
	goto yy402;
yy404:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'g') goto yy418;
	goto yy402;
yy405:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'u') goto yy402;
	yych = *++YYCURSOR;
	if (yych == 'b') goto yy408;
yy407:
	YYCURSOR = YYMARKER;
	goto yy402;
yy408:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy407;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy407;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_SUBSTITUTE); goto opt; }
yy418:
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy407;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy407;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_IGNORE);     goto opt; }
yy425:
	yych = *++YYCURSOR;
	if (yych != 'i') goto yy407;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy407;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy407;
	++YYCURSOR;
	{ opts.encoding_policy (Enc::POLICY_FAIL);       goto opt; }
}


opt_input:
	YYCURSOR = *++argv;

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych <= 'b') goto yy432;
	if (yych <= 'c') goto yy434;
	if (yych <= 'd') goto yy435;
yy432:
	++YYCURSOR;
yy433:
	{
		error ("bad argument to option --input (expected: default | custom): %s\n", *argv);
		return EXIT_FAIL;
	}
yy434:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'u') goto yy445;
	goto yy433;
yy435:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'e') goto yy433;
	yych = *++YYCURSOR;
	if (yych == 'f') goto yy438;
yy437:
	YYCURSOR = YYMARKER;
	goto yy433;
yy438:
	yych = *++YYCURSOR;
	if (yych != 'a') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 'u') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 'l') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy437;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy437;
	++YYCURSOR;
	{ opts.input (InputAPI::DEFAULT); goto opt; }
yy445:
	yych = *++YYCURSOR;
	if (yych != 's') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy437;
	yych = *++YYCURSOR;
	if (yych != 'm') goto yy437;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy437;
	++YYCURSOR;
	{ opts.input (InputAPI::CUSTOM);  goto opt; }
}


opt_empty_class:
	YYCURSOR = *++argv;

{
	YYCTYPE yych;
	yych = *YYCURSOR;
	if (yych == 'e') goto yy456;
	if (yych == 'm') goto yy457;
	++YYCURSOR;
yy455:
	{
		error ("bad argument to option --empty-class (expected: match-empty | match-none | error): %s\n", *argv);
		return EXIT_FAIL;
	}
yy456:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych == 'r') goto yy477;
	goto yy455;
yy457:
	yych = *(YYMARKER = ++YYCURSOR);
	if (yych != 'a') goto yy455;
	yych = *++YYCURSOR;
	if (yych == 't') goto yy460;
yy459:
	YYCURSOR = YYMARKER;
	goto yy455;
yy460:
	yych = *++YYCURSOR;
	if (yych != 'c') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'h') goto yy459;
	yych = *++YYCURSOR;
	if (yych != '-') goto yy459;
	yych = *++YYCURSOR;
	if (yych == 'e') goto yy464;
	if (yych == 'n') goto yy465;
	goto yy459;
yy464:
	yych = *++YYCURSOR;
	if (yych == 'm') goto yy471;
	goto yy459;
yy465:
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'n') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'e') goto yy459;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy459;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_MATCH_NONE);  goto opt; }
yy471:
	yych = *++YYCURSOR;
	if (yych != 'p') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 't') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'y') goto yy459;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy459;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_MATCH_EMPTY); goto opt; }
yy477:
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'o') goto yy459;
	yych = *++YYCURSOR;
	if (yych != 'r') goto yy459;
	yych = *++YYCURSOR;
	if (yych >= 0x01) goto yy459;
	++YYCURSOR;
	{ opts.empty_class (EMPTY_CLASS_ERROR);       goto opt; }
}


end:
	if (!opts.source_file)
	{
		error ("no source file\n");
		return EXIT_FAIL;
	}
	if (!cFlag && opts.header_file)
	{
		error ("can only output a header file when using -c switch\n");
		return EXIT_FAIL;
	}
	if (DFlag && (bFlag || dFlag || sFlag || flag_skeleton))
	{
		error ("cannot combine -D with -b, -d, -s or --skeleton switches\n");
		return EXIT_FAIL;
	}

	return OK;

#undef YYCTYPE
}

} // namespace re2c
