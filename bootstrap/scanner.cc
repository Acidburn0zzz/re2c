/* Generated by re2c 0.10.0.dev on Sun Jan  1 01:08:57 2006 */
#line 1 "scanner.re"
/* $Id$ */
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include "scanner.h"
#include "parser.h"
#include "y.tab.h"
#include "globals.h"

extern YYSTYPE yylval;

#ifndef MAX
#define MAX(a,b) (((a)>(b))?(a):(b))
#endif

#define	BSIZE	8192

#define	YYCTYPE		char
#define	YYCURSOR	cursor
#define	YYLIMIT		lim
#define	YYMARKER	ptr
#define	YYFILL(n)	{cursor = fill(cursor);}

#define	RETURN(i)	{cur = cursor; return i;}

namespace re2c
{

Scanner::Scanner(std::istream& i) : in(i),
	bot(NULL), tok(NULL), ptr(NULL), cur(NULL), pos(NULL), lim(NULL),
	top(NULL), eof(NULL), tchar(0), tline(0), cline(1), iscfg(0)
{
    ;
}

char *Scanner::fill(char *cursor)
{
	if(!eof)
	{
		uint cnt = tok - bot;
		if(cnt)
		{
			memcpy(bot, tok, lim - tok);
			tok = bot;
			ptr -= cnt;
			cursor -= cnt;
			pos -= cnt;
			lim -= cnt;
		}
		if((top - lim) < BSIZE)
		{
			char *buf = new char[(lim - bot) + BSIZE];
			memcpy(buf, tok, lim - tok);
			tok = buf;
			ptr = &buf[ptr - bot];
			cursor = &buf[cursor - bot];
			pos = &buf[pos - bot];
			lim = &buf[lim - bot];
			top = &lim[BSIZE];
			delete [] bot;
			bot = buf;
		}
		if((cnt = in.rdbuf()->sgetn((char*) lim, BSIZE)) != BSIZE)
		{
			eof = &lim[cnt]; *eof++ = '\0';
		}
		lim += cnt;
	}
	return cursor;
}

#line 89 "scanner.re"


int Scanner::echo(std::ostream &out){
    char *cursor = cur;
    bool ignore_eoc = false;

    // Catch EOF
    if (eof && cursor == eof)
	{
    	return 0;
	}

    tok = cursor;
echo:

#line 91 "scanner.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	goto yy0;
	++YYCURSOR;
yy0:
	if((YYLIMIT - YYCURSOR) < 11) YYFILL(11);
	yych = *YYCURSOR;
	if(yych <= ')') {
		if(yych <= 0x00) goto yy7;
		if(yych == 0x0A) goto yy5;
		goto yy9;
	} else {
		if(yych <= '*') goto yy4;
		if(yych != '/') goto yy9;
		goto yy2;
	}
yy2:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == '*') goto yy12;
	goto yy3;
yy3:
#line 135 "scanner.re"
	{
					goto echo;
				}
#line 119 "scanner.cc"
yy4:
	yych = *++YYCURSOR;
	if(yych == '/') goto yy10;
	goto yy3;
yy5:
	++YYCURSOR;
	goto yy6;
yy6:
#line 124 "scanner.re"
	{
					out.write((const char*)(tok), (const char*)(cursor) - (const char*)(tok));
					tok = pos = cursor; cline++; oline++;
				  	goto echo;
				}
#line 134 "scanner.cc"
yy7:
	++YYCURSOR;
	goto yy8;
yy8:
#line 129 "scanner.re"
	{
					out.write((const char*)(tok), (const char*)(cursor) - (const char*)(tok) - 1); // -1 so we don't write out the \0
					if(cursor == eof) {
						RETURN(0);
					}
				}
#line 146 "scanner.cc"
yy9:
	yych = *++YYCURSOR;
	goto yy3;
yy10:
	++YYCURSOR;
	goto yy11;
yy11:
#line 115 "scanner.re"
	{
					if (ignore_eoc) {
						ignore_eoc = false;
					} else {
						out.write((const char*)(tok), (const char*)(cursor) - (const char*)(tok));
					}
					tok = pos = cursor;
					goto echo;
				}
#line 164 "scanner.cc"
yy12:
	yych = *++YYCURSOR;
	if(yych == '!') goto yy14;
	goto yy13;
yy13:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy3;
	}
yy14:
	yych = *++YYCURSOR;
	if(yych == 'm') goto yy15;
	if(yych == 'r') goto yy16;
	goto yy13;
yy15:
	yych = *++YYCURSOR;
	if(yych == 'a') goto yy21;
	goto yy13;
yy16:
	yych = *++YYCURSOR;
	if(yych != 'e') goto yy13;
	goto yy17;
yy17:
	yych = *++YYCURSOR;
	if(yych != '2') goto yy13;
	goto yy18;
yy18:
	yych = *++YYCURSOR;
	if(yych != 'c') goto yy13;
	goto yy19;
yy19:
	++YYCURSOR;
	goto yy20;
yy20:
#line 104 "scanner.re"
	{ 
					out.write((const char*)(tok), (const char*)(&cursor[-7]) - (const char*)(tok));
					tok = cursor;
					RETURN(1);
				}
#line 205 "scanner.cc"
yy21:
	yych = *++YYCURSOR;
	if(yych != 'x') goto yy13;
	goto yy22;
yy22:
	yych = *++YYCURSOR;
	if(yych != ':') goto yy13;
	goto yy23;
yy23:
	yych = *++YYCURSOR;
	if(yych != 'r') goto yy13;
	goto yy24;
yy24:
	yych = *++YYCURSOR;
	if(yych != 'e') goto yy13;
	goto yy25;
yy25:
	yych = *++YYCURSOR;
	if(yych != '2') goto yy13;
	goto yy26;
yy26:
	yych = *++YYCURSOR;
	if(yych != 'c') goto yy13;
	goto yy27;
yy27:
	++YYCURSOR;
	goto yy28;
yy28:
#line 109 "scanner.re"
	{
					out << "#define YYMAXFILL " << maxFill << std::endl;
					tok = pos = cursor;
					ignore_eoc = true;
					goto echo;
				}
#line 241 "scanner.cc"
}
#line 138 "scanner.re"

}


int Scanner::scan()
{
    char *cursor = cur;
    uint depth;

scan:
    tchar = cursor - pos;
    tline = cline;
    tok = cursor;
	if (iscfg == 1)
	{
		goto config;
	}
	else if (iscfg == 2)
	{
   		goto value;
    }

#line 266 "scanner.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	goto yy29;
	++YYCURSOR;
yy29:
	if((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
	yych = *YYCURSOR;
	if(yych <= '/') {
		if(yych <= '!') {
			if(yych <= 0x0C) {
				if(yych <= 0x08) goto yy56;
				if(yych <= 0x09) goto yy50;
				if(yych <= 0x0A) goto yy52;
				goto yy56;
			} else {
				if(yych <= 0x0D) goto yy54;
				if(yych == ' ') goto yy50;
				goto yy56;
			}
		} else {
			if(yych <= ')') {
				if(yych <= '"') goto yy37;
				if(yych <= '&') goto yy56;
				if(yych <= '\'') goto yy39;
				goto yy43;
			} else {
				if(yych <= '+') {
					if(yych <= '*') goto yy35;
					goto yy44;
				} else {
					if(yych <= '-') goto yy56;
					if(yych <= '.') goto yy48;
					goto yy33;
				}
			}
		}
	} else {
		if(yych <= 'Z') {
			if(yych <= '=') {
				if(yych == ';') goto yy43;
				if(yych <= '<') goto yy56;
				goto yy43;
			} else {
				if(yych == '?') goto yy44;
				if(yych <= '@') goto yy56;
				goto yy45;
			}
		} else {
			if(yych <= 'q') {
				if(yych <= '[') goto yy41;
				if(yych <= '\\') goto yy43;
				if(yych <= '`') goto yy56;
				goto yy45;
			} else {
				if(yych <= 'z') {
					if(yych <= 'r') goto yy47;
					goto yy45;
				} else {
					if(yych <= '{') goto yy31;
					if(yych <= '|') goto yy43;
					goto yy56;
				}
			}
		}
	}
yy31:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= '/') {
		if(yych == ',') goto yy97;
		goto yy32;
	} else {
		if(yych <= '0') goto yy94;
		if(yych <= '9') goto yy95;
		goto yy32;
	}
yy32:
#line 160 "scanner.re"
	{ depth = 1;
				  goto code;
				}
#line 349 "scanner.cc"
yy33:
	++YYCURSOR;
	if((yych = *YYCURSOR) == '*') goto yy92;
	goto yy34;
yy34:
#line 190 "scanner.re"
	{ RETURN(*tok); }
#line 357 "scanner.cc"
yy35:
	++YYCURSOR;
	if((yych = *YYCURSOR) == '/') goto yy90;
	goto yy36;
yy36:
#line 192 "scanner.re"
	{ yylval.op = *tok;
				  RETURN(CLOSE); }
#line 366 "scanner.cc"
yy37:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych != 0x0A) goto yy86;
	goto yy38;
yy38:
#line 177 "scanner.re"
	{ fatal("unterminated string constant (missing \")"); }
#line 375 "scanner.cc"
yy39:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych != 0x0A) goto yy81;
	goto yy40;
yy40:
#line 178 "scanner.re"
	{ fatal("unterminated string constant (missing ')"); }
#line 384 "scanner.cc"
yy41:
	yyaccept = 3;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 0x0A) goto yy42;
	if(yych == '^') goto yy72;
	goto yy71;
yy42:
#line 188 "scanner.re"
	{ fatal("unterminated range (missing ])"); }
#line 394 "scanner.cc"
yy43:
	yych = *++YYCURSOR;
	goto yy34;
yy44:
	yych = *++YYCURSOR;
	goto yy36;
yy45:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy62;
yy46:
#line 212 "scanner.re"
	{ cur = cursor;
				  yylval.symbol = Symbol::find(token());
				  return ID; }
#line 410 "scanner.cc"
yy47:
	yych = *++YYCURSOR;
	if(yych == 'e') goto yy60;
	goto yy62;
yy48:
	++YYCURSOR;
	goto yy49;
yy49:
#line 223 "scanner.re"
	{ cur = cursor;
				  yylval.regexp = mkDot();
				  return RANGE;
				}
#line 424 "scanner.cc"
yy50:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy59;
yy51:
#line 228 "scanner.re"
	{ goto scan; }
#line 432 "scanner.cc"
yy52:
	++YYCURSOR;
	goto yy53;
yy53:
#line 230 "scanner.re"
	{ if(cursor == eof) RETURN(0);
				  pos = cursor; cline++;
				  goto scan;
	    			}
#line 442 "scanner.cc"
yy54:
	++YYCURSOR;
	if((yych = *YYCURSOR) == 0x0A) goto yy57;
	goto yy55;
yy55:
#line 235 "scanner.re"
	{ std::cerr << "line " << tline << ", column " << (tchar + 1) 
						<< ": unexpected character: ";
				  if (isprint(*tok))
				  {
				  	std::cerr << *tok << std::endl;
				  }
				  else
				  {
					std::cerr << "0x" << hexCh(*tok >> 4) << hexCh(*tok) << std::endl;
				  }
				  goto scan;
				}
#line 461 "scanner.cc"
yy56:
	yych = *++YYCURSOR;
	goto yy55;
yy57:
	yych = *++YYCURSOR;
	goto yy53;
yy58:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy59;
yy59:
	if(yych == 0x09) goto yy58;
	if(yych == ' ') goto yy58;
	goto yy51;
yy60:
	yych = *++YYCURSOR;
	if(yych == '2') goto yy63;
	goto yy62;
yy61:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy62;
yy62:
	if(yych <= '@') {
		if(yych <= '/') goto yy46;
		if(yych <= '9') goto yy61;
		goto yy46;
	} else {
		if(yych <= 'Z') goto yy61;
		if(yych <= '`') goto yy46;
		if(yych <= 'z') goto yy61;
		goto yy46;
	}
yy63:
	yych = *++YYCURSOR;
	if(yych != 'c') goto yy62;
	goto yy64;
yy64:
	yyaccept = 4;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych != ':') goto yy62;
	goto yy65;
yy65:
	yych = *++YYCURSOR;
	if(yych <= '@') goto yy66;
	if(yych <= 'Z') goto yy67;
	if(yych <= '`') goto yy66;
	if(yych <= 'z') goto yy67;
	goto yy66;
yy66:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy32;
	case 1:	goto yy38;
	case 2:	goto yy40;
	case 3:	goto yy42;
	case 5:	goto yy98;
	case 4:	goto yy46;
	}
yy67:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy68;
yy68:
	if(yych <= '@') {
		if(yych <= '/') goto yy69;
		if(yych <= '9') goto yy67;
		goto yy69;
	} else {
		if(yych <= 'Z') goto yy67;
		if(yych <= '`') goto yy69;
		if(yych <= 'z') goto yy67;
		goto yy69;
	}
yy69:
#line 216 "scanner.re"
	{ cur = cursor;
				  tok+= 5; /* skip "re2c:" */
				  iscfg = 1;
				  yylval.str = new Str(token());
				  return CONFIG;
				}
#line 547 "scanner.cc"
yy70:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy71;
yy71:
	if(yych <= '[') {
		if(yych == 0x0A) goto yy66;
		goto yy70;
	} else {
		if(yych <= '\\') goto yy74;
		if(yych <= ']') goto yy75;
		goto yy70;
	}
yy72:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy73;
yy73:
	if(yych <= '[') {
		if(yych == 0x0A) goto yy66;
		goto yy72;
	} else {
		if(yych <= '\\') goto yy77;
		if(yych <= ']') goto yy78;
		goto yy72;
	}
yy74:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy66;
	goto yy70;
yy75:
	++YYCURSOR;
	goto yy76;
yy76:
#line 184 "scanner.re"
	{ cur = cursor;
				  yylval.regexp = ranToRE(token());
				  return RANGE; }
#line 590 "scanner.cc"
yy77:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy66;
	goto yy72;
yy78:
	++YYCURSOR;
	goto yy79;
yy79:
#line 180 "scanner.re"
	{ cur = cursor;
				  yylval.regexp = invToRE(token());
				  return RANGE; }
#line 605 "scanner.cc"
yy80:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy81;
yy81:
	if(yych <= '&') {
		if(yych == 0x0A) goto yy66;
		goto yy80;
	} else {
		if(yych <= '\'') goto yy83;
		if(yych != '\\') goto yy80;
		goto yy82;
	}
yy82:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy66;
	goto yy80;
yy83:
	++YYCURSOR;
	goto yy84;
yy84:
#line 173 "scanner.re"
	{ cur = cursor;
				  yylval.regexp = strToCaseInsensitiveRE(token());
				  return STRING; }
#line 634 "scanner.cc"
yy85:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy86;
yy86:
	if(yych <= '!') {
		if(yych == 0x0A) goto yy66;
		goto yy85;
	} else {
		if(yych <= '"') goto yy88;
		if(yych != '\\') goto yy85;
		goto yy87;
	}
yy87:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy66;
	goto yy85;
yy88:
	++YYCURSOR;
	goto yy89;
yy89:
#line 169 "scanner.re"
	{ cur = cursor;
				  yylval.regexp = strToRE(token());
				  return STRING; }
#line 663 "scanner.cc"
yy90:
	++YYCURSOR;
	goto yy91;
yy91:
#line 166 "scanner.re"
	{ tok = cursor;
				  RETURN(0); }
#line 671 "scanner.cc"
yy92:
	++YYCURSOR;
	goto yy93;
yy93:
#line 163 "scanner.re"
	{ depth = 1;
				  goto comment; }
#line 679 "scanner.cc"
yy94:
	yych = *++YYCURSOR;
	if(yych == ',') goto yy108;
	goto yy96;
yy95:
	++YYCURSOR;
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	goto yy96;
yy96:
	if(yych <= '/') {
		if(yych == ',') goto yy101;
		goto yy66;
	} else {
		if(yych <= '9') goto yy95;
		if(yych == '}') goto yy99;
		goto yy66;
	}
yy97:
	++YYCURSOR;
	goto yy98;
yy98:
#line 210 "scanner.re"
	{ fatal("illegal closure form, use '{n}', '{n,}', '{n,m}' where n and m are numbers"); }
#line 704 "scanner.cc"
yy99:
	++YYCURSOR;
	goto yy100;
yy100:
#line 198 "scanner.re"
	{ yylval.extop.minsize = atoi((char *)tok+1);
				  yylval.extop.maxsize = atoi((char *)tok+1);
				  RETURN(CLOSESIZE); }
#line 713 "scanner.cc"
yy101:
	yyaccept = 5;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= '/') goto yy98;
	if(yych <= '9') goto yy104;
	if(yych != '}') goto yy98;
	goto yy102;
yy102:
	++YYCURSOR;
	goto yy103;
yy103:
#line 206 "scanner.re"
	{ yylval.extop.minsize = atoi((char *)tok+1);
				  yylval.extop.maxsize = -1;
				  RETURN(CLOSESIZE); }
#line 729 "scanner.cc"
yy104:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy105;
yy105:
	if(yych <= '/') goto yy66;
	if(yych <= '9') goto yy104;
	if(yych != '}') goto yy66;
	goto yy106;
yy106:
	++YYCURSOR;
	goto yy107;
yy107:
#line 202 "scanner.re"
	{ yylval.extop.minsize = atoi((char *)tok+1);
				  yylval.extop.maxsize = MAX(yylval.extop.minsize,atoi(strchr((char *)tok, ',')+1));
				  RETURN(CLOSESIZE); }
#line 748 "scanner.cc"
yy108:
	yyaccept = 5;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= '/') goto yy98;
	if(yych <= '9') goto yy104;
	if(yych != '}') goto yy98;
	goto yy109;
yy109:
	++YYCURSOR;
	goto yy110;
yy110:
#line 195 "scanner.re"
	{ yylval.op = '*';
				  RETURN(CLOSE); }
#line 763 "scanner.cc"
}
#line 247 "scanner.re"


code:

#line 770 "scanner.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	goto yy111;
	++YYCURSOR;
yy111:
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '&') {
		if(yych <= 0x0A) {
			if(yych <= 0x09) goto yy119;
			goto yy117;
		} else {
			if(yych == '"') goto yy121;
			goto yy119;
		}
	} else {
		if(yych <= '{') {
			if(yych <= '\'') goto yy122;
			if(yych <= 'z') goto yy119;
			goto yy115;
		} else {
			if(yych != '}') goto yy119;
			goto yy113;
		}
	}
yy113:
	++YYCURSOR;
	goto yy114;
yy114:
#line 251 "scanner.re"
	{ if(--depth == 0){
					cur = cursor;
					yylval.token = new Token(token(), tline);
					return CODE;
				  }
				  goto code; }
#line 808 "scanner.cc"
yy115:
	++YYCURSOR;
	goto yy116;
yy116:
#line 257 "scanner.re"
	{ ++depth;
				  goto code; }
#line 816 "scanner.cc"
yy117:
	++YYCURSOR;
	goto yy118;
yy118:
#line 259 "scanner.re"
	{ if(cursor == eof) fatal("missing '}'");
				  pos = cursor; cline++;
				  goto code;
				}
#line 826 "scanner.cc"
yy119:
	++YYCURSOR;
	goto yy120;
yy120:
#line 263 "scanner.re"
	{ goto code; }
#line 833 "scanner.cc"
yy121:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 0x0A) goto yy120;
	goto yy128;
yy122:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych == 0x0A) goto yy120;
	goto yy124;
yy123:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy124;
yy124:
	if(yych <= '&') {
		if(yych != 0x0A) goto yy123;
		goto yy125;
	} else {
		if(yych <= '\'') goto yy119;
		if(yych == '\\') goto yy126;
		goto yy123;
	}
yy125:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy120;
	}
yy126:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy125;
	goto yy123;
yy127:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy128;
yy128:
	if(yych <= '!') {
		if(yych == 0x0A) goto yy125;
		goto yy127;
	} else {
		if(yych <= '"') goto yy119;
		if(yych != '\\') goto yy127;
		goto yy129;
	}
yy129:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy125;
	goto yy127;
}
#line 264 "scanner.re"


comment:

#line 895 "scanner.cc"
{
	YYCTYPE yych;
	goto yy130;
	++YYCURSOR;
yy130:
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= ')') {
		if(yych == 0x0A) goto yy135;
		goto yy137;
	} else {
		if(yych <= '*') goto yy132;
		if(yych == '/') goto yy134;
		goto yy137;
	}
yy132:
	++YYCURSOR;
	if((yych = *YYCURSOR) == '/') goto yy140;
	goto yy133;
yy133:
#line 279 "scanner.re"
	{ goto comment; }
#line 918 "scanner.cc"
yy134:
	yych = *++YYCURSOR;
	if(yych == '*') goto yy138;
	goto yy133;
yy135:
	++YYCURSOR;
	goto yy136;
yy136:
#line 275 "scanner.re"
	{ if(cursor == eof) RETURN(0);
				  tok = pos = cursor; cline++;
				  goto comment;
				}
#line 932 "scanner.cc"
yy137:
	yych = *++YYCURSOR;
	goto yy133;
yy138:
	++YYCURSOR;
	goto yy139;
yy139:
#line 272 "scanner.re"
	{ ++depth;
				  fatal("ambiguous /* found");
				  goto comment; }
#line 944 "scanner.cc"
yy140:
	++YYCURSOR;
	goto yy141;
yy141:
#line 268 "scanner.re"
	{ if(--depth == 0)
					goto scan;
				    else
					goto comment; }
#line 954 "scanner.cc"
}
#line 280 "scanner.re"


config:

#line 961 "scanner.cc"
{
	YYCTYPE yych;
	goto yy142;
	++YYCURSOR;
yy142:
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= 0x1F) {
		if(yych != 0x09) goto yy148;
		goto yy144;
	} else {
		if(yych <= ' ') goto yy144;
		if(yych == '=') goto yy146;
		goto yy148;
	}
yy144:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy153;
yy145:
#line 284 "scanner.re"
	{ goto config; }
#line 984 "scanner.cc"
yy146:
	++YYCURSOR;
	yych = *YYCURSOR;
	goto yy151;
yy147:
#line 285 "scanner.re"
	{ iscfg = 2;
				  cur = cursor;
				  RETURN('='); 
				}
#line 995 "scanner.cc"
yy148:
	++YYCURSOR;
	goto yy149;
yy149:
#line 289 "scanner.re"
	{ fatal("missing '='"); }
#line 1002 "scanner.cc"
yy150:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy151;
yy151:
	if(yych == 0x09) goto yy150;
	if(yych == ' ') goto yy150;
	goto yy147;
yy152:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy153;
yy153:
	if(yych == 0x09) goto yy152;
	if(yych == ' ') goto yy152;
	goto yy145;
}
#line 290 "scanner.re"


value:

#line 1027 "scanner.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	goto yy154;
	++YYCURSOR;
yy154:
	if((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = *YYCURSOR;
	if(yych <= '&') {
		if(yych <= 0x0D) {
			if(yych <= 0x08) goto yy162;
			if(yych <= 0x0A) goto yy156;
			if(yych <= 0x0C) goto yy162;
			goto yy156;
		} else {
			if(yych <= ' ') {
				if(yych <= 0x1F) goto yy162;
				goto yy156;
			} else {
				if(yych == '"') goto yy164;
				goto yy162;
			}
		}
	} else {
		if(yych <= '/') {
			if(yych <= '\'') goto yy166;
			if(yych == '-') goto yy159;
			goto yy162;
		} else {
			if(yych <= '9') {
				if(yych <= '0') goto yy157;
				goto yy160;
			} else {
				if(yych != ';') goto yy162;
				goto yy156;
			}
		}
	}
yy156:
#line 299 "scanner.re"
	{ cur = cursor;
				  yylval.str = new Str(token());
				  iscfg = 0;
				  return VALUE;
				}
#line 1073 "scanner.cc"
yy157:
	++YYCURSOR;
	if((yych = *YYCURSOR) <= 0x0D) {
		if(yych <= 0x08) goto yy162;
		if(yych <= 0x0A) goto yy158;
		if(yych <= 0x0C) goto yy162;
		goto yy158;
	} else {
		if(yych <= ' ') {
			if(yych <= 0x1F) goto yy162;
			goto yy158;
		} else {
			if(yych != ';') goto yy162;
			goto yy158;
		}
	}
yy158:
#line 294 "scanner.re"
	{ cur = cursor;
				  yylval.number = atoi(token().to_string().c_str());
				  iscfg = 0;
				  return NUMBER;
				}
#line 1097 "scanner.cc"
yy159:
	yych = *++YYCURSOR;
	if(yych <= '0') goto yy163;
	if(yych >= ':') goto yy163;
	goto yy160;
yy160:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy161;
yy161:
	if(yych <= 0x1F) {
		if(yych <= 0x0A) {
			if(yych >= 0x09) goto yy158;
			goto yy162;
		} else {
			if(yych == 0x0D) goto yy158;
			goto yy162;
		}
	} else {
		if(yych <= '9') {
			if(yych <= ' ') goto yy158;
			if(yych >= '0') goto yy160;
			goto yy162;
		} else {
			if(yych == ';') goto yy158;
			goto yy162;
		}
	}
yy162:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy163;
yy163:
	if(yych <= 0x0D) {
		if(yych <= 0x08) goto yy162;
		if(yych <= 0x0A) goto yy156;
		if(yych <= 0x0C) goto yy162;
		goto yy156;
	} else {
		if(yych <= ' ') {
			if(yych <= 0x1F) goto yy162;
			goto yy156;
		} else {
			if(yych == ';') goto yy156;
			goto yy162;
		}
	}
yy164:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy165;
yy165:
	if(yych <= ' ') {
		if(yych <= 0x0A) {
			if(yych <= 0x08) goto yy164;
			if(yych <= 0x09) goto yy174;
			goto yy156;
		} else {
			if(yych == 0x0D) goto yy174;
			if(yych <= 0x1F) goto yy164;
			goto yy174;
		}
	} else {
		if(yych <= ':') {
			if(yych == '"') goto yy162;
			goto yy164;
		} else {
			if(yych <= ';') goto yy174;
			if(yych == '\\') goto yy176;
			goto yy164;
		}
	}
yy166:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy167;
yy167:
	if(yych <= ' ') {
		if(yych <= 0x0A) {
			if(yych <= 0x08) goto yy166;
			if(yych >= 0x0A) goto yy156;
			goto yy168;
		} else {
			if(yych == 0x0D) goto yy168;
			if(yych <= 0x1F) goto yy166;
			goto yy168;
		}
	} else {
		if(yych <= ':') {
			if(yych == '\'') goto yy162;
			goto yy166;
		} else {
			if(yych <= ';') goto yy168;
			if(yych == '\\') goto yy171;
			goto yy166;
		}
	}
yy168:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy169;
yy169:
	if(yych <= '&') {
		if(yych != 0x0A) goto yy168;
		goto yy170;
	} else {
		if(yych <= '\'') goto yy172;
		if(yych == '\\') goto yy173;
		goto yy168;
	}
yy170:
	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy156;
	}
yy171:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x0D) {
		if(yych <= 0x09) {
			if(yych <= 0x08) goto yy166;
			goto yy168;
		} else {
			if(yych <= 0x0A) goto yy156;
			if(yych <= 0x0C) goto yy166;
			goto yy168;
		}
	} else {
		if(yych <= ' ') {
			if(yych <= 0x1F) goto yy166;
			goto yy168;
		} else {
			if(yych == ';') goto yy168;
			goto yy166;
		}
	}
yy172:
	yych = *++YYCURSOR;
	goto yy156;
yy173:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy170;
	goto yy168;
yy174:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy175;
yy175:
	if(yych <= '!') {
		if(yych == 0x0A) goto yy170;
		goto yy174;
	} else {
		if(yych <= '"') goto yy172;
		if(yych == '\\') goto yy177;
		goto yy174;
	}
yy176:
	yyaccept = 0;
	YYMARKER = ++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych <= 0x0D) {
		if(yych <= 0x09) {
			if(yych <= 0x08) goto yy164;
			goto yy174;
		} else {
			if(yych <= 0x0A) goto yy156;
			if(yych <= 0x0C) goto yy164;
			goto yy174;
		}
	} else {
		if(yych <= ' ') {
			if(yych <= 0x1F) goto yy164;
			goto yy174;
		} else {
			if(yych == ';') goto yy174;
			goto yy164;
		}
	}
yy177:
	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	if(yych == 0x0A) goto yy170;
	goto yy174;
}
#line 304 "scanner.re"

}

void Scanner::fatal(const char *msg) const
{
    std::cerr << "line " << tline << ", column " << (tchar + 1) << ": "
		<< msg << std::endl;
    exit(1);
}

void Scanner::config(const Str* cfg, int num)
{
	if (cfg->to_string() == "indent")
	{
		if (num < 0)
		{
			fatal("configuration 'indent' must be a positive integer");
		}
		topIndent = num;
		return;
	}
	fatal("unrecognized configuration name or illegal integer value");
}

void Scanner::config(const Str*, const Str*)
{
	fatal("unrecognized configuration name or illegal string value");
}

} // end namespace re2c
