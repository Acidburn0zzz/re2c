A simple example
~~~~~~~~~~~~~~~~

.. code-block:: cpp
    :linenos:

    /*!re2c
        ""          { return ""; }
        *           { return "*"; }
        "a" | "b"   { return "a | b"; }
        "a"         { return "a"; }
        [\x00-\xFF] { return "[0 - 0xFF]"; }
        [^]         { return "[^]"; }
    */

Given this strange code, ```re2c -i -Wunreachable-rules``` says:

.. code-block:: none

    re2c: warning: line 2: unreachable rule (shadowed by rules at lines 4, 6) [-Wunreachable-rules]
    re2c: warning: line 5: unreachable rule (shadowed by rule at line 4) [-Wunreachable-rules]
    re2c: warning: line 7: unreachable rule (shadowed by rule at line 6) [-Wunreachable-rules]

A look at the generated code suggests that re2c was right:

.. code-block:: cpp
    :linenos:

    /* Generated by re2c 0.14.1.dev on Fri Nov  6 15:21:36 2015*/
    
    {
            YYCTYPE yych;
            if (YYLIMIT <= YYCURSOR) YYFILL(1);
            yych = *YYCURSOR;
            switch (yych) {
            case 'a':       goto yy5;
            case 'b':       goto yy7;
            default:        goto yy3;
            }
            { return ""; }
    yy3:
            ++YYCURSOR;
            { return "[0 - 0xFF]"; }
    yy5:
            ++YYCURSOR;
    yy6:
            { return "a | b"; }
    yy7:
            ++YYCURSOR;
            yych = *YYCURSOR;
            goto yy6;
    }

Clearly, all the reported rules are unreachable (some of them are not even present in the generated code).
Default rule ``*`` at line 3 is also unreachable, but re2c appreciates paranoid attempts
to handle default case and never reports unreachable default rule.

