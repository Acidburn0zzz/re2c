#include <stdio.h>
#define YYCTYPE unsigned short
bool scan(const YYCTYPE * start, const YYCTYPE * const limit)
{
	__attribute__((unused)) const YYCTYPE * YYMARKER; // silence compiler warnings when YYMARKER is not used
#	define YYCURSOR start
No:
	/*!re2c
		re2c:yyfill:enable = 0;
		No = [\xb2-\xb3\xb9-\xb9\xbc-\xbe\u09f4-\u09f9\u0b72-\u0b77\u0bf0-\u0bf2\u0c78-\u0c7e\u0d70-\u0d75\u0f2a-\u0f33\u1369-\u137c\u17f0-\u17f9\u19da-\u19da\u2070-\u2070\u2074-\u2079\u2080-\u2089\u2150-\u215f\u2189-\u2189\u2460-\u249b\u24ea-\u24ff\u2776-\u2793\u2cfd-\u2cfd\u3192-\u3195\u3220-\u3229\u3251-\u325f\u3280-\u3289\u32b1-\u32bf\ua830-\ua835\U00010107-\U00010133\U00010175-\U00010178\U0001018a-\U0001018a\U00010320-\U00010323\U00010858-\U0001085f\U00010916-\U0001091b\U00010a40-\U00010a47\U00010a7d-\U00010a7e\U00010b58-\U00010b5f\U00010b78-\U00010b7f\U00010e60-\U00010e7e\U00011052-\U00011065\U0001d360-\U0001d371\U0001f100-\U0001f10a];
		No { goto No; }
		[^] { return YYCURSOR == limit; }
	*/
}
static const char buffer_No [] = "\xB2\x00\xB3\x00\xB9\x00\xBC\x00\xBD\x00\xBE\x00\xF4\x09\xF5\x09\xF6\x09\xF7\x09\xF8\x09\xF9\x09\x72\x0B\x73\x0B\x74\x0B\x75\x0B\x76\x0B\x77\x0B\xF0\x0B\xF1\x0B\xF2\x0B\x78\x0C\x79\x0C\x7A\x0C\x7B\x0C\x7C\x0C\x7D\x0C\x7E\x0C\x70\x0D\x71\x0D\x72\x0D\x73\x0D\x74\x0D\x75\x0D\x2A\x0F\x2B\x0F\x2C\x0F\x2D\x0F\x2E\x0F\x2F\x0F\x30\x0F\x31\x0F\x32\x0F\x33\x0F\x69\x13\x6A\x13\x6B\x13\x6C\x13\x6D\x13\x6E\x13\x6F\x13\x70\x13\x71\x13\x72\x13\x73\x13\x74\x13\x75\x13\x76\x13\x77\x13\x78\x13\x79\x13\x7A\x13\x7B\x13\x7C\x13\xF0\x17\xF1\x17\xF2\x17\xF3\x17\xF4\x17\xF5\x17\xF6\x17\xF7\x17\xF8\x17\xF9\x17\xDA\x19\x70\x20\x74\x20\x75\x20\x76\x20\x77\x20\x78\x20\x79\x20\x80\x20\x81\x20\x82\x20\x83\x20\x84\x20\x85\x20\x86\x20\x87\x20\x88\x20\x89\x20\x50\x21\x51\x21\x52\x21\x53\x21\x54\x21\x55\x21\x56\x21\x57\x21\x58\x21\x59\x21\x5A\x21\x5B\x21\x5C\x21\x5D\x21\x5E\x21\x5F\x21\x89\x21\x60\x24\x61\x24\x62\x24\x63\x24\x64\x24\x65\x24\x66\x24\x67\x24\x68\x24\x69\x24\x6A\x24\x6B\x24\x6C\x24\x6D\x24\x6E\x24\x6F\x24\x70\x24\x71\x24\x72\x24\x73\x24\x74\x24\x75\x24\x76\x24\x77\x24\x78\x24\x79\x24\x7A\x24\x7B\x24\x7C\x24\x7D\x24\x7E\x24\x7F\x24\x80\x24\x81\x24\x82\x24\x83\x24\x84\x24\x85\x24\x86\x24\x87\x24\x88\x24\x89\x24\x8A\x24\x8B\x24\x8C\x24\x8D\x24\x8E\x24\x8F\x24\x90\x24\x91\x24\x92\x24\x93\x24\x94\x24\x95\x24\x96\x24\x97\x24\x98\x24\x99\x24\x9A\x24\x9B\x24\xEA\x24\xEB\x24\xEC\x24\xED\x24\xEE\x24\xEF\x24\xF0\x24\xF1\x24\xF2\x24\xF3\x24\xF4\x24\xF5\x24\xF6\x24\xF7\x24\xF8\x24\xF9\x24\xFA\x24\xFB\x24\xFC\x24\xFD\x24\xFE\x24\xFF\x24\x76\x27\x77\x27\x78\x27\x79\x27\x7A\x27\x7B\x27\x7C\x27\x7D\x27\x7E\x27\x7F\x27\x80\x27\x81\x27\x82\x27\x83\x27\x84\x27\x85\x27\x86\x27\x87\x27\x88\x27\x89\x27\x8A\x27\x8B\x27\x8C\x27\x8D\x27\x8E\x27\x8F\x27\x90\x27\x91\x27\x92\x27\x93\x27\xFD\x2C\x92\x31\x93\x31\x94\x31\x95\x31\x20\x32\x21\x32\x22\x32\x23\x32\x24\x32\x25\x32\x26\x32\x27\x32\x28\x32\x29\x32\x51\x32\x52\x32\x53\x32\x54\x32\x55\x32\x56\x32\x57\x32\x58\x32\x59\x32\x5A\x32\x5B\x32\x5C\x32\x5D\x32\x5E\x32\x5F\x32\x80\x32\x81\x32\x82\x32\x83\x32\x84\x32\x85\x32\x86\x32\x87\x32\x88\x32\x89\x32\xB1\x32\xB2\x32\xB3\x32\xB4\x32\xB5\x32\xB6\x32\xB7\x32\xB8\x32\xB9\x32\xBA\x32\xBB\x32\xBC\x32\xBD\x32\xBE\x32\xBF\x32\x30\xA8\x31\xA8\x32\xA8\x33\xA8\x34\xA8\x35\xA8\x00\xD8\x07\xDD\x00\xD8\x08\xDD\x00\xD8\x09\xDD\x00\xD8\x0A\xDD\x00\xD8\x0B\xDD\x00\xD8\x0C\xDD\x00\xD8\x0D\xDD\x00\xD8\x0E\xDD\x00\xD8\x0F\xDD\x00\xD8\x10\xDD\x00\xD8\x11\xDD\x00\xD8\x12\xDD\x00\xD8\x13\xDD\x00\xD8\x14\xDD\x00\xD8\x15\xDD\x00\xD8\x16\xDD\x00\xD8\x17\xDD\x00\xD8\x18\xDD\x00\xD8\x19\xDD\x00\xD8\x1A\xDD\x00\xD8\x1B\xDD\x00\xD8\x1C\xDD\x00\xD8\x1D\xDD\x00\xD8\x1E\xDD\x00\xD8\x1F\xDD\x00\xD8\x20\xDD\x00\xD8\x21\xDD\x00\xD8\x22\xDD\x00\xD8\x23\xDD\x00\xD8\x24\xDD\x00\xD8\x25\xDD\x00\xD8\x26\xDD\x00\xD8\x27\xDD\x00\xD8\x28\xDD\x00\xD8\x29\xDD\x00\xD8\x2A\xDD\x00\xD8\x2B\xDD\x00\xD8\x2C\xDD\x00\xD8\x2D\xDD\x00\xD8\x2E\xDD\x00\xD8\x2F\xDD\x00\xD8\x30\xDD\x00\xD8\x31\xDD\x00\xD8\x32\xDD\x00\xD8\x33\xDD\x00\xD8\x75\xDD\x00\xD8\x76\xDD\x00\xD8\x77\xDD\x00\xD8\x78\xDD\x00\xD8\x8A\xDD\x00\xD8\x20\xDF\x00\xD8\x21\xDF\x00\xD8\x22\xDF\x00\xD8\x23\xDF\x02\xD8\x58\xDC\x02\xD8\x59\xDC\x02\xD8\x5A\xDC\x02\xD8\x5B\xDC\x02\xD8\x5C\xDC\x02\xD8\x5D\xDC\x02\xD8\x5E\xDC\x02\xD8\x5F\xDC\x02\xD8\x16\xDD\x02\xD8\x17\xDD\x02\xD8\x18\xDD\x02\xD8\x19\xDD\x02\xD8\x1A\xDD\x02\xD8\x1B\xDD\x02\xD8\x40\xDE\x02\xD8\x41\xDE\x02\xD8\x42\xDE\x02\xD8\x43\xDE\x02\xD8\x44\xDE\x02\xD8\x45\xDE\x02\xD8\x46\xDE\x02\xD8\x47\xDE\x02\xD8\x7D\xDE\x02\xD8\x7E\xDE\x02\xD8\x58\xDF\x02\xD8\x59\xDF\x02\xD8\x5A\xDF\x02\xD8\x5B\xDF\x02\xD8\x5C\xDF\x02\xD8\x5D\xDF\x02\xD8\x5E\xDF\x02\xD8\x5F\xDF\x02\xD8\x78\xDF\x02\xD8\x79\xDF\x02\xD8\x7A\xDF\x02\xD8\x7B\xDF\x02\xD8\x7C\xDF\x02\xD8\x7D\xDF\x02\xD8\x7E\xDF\x02\xD8\x7F\xDF\x03\xD8\x60\xDE\x03\xD8\x61\xDE\x03\xD8\x62\xDE\x03\xD8\x63\xDE\x03\xD8\x64\xDE\x03\xD8\x65\xDE\x03\xD8\x66\xDE\x03\xD8\x67\xDE\x03\xD8\x68\xDE\x03\xD8\x69\xDE\x03\xD8\x6A\xDE\x03\xD8\x6B\xDE\x03\xD8\x6C\xDE\x03\xD8\x6D\xDE\x03\xD8\x6E\xDE\x03\xD8\x6F\xDE\x03\xD8\x70\xDE\x03\xD8\x71\xDE\x03\xD8\x72\xDE\x03\xD8\x73\xDE\x03\xD8\x74\xDE\x03\xD8\x75\xDE\x03\xD8\x76\xDE\x03\xD8\x77\xDE\x03\xD8\x78\xDE\x03\xD8\x79\xDE\x03\xD8\x7A\xDE\x03\xD8\x7B\xDE\x03\xD8\x7C\xDE\x03\xD8\x7D\xDE\x03\xD8\x7E\xDE\x04\xD8\x52\xDC\x04\xD8\x53\xDC\x04\xD8\x54\xDC\x04\xD8\x55\xDC\x04\xD8\x56\xDC\x04\xD8\x57\xDC\x04\xD8\x58\xDC\x04\xD8\x59\xDC\x04\xD8\x5A\xDC\x04\xD8\x5B\xDC\x04\xD8\x5C\xDC\x04\xD8\x5D\xDC\x04\xD8\x5E\xDC\x04\xD8\x5F\xDC\x04\xD8\x60\xDC\x04\xD8\x61\xDC\x04\xD8\x62\xDC\x04\xD8\x63\xDC\x04\xD8\x64\xDC\x04\xD8\x65\xDC\x34\xD8\x60\xDF\x34\xD8\x61\xDF\x34\xD8\x62\xDF\x34\xD8\x63\xDF\x34\xD8\x64\xDF\x34\xD8\x65\xDF\x34\xD8\x66\xDF\x34\xD8\x67\xDF\x34\xD8\x68\xDF\x34\xD8\x69\xDF\x34\xD8\x6A\xDF\x34\xD8\x6B\xDF\x34\xD8\x6C\xDF\x34\xD8\x6D\xDF\x34\xD8\x6E\xDF\x34\xD8\x6F\xDF\x34\xD8\x70\xDF\x34\xD8\x71\xDF\x3C\xD8\x00\xDD\x3C\xD8\x01\xDD\x3C\xD8\x02\xDD\x3C\xD8\x03\xDD\x3C\xD8\x04\xDD\x3C\xD8\x05\xDD\x3C\xD8\x06\xDD\x3C\xD8\x07\xDD\x3C\xD8\x08\xDD\x3C\xD8\x09\xDD\x3C\xD8\x0A\xDD\x00\x00";
int main ()
{
	if (!scan (reinterpret_cast<const YYCTYPE *> (buffer_No), reinterpret_cast<const YYCTYPE *> (buffer_No + sizeof (buffer_No) - 1)))
		printf("test 'No' failed\n");
}
