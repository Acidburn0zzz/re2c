/* Generated by re2c 0.14.3 on Sat Aug 22 15:45:34 2015 */
#line 1 "../src/parse/scanner_lex.re"
#include <stdlib.h>
#include <string.h>
#include <iostream>
#include <sstream>

#include "src/ir/dfa/dfa.h"
#include "src/globals.h"
#include "src/parse/extop.h"
#include "src/parse/parser.h"
#include "src/parse/scanner.h"
#include "src/parse/unescape.h"
#include "y.tab.h"
#include "src/util/s_to_n32_unsafe.h"

extern YYSTYPE yylval;

#define	YYCTYPE		unsigned char
#define	YYCURSOR	cur
#define	YYLIMIT		lim
#define	YYMARKER	ptr
#define	YYCTXMARKER ctx
#define	YYFILL(n)	{ fill (n); }

namespace re2c
{

// source code is in ASCII: pointers have type 'char *'
// but re2c makes an implicit assumption that YYCTYPE is unsigned
// when it generates comparisons
#line 32 "../src/parse/scanner_lex.re"


#line 53 "../src/parse/scanner_lex.re"


Scanner::ParseMode Scanner::echo()
{
	bool ignore_eoc = false;
	int  ignore_cnt = 0;

	if (eof && cur == eof) // Catch EOF
	{
		return Stop;
	}

	tok = cur;
echo:

#line 52 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};

	if ((YYLIMIT - YYCURSOR) < 16) YYFILL(16);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '%') {
		if (yych <= '\t') {
			if (yych >= 0x01) goto yy4;
		} else {
			if (yych <= '\n') goto yy6;
			if (yych <= '$') goto yy4;
			goto yy8;
		}
	} else {
		if (yych <= '*') {
			if (yych <= ')') goto yy4;
			goto yy9;
		} else {
			if (yych == '/') goto yy10;
			goto yy4;
		}
	}
	++YYCURSOR;
#line 196 "../src/parse/scanner_lex.re"
	{
					if (!(ignore_eoc || DFlag || flag_skeleton))
					{
						out.write(tok, tok_len () - 1);
						// -1 so we don't write out the \0
					}
					if(cur == eof)
					{
						return Stop;
					}
				}
#line 123 "src/parse/scanner_lex.cc"
yy4:
	++YYCURSOR;
yy5:
#line 207 "../src/parse/scanner_lex.re"
	{
					goto echo;
				}
#line 131 "src/parse/scanner_lex.cc"
yy6:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych == '#') goto yy91;
yy7:
#line 183 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						ignore_cnt++;
					}
					else if (!(DFlag || flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					cline++;
					goto echo;
				}
#line 154 "src/parse/scanner_lex.cc"
yy8:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '{') goto yy32;
	goto yy5;
yy9:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy84;
	goto yy5;
yy10:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != '*') goto yy5;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '!') goto yy13;
yy12:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy7;
		} else {
			goto yy5;
		}
	} else {
		goto yy85;
	}
yy13:
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy16;
	case 'i':	goto yy15;
	case 'm':	goto yy17;
	case 'r':	goto yy19;
	case 't':	goto yy14;
	case 'u':	goto yy18;
	default:	goto yy12;
	}
yy14:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'y') goto yy74;
	goto yy12;
yy15:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'g') goto yy63;
	goto yy12;
yy16:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy50;
	goto yy12;
yy17:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy42;
	goto yy12;
yy18:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy34;
	goto yy12;
yy19:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy20;
	if (yych == 'u') goto yy21;
	goto yy12;
yy20:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '2') goto yy31;
	goto yy12;
yy21:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 84 "../src/parse/scanner_lex.re"
	{
					if (rFlag)
					{
						mapCodeName.clear();
					}
					else
					{
						fatal("found 'rules:re2c' block without -r flag");
					}
					tok = cur;
					return Rules;
				}
#line 251 "src/parse/scanner_lex.cc"
yy31:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
yy32:
	++YYCURSOR;
#line 69 "../src/parse/scanner_lex.re"
	{
					if (rFlag)
					{
						fatal("found standard 're2c' block while using -r flag");
					}
					if (!(DFlag || flag_skeleton))
					{
						const size_t lexeme_len = cur[-1] == '{'
							? sizeof ("%{") - 1
							: sizeof ("/*!re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Parse;
				}
#line 273 "src/parse/scanner_lex.cc"
yy34:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 96 "../src/parse/scanner_lex.re"
	{
					if (!rFlag)
					{
						fatal("found 'use:re2c' block without -r flag");
					}
					reuse();
					if (!(DFlag || flag_skeleton))
					{
						const size_t lexeme_len = sizeof ("/*!use:re2c") - 1;
						out.write(tok, tok_len () - lexeme_len);
					}
					tok = cur;
					return Reuse;
				}
#line 303 "src/parse/scanner_lex.cc"
yy42:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 110 "../src/parse/scanner_lex.re"
	{
					if (!DFlag)
					{
						out.insert_yymaxfill ();
					}
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 328 "src/parse/scanner_lex.cc"
yy50:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 119 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					out.insert_state_goto (topIndent);
					ignore_eoc = true;
					goto echo;
				}
#line 360 "src/parse/scanner_lex.cc"
yy63:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 125 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					goto echo;
				}
#line 387 "src/parse/scanner_lex.cc"
yy74:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy12;
	++YYCURSOR;
#line 130 "../src/parse/scanner_lex.re"
	{
					tok = pos = cur;
					ignore_eoc = true;
					if (!DFlag)
					{
						out.insert_line_info ();
						out << "\n";
						out.insert_types ();
						out << "\n";
						out.write_line_info (cline, get_fname ().c_str ());
					}
					goto echo;
				}
#line 420 "src/parse/scanner_lex.cc"
yy84:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy87;
	if (yych == '\r') goto yy86;
yy85:
#line 161 "../src/parse/scanner_lex.re"
	{
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out << "\n";
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (!(DFlag || flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 446 "src/parse/scanner_lex.cc"
yy86:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy12;
yy87:
	++YYCURSOR;
#line 143 "../src/parse/scanner_lex.re"
	{
					cline++;
					if (ignore_eoc)
					{
						if (ignore_cnt)
						{
							out.write_line_info (cline, get_fname ().c_str ());
						}
						ignore_eoc = false;
						ignore_cnt = 0;
					}
					else if (!(DFlag || flag_skeleton))
					{
						out.write(tok, tok_len ());
					}
					tok = pos = cur;
					goto echo;
				}
#line 471 "src/parse/scanner_lex.cc"
yy89:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy89;
	}
	if (yych != '#') goto yy12;
yy91:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy91;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy91;
		if (yych != 'l') goto yy12;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy12;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy98;
	if (yych <= '9') goto yy12;
	goto yy98;
yy97:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy98:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy97;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy97;
		if (yych <= '0') goto yy12;
		if (yych >= ':') goto yy12;
	}
yy99:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy99;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy12;
		if (yych <= '\t') goto yy101;
		if (yych <= '\n') goto yy103;
		goto yy12;
	} else {
		if (yych <= '\r') goto yy105;
		if (yych != ' ') goto yy12;
	}
yy101:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy101;
		goto yy12;
	} else {
		if (yych <= ' ') goto yy101;
		if (yych == '"') goto yy106;
		goto yy12;
	}
yy103:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 179 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto echo;
				}
#line 551 "src/parse/scanner_lex.cc"
yy105:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy103;
	goto yy12;
yy106:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy106;
	}
	if (yych <= '\n') goto yy12;
	if (yych <= '"') goto yy109;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy12;
	goto yy106;
yy109:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy103;
	if (yych == '\r') goto yy105;
	goto yy12;
}
#line 210 "../src/parse/scanner_lex.re"

}

int Scanner::scan()
{
	uint32_t depth;

	char quote;
	bool negated_class = false;
	std::vector<uint32_t> cpoints;
scan:
	tchar = cur - pos;
	tline = cline;
	tok = cur;
	switch (lexer_state)
	{
		case LEX_NORMAL:    goto start;
		case LEX_CONF:      goto conf_eq;
		case LEX_FLEX_NAME: goto flex_name;
	}

start:

#line 600 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 192,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176, 128, 128, 128, 128, 128, 128, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128,   0, 128, 128, 160, 
		128, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160, 160, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\f') {
				if (yych <= 0x08) goto yy112;
				if (yych <= '\t') goto yy114;
				if (yych <= '\n') goto yy116;
			} else {
				if (yych <= 0x1F) {
					if (yych <= '\r') goto yy118;
				} else {
					if (yych <= ' ') goto yy114;
					if (yych >= '"') goto yy119;
				}
			}
		} else {
			if (yych <= ')') {
				if (yych <= '%') {
					if (yych >= '%') goto yy121;
				} else {
					if (yych <= '&') goto yy112;
					if (yych <= '\'') goto yy119;
					goto yy122;
				}
			} else {
				if (yych <= '+') {
					if (yych <= '*') goto yy124;
					goto yy126;
				} else {
					if (yych <= ',') goto yy122;
					if (yych >= '.') goto yy128;
				}
			}
		}
	} else {
		if (yych <= '[') {
			if (yych <= '<') {
				if (yych <= '9') {
					if (yych <= '/') goto yy130;
					goto yy131;
				} else {
					if (yych <= ':') goto yy132;
					if (yych <= ';') goto yy122;
					goto yy133;
				}
			} else {
				if (yych <= '?') {
					if (yych <= '>') goto yy122;
					goto yy126;
				} else {
					if (yych <= '@') goto yy112;
					if (yych <= 'Z') goto yy131;
					goto yy134;
				}
			}
		} else {
			if (yych <= 'q') {
				if (yych <= '^') {
					if (yych <= '\\') goto yy122;
				} else {
					if (yych != '`') goto yy131;
				}
			} else {
				if (yych <= 'z') {
					if (yych <= 'r') goto yy136;
					goto yy131;
				} else {
					if (yych <= '{') goto yy137;
					if (yych <= '|') goto yy122;
				}
			}
		}
	}
yy112:
	++YYCURSOR;
yy113:
#line 383 "../src/parse/scanner_lex.re"
	{
					fatalf("unexpected character: '%c'", *tok);
					goto scan;
				}
#line 720 "src/parse/scanner_lex.cc"
yy114:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy218;
yy115:
#line 367 "../src/parse/scanner_lex.re"
	{
					goto scan;
				}
#line 730 "src/parse/scanner_lex.cc"
yy116:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy196;
	} else {
		if (yych <= ' ') goto yy196;
		if (yych == '#') goto yy198;
	}
yy117:
#line 376 "../src/parse/scanner_lex.re"
	{
					if (cur == eof) return 0;
					pos = cur;
					cline++;
					goto scan;
				}
#line 748 "src/parse/scanner_lex.cc"
yy118:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy195;
	goto yy113;
yy119:
	++YYCURSOR;
#line 262 "../src/parse/scanner_lex.re"
	{ quote = tok[0];                    goto cpoints; }
#line 757 "src/parse/scanner_lex.cc"
yy121:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '}') goto yy193;
	goto yy113;
yy122:
	++YYCURSOR;
yy123:
#line 272 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 769 "src/parse/scanner_lex.cc"
yy124:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '/') goto yy193;
#line 276 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return STAR;
				}
#line 778 "src/parse/scanner_lex.cc"
yy126:
	++YYCURSOR;
#line 280 "../src/parse/scanner_lex.re"
	{
					yylval.op = *tok;
					return CLOSE;
				}
#line 786 "src/parse/scanner_lex.cc"
yy128:
	++YYCURSOR;
#line 362 "../src/parse/scanner_lex.re"
	{
					yylval.regexp = mkDot();
					return RANGE;
				}
#line 794 "src/parse/scanner_lex.cc"
yy130:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '*') goto yy189;
	if (yych == '/') goto yy191;
	goto yy123;
yy131:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy163;
yy132:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy185;
	goto yy113;
yy133:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '!') goto yy176;
	if (yych == '>') goto yy178;
	goto yy123;
yy134:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '^') goto yy174;
#line 263 "../src/parse/scanner_lex.re"
	{ quote = ']';                       goto cpoints; }
#line 820 "src/parse/scanner_lex.cc"
yy136:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy164;
	goto yy163;
yy137:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 16) {
		goto yy139;
	}
	if (yych <= 'Z') {
		if (yych == ',') goto yy144;
		if (yych >= 'A') goto yy142;
	} else {
		if (yych <= '_') {
			if (yych >= '_') goto yy142;
		} else {
			if (yych <= '`') goto yy138;
			if (yych <= 'z') goto yy142;
		}
	}
yy138:
#line 233 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto code;
				}
#line 849 "src/parse/scanner_lex.cc"
yy139:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 16) {
		goto yy139;
	}
	if (yych <= '^') {
		if (yych <= ',') {
			if (yych >= ',') goto yy150;
		} else {
			if (yych <= '@') goto yy141;
			if (yych <= 'Z') goto yy142;
		}
	} else {
		if (yych <= 'z') {
			if (yych != '`') goto yy142;
		} else {
			if (yych == '}') goto yy148;
		}
	}
yy141:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy117;
		} else {
			goto yy123;
		}
	} else {
		if (yyaccept == 2) {
			goto yy138;
		} else {
			goto yy145;
		}
	}
yy142:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy142;
	}
	if (yych == '}') goto yy146;
	goto yy141;
yy144:
	++YYCURSOR;
yy145:
#line 316 "../src/parse/scanner_lex.re"
	{
					fatal("illegal closure form, use '{n}', '{n,}', '{n,m}' where n and m are numbers");
				}
#line 902 "src/parse/scanner_lex.cc"
yy146:
	++YYCURSOR;
#line 320 "../src/parse/scanner_lex.re"
	{
					if (!FFlag) {
						fatal("curly braces for names only allowed with -F switch");
					}
					yylval.str = new std::string (tok + 1, tok_len () - 2); // -2 to omit braces
					return ID;
				}
#line 913 "src/parse/scanner_lex.cc"
yy148:
	++YYCURSOR;
#line 285 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 1, yylval.extop.min))
					{
						fatal ("repetition count overflow");
					}
					yylval.extop.max = yylval.extop.min;
					return CLOSESIZE;
				}
#line 925 "src/parse/scanner_lex.cc"
yy150:
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy145;
	if (yych <= '9') goto yy153;
	if (yych != '}') goto yy145;
	++YYCURSOR;
#line 307 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok + 1, cur - 2, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					yylval.extop.max = UINT32_MAX;
					return CLOSESIZE;
				}
#line 942 "src/parse/scanner_lex.cc"
yy153:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '/') goto yy141;
	if (yych <= '9') goto yy153;
	if (yych != '}') goto yy141;
	++YYCURSOR;
#line 294 "../src/parse/scanner_lex.re"
	{
					const char * p = strchr (tok, ',');
					if (!s_to_u32_unsafe (tok + 1, p, yylval.extop.min))
					{
						fatal ("repetition lower bound overflow");
					}
					if (!s_to_u32_unsafe (p + 1, cur - 1, yylval.extop.max))
					{
						fatal ("repetition upper bound overflow");
					}
					return CLOSESIZE;
				}
#line 964 "src/parse/scanner_lex.cc"
yy157:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 348 "../src/parse/scanner_lex.re"
	{
					if (!FFlag) {
						yylval.str = new std::string (tok, tok_len ());
						return ID;
					} else {
						for (char * p = tok; p < cur; ++p)
						{
							cpoints.push_back (static_cast<uint8_t> (*p));
						}
						yylval.regexp = cpoint_string (cpoints, bCaseInsensitive || bCaseInverted);
						return STRING;
					}
				}
#line 982 "src/parse/scanner_lex.cc"
yy159:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy172;
yy160:
	++YYCURSOR;
yy161:
	YYCURSOR = YYCTXMARKER;
#line 343 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					return ID;
				}
#line 995 "src/parse/scanner_lex.cc"
yy162:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy163:
	if (yych <= '9') {
		if (yych <= ' ') {
			if (yych == '\t') goto yy159;
			if (yych <= 0x1F) goto yy157;
			goto yy159;
		} else {
			if (yych == ',') goto yy160;
			if (yych <= '/') goto yy157;
			goto yy162;
		}
	} else {
		if (yych <= 'Z') {
			if (yych <= '<') goto yy157;
			if (yych <= '>') goto yy160;
			if (yych <= '@') goto yy157;
			goto yy162;
		} else {
			if (yych <= '_') {
				if (yych <= '^') goto yy157;
				goto yy162;
			} else {
				if (yych <= '`') goto yy157;
				if (yych <= 'z') goto yy162;
				goto yy157;
			}
		}
	}
yy164:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '2') goto yy163;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy163;
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy163;
	++YYCURSOR;
#line 328 "../src/parse/scanner_lex.re"
	{ goto conf; }
#line 1042 "src/parse/scanner_lex.cc"
yy169:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 330 "../src/parse/scanner_lex.re"
	{
					yylval.str = new std::string (tok, tok_len ());
					if (FFlag)
					{
						lexer_state = LEX_FLEX_NAME;
						return FID;
					}
					else
					{
						return ID;
					}
				}
#line 1059 "src/parse/scanner_lex.cc"
yy171:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy172:
	if (yybm[0+yych] & 64) {
		goto yy171;
	}
	if (yych == ',') goto yy173;
	if (yych <= '<') goto yy169;
	if (yych >= '?') goto yy169;
yy173:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy161;
yy174:
	++YYCURSOR;
#line 264 "../src/parse/scanner_lex.re"
	{ quote = ']'; negated_class = true; goto cpoints; }
#line 1078 "src/parse/scanner_lex.cc"
yy176:
	++YYCURSOR;
#line 269 "../src/parse/scanner_lex.re"
	{
					return SETUP;
				}
#line 1085 "src/parse/scanner_lex.cc"
yy178:
	YYCTXMARKER = YYCURSOR + 1;
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy180;
yy179:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
yy180:
	if (yych <= '9') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy141;
			goto yy179;
		} else {
			if (yych == ' ') goto yy179;
			goto yy141;
		}
	} else {
		if (yych <= '=') {
			if (yych <= ':') goto yy184;
			if (yych <= '<') goto yy141;
			goto yy183;
		} else {
			if (yych != '{') goto yy141;
		}
	}
yy181:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 266 "../src/parse/scanner_lex.re"
	{
					return NOCOND;
				}
#line 1119 "src/parse/scanner_lex.cc"
yy183:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '>') goto yy181;
	goto yy141;
yy184:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '=') goto yy181;
	goto yy141;
yy185:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '>') goto yy187;
#line 242 "../src/parse/scanner_lex.re"
	{
					tok += 2; /* skip ":=" */
					depth = 0;
					goto code;
				}
#line 1137 "src/parse/scanner_lex.cc"
yy187:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 238 "../src/parse/scanner_lex.re"
	{
					return *tok;
				}
#line 1145 "src/parse/scanner_lex.cc"
yy189:
	++YYCURSOR;
#line 251 "../src/parse/scanner_lex.re"
	{
					depth = 1;
					goto comment;
				}
#line 1153 "src/parse/scanner_lex.cc"
yy191:
	++YYCURSOR;
#line 248 "../src/parse/scanner_lex.re"
	{
				goto nextLine;
			}
#line 1160 "src/parse/scanner_lex.cc"
yy193:
	++YYCURSOR;
#line 257 "../src/parse/scanner_lex.re"
	{
					tok = cur;
					return 0;
				}
#line 1168 "src/parse/scanner_lex.cc"
yy195:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych != '\t') goto yy117;
	} else {
		if (yych <= ' ') goto yy196;
		if (yych == '#') goto yy198;
		goto yy117;
	}
yy196:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy196;
		goto yy141;
	} else {
		if (yych <= ' ') goto yy196;
		if (yych != '#') goto yy141;
	}
yy198:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy198;
		goto yy141;
	} else {
		if (yych <= ' ') goto yy198;
		if (yych != 'l') goto yy141;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy141;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy141;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy141;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy205;
	if (yych <= '9') goto yy141;
	goto yy205;
yy204:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy205:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy204;
		goto yy141;
	} else {
		if (yych <= ' ') goto yy204;
		if (yych <= '0') goto yy141;
		if (yych >= ':') goto yy141;
	}
yy206:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy141;
		} else {
			if (yych <= '\n') goto yy210;
			if (yych <= '\f') goto yy141;
			goto yy212;
		}
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy141;
		} else {
			if (yych <= '/') goto yy141;
			if (yych <= '9') goto yy206;
			goto yy141;
		}
	}
yy208:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy208;
		goto yy141;
	} else {
		if (yych <= ' ') goto yy208;
		if (yych == '"') goto yy213;
		goto yy141;
	}
yy210:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 371 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto scan;
				}
#line 1266 "src/parse/scanner_lex.cc"
yy212:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy210;
	goto yy141;
yy213:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy213;
	}
	if (yych <= '\n') goto yy141;
	if (yych <= '"') goto yy216;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy141;
	goto yy213;
yy216:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy210;
	if (yych == '\r') goto yy212;
	goto yy141;
yy217:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy218:
	if (yych == '\t') goto yy217;
	if (yych == ' ') goto yy217;
	goto yy115;
}
#line 387 "../src/parse/scanner_lex.re"


flex_name:

#line 1304 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy223;
	if (yych == '\r') goto yy225;
	++YYCURSOR;
yy222:
#line 398 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		goto start;
	}
#line 1318 "src/parse/scanner_lex.cc"
yy223:
	++YYCURSOR;
yy224:
#line 392 "../src/parse/scanner_lex.re"
	{
		YYCURSOR = tok;
		lexer_state = LEX_NORMAL;
		return FID_END;
	}
#line 1328 "src/parse/scanner_lex.cc"
yy225:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '\n') goto yy222;
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy224;
}
#line 402 "../src/parse/scanner_lex.re"


cpoints:
	tok = cur;

#line 1342 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if ((YYLIMIT - YYCURSOR) < 10) YYFILL(10);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy231;
	if (yych == '\\') goto yy233;
	++YYCURSOR;
#line 426 "../src/parse/scanner_lex.re"
	{
		const char c = tok[0];
		if (c == quote)
		{
			switch (quote)
			{
				case ']':
					yylval.regexp = cpoint_class (cpoints, negated_class);
					return RANGE;
				case '\'':
					yylval.regexp = cpoint_string (cpoints, bCaseInsensitive || !bCaseInverted);
					return STRING;
				case '"':
					yylval.regexp = cpoint_string (cpoints, bCaseInsensitive || bCaseInverted);
					return STRING;
			}
		}
		else
		{
			cpoints.push_back (static_cast<uint8_t> (c));
			goto cpoints;
		}
	}
#line 1375 "src/parse/scanner_lex.cc"
yy231:
	++YYCURSOR;
#line 407 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error"); }
#line 1380 "src/parse/scanner_lex.cc"
yy233:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) <= 'b') {
		if (yych <= 'T') {
			if (yych <= '/') {
				if (yych != '\n') goto yy235;
			} else {
				if (yych <= '3') goto yy237;
				if (yych <= '7') goto yy239;
				goto yy235;
			}
		} else {
			if (yych <= 'X') {
				if (yych <= 'U') goto yy240;
				if (yych <= 'W') goto yy235;
				goto yy242;
			} else {
				if (yych == '\\') goto yy243;
				if (yych <= '`') goto yy235;
				goto yy243;
			}
		}
	} else {
		if (yych <= 'r') {
			if (yych <= 'm') {
				if (yych == 'f') goto yy243;
				goto yy235;
			} else {
				if (yych <= 'n') goto yy243;
				if (yych <= 'q') goto yy235;
				goto yy243;
			}
		} else {
			if (yych <= 'u') {
				if (yych <= 's') goto yy235;
				if (yych <= 't') goto yy243;
				goto yy242;
			} else {
				if (yych <= 'v') goto yy243;
				if (yych == 'x') goto yy245;
				goto yy235;
			}
		}
	}
#line 410 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in escape sequence"); }
#line 1427 "src/parse/scanner_lex.cc"
yy235:
	++YYCURSOR;
#line 416 "../src/parse/scanner_lex.re"
	{
		const char c = tok[1];
		if (c != quote)
		{
			warn.useless_escape (tline, tok - pos, c);
		}
		cpoints.push_back (static_cast<uint8_t> (c));
		goto cpoints;
	}
#line 1440 "src/parse/scanner_lex.cc"
yy237:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '/') goto yy238;
	if (yych <= '7') goto yy260;
yy238:
#line 409 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in octal escape sequence"); }
#line 1449 "src/parse/scanner_lex.cc"
yy239:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy238;
yy240:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy241;
		if (yych <= '9') goto yy253;
	} else {
		if (yych <= 'F') goto yy253;
		if (yych <= '`') goto yy241;
		if (yych <= 'f') goto yy253;
	}
yy241:
#line 408 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "syntax error in hexadecimal escape sequence"); }
#line 1467 "src/parse/scanner_lex.cc"
yy242:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy241;
		if (yych <= '9') goto yy250;
		goto yy241;
	} else {
		if (yych <= 'F') goto yy250;
		if (yych <= '`') goto yy241;
		if (yych <= 'f') goto yy250;
		goto yy241;
	}
yy243:
	++YYCURSOR;
#line 414 "../src/parse/scanner_lex.re"
	{ cpoints.push_back (unesc_simple (tok));   goto cpoints; }
#line 1485 "src/parse/scanner_lex.cc"
yy245:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '@') {
		if (yych <= '/') goto yy241;
		if (yych >= ':') goto yy241;
	} else {
		if (yych <= 'F') goto yy246;
		if (yych <= '`') goto yy241;
		if (yych >= 'g') goto yy241;
	}
yy246:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych <= '9') goto yy248;
	} else {
		if (yych <= 'F') goto yy248;
		if (yych <= '`') goto yy247;
		if (yych <= 'f') goto yy248;
	}
yy247:
	YYCURSOR = YYMARKER;
	if (yyaccept == 0) {
		goto yy238;
	} else {
		goto yy241;
	}
yy248:
	++YYCURSOR;
#line 412 "../src/parse/scanner_lex.re"
	{ cpoints.push_back (unesc_hex (tok, cur)); goto cpoints; }
#line 1518 "src/parse/scanner_lex.cc"
yy250:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy251;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy251:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy252;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy252:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych <= '9') goto yy248;
		goto yy247;
	} else {
		if (yych <= 'F') goto yy248;
		if (yych <= '`') goto yy247;
		if (yych <= 'f') goto yy248;
		goto yy247;
	}
yy253:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy254;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy254:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy255;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy255:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy256;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy256:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy257;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy257:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy258;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy258:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych >= ':') goto yy247;
	} else {
		if (yych <= 'F') goto yy259;
		if (yych <= '`') goto yy247;
		if (yych >= 'g') goto yy247;
	}
yy259:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '@') {
		if (yych <= '/') goto yy247;
		if (yych <= '9') goto yy248;
		goto yy247;
	} else {
		if (yych <= 'F') goto yy248;
		if (yych <= '`') goto yy247;
		if (yych <= 'f') goto yy248;
		goto yy247;
	}
yy260:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '/') goto yy247;
	if (yych >= '8') goto yy247;
	++YYCURSOR;
#line 413 "../src/parse/scanner_lex.re"
	{ cpoints.push_back (unesc_oct (tok, cur)); goto cpoints; }
#line 1630 "src/parse/scanner_lex.cc"
}
#line 449 "../src/parse/scanner_lex.re"


code:

#line 1637 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48, 112,   0,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		112,  48,  16,  48,  48,  48,  48,  32, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		176, 176, 176, 176, 176, 176, 176, 176, 
		176, 176,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,   0,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
		 48,  48,  48,  48,  48,  48,  48,  48, 
	};
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '&') {
		if (yych <= '\n') {
			if (yych <= 0x00) goto yy265;
			if (yych <= '\t') goto yy267;
			goto yy269;
		} else {
			if (yych == '"') goto yy271;
			goto yy267;
		}
	} else {
		if (yych <= '{') {
			if (yych <= '\'') goto yy272;
			if (yych <= 'z') goto yy267;
			goto yy273;
		} else {
			if (yych == '}') goto yy275;
			goto yy267;
		}
	}
yy265:
	++YYCURSOR;
#line 512 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						if (depth)
						{
							fatal("missing '}'");
						}
						return 0;
					}
					goto code;
				}
#line 1710 "src/parse/scanner_lex.cc"
yy267:
	++YYCURSOR;
yy268:
#line 526 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1718 "src/parse/scanner_lex.cc"
yy269:
	YYCTXMARKER = YYCURSOR + 1;
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych >= '\t') goto yy286;
		} else {
			if (yych <= '\n') goto yy288;
			if (yych >= '\r') goto yy288;
		}
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy286;
		} else {
			if (yych == '#') goto yy289;
		}
	}
yy270:
#line 493 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						tok += strspn(tok, " \t\r\n");
						while (cur > tok && strchr(" \t\r\n", cur[-1]))
						{
							--cur;
						}
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1758 "src/parse/scanner_lex.cc"
yy271:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy268;
	goto yy284;
yy272:
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy268;
	goto yy278;
yy273:
	++YYCURSOR;
#line 465 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else
					{
						++depth;
					}
					goto code;
				}
#line 1783 "src/parse/scanner_lex.cc"
yy275:
	++YYCURSOR;
#line 453 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						fatal("Curly braces are not allowed after ':='");
					}
					else if (--depth == 0)
					{
						yylval.code = new Code (tok, tok_len (), get_fname (), tline);
						return CODE;
					}
					goto code;
				}
#line 1799 "src/parse/scanner_lex.cc"
yy277:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy278:
	if (yybm[0+yych] & 16) {
		goto yy277;
	}
	if (yych <= '\n') goto yy279;
	if (yych <= '\'') goto yy281;
	goto yy280;
yy279:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy270;
		} else {
			goto yy268;
		}
	} else {
		goto yy287;
	}
yy280:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy279;
	goto yy277;
yy281:
	++YYCURSOR;
#line 523 "../src/parse/scanner_lex.re"
	{
					goto code;
				}
#line 1834 "src/parse/scanner_lex.cc"
yy283:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy284:
	if (yybm[0+yych] & 32) {
		goto yy283;
	}
	if (yych <= '\n') goto yy279;
	if (yych <= '"') goto yy281;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy279;
	goto yy283;
yy286:
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy308;
	} else {
		if (yych <= ' ') goto yy308;
		if (yych == '#') goto yy289;
	}
yy287:
	YYCURSOR = YYCTXMARKER;
#line 480 "../src/parse/scanner_lex.re"
	{
					if (depth == 0)
					{
						goto code;
					}
					else if (cur == eof)
					{
						fatal("missing '}'");
					}
					pos = cur;
					cline++;
					goto code;
				}
#line 1875 "src/parse/scanner_lex.cc"
yy288:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy287;
yy289:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy289;
	}
	if (yych != 'l') goto yy279;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy279;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy279;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy279;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy296;
	if (yych <= '9') goto yy279;
	goto yy296;
yy295:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy296:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy295;
		goto yy279;
	} else {
		if (yych <= ' ') goto yy295;
		if (yych <= '0') goto yy279;
		if (yych >= ':') goto yy279;
	}
yy297:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy297;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy279;
		if (yych <= '\t') goto yy299;
		if (yych <= '\n') goto yy301;
		goto yy279;
	} else {
		if (yych <= '\r') goto yy303;
		if (yych != ' ') goto yy279;
	}
yy299:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy299;
		goto yy279;
	} else {
		if (yych <= ' ') goto yy299;
		if (yych == '"') goto yy304;
		goto yy279;
	}
yy301:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 476 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto code;
				}
#line 1947 "src/parse/scanner_lex.cc"
yy303:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy301;
	goto yy279;
yy304:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy279;
		goto yy304;
	} else {
		if (yych <= '"') goto yy307;
		if (yych != '\\') goto yy304;
	}
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy279;
	goto yy304;
yy307:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy301;
	if (yych == '\r') goto yy303;
	goto yy279;
yy308:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy308;
		goto yy279;
	} else {
		if (yych <= ' ') goto yy308;
		if (yych == '#') goto yy289;
		goto yy279;
	}
}
#line 529 "../src/parse/scanner_lex.re"


comment:

#line 1991 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 160,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		160, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= ')') {
		if (yych == '\n') goto yy314;
	} else {
		if (yych <= '*') goto yy316;
		if (yych == '/') goto yy317;
	}
	++YYCURSOR;
yy313:
#line 561 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					goto comment;
				}
#line 2046 "src/parse/scanner_lex.cc"
yy314:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yybm[0+yych] & 32) {
		goto yy322;
	}
	if (yych == '#') goto yy325;
yy315:
#line 552 "../src/parse/scanner_lex.re"
	{
					if (cur == eof)
					{
						return 0;
					}
					tok = pos = cur;
					cline++;
					goto comment;
				}
#line 2064 "src/parse/scanner_lex.cc"
yy316:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '/') goto yy320;
	goto yy313;
yy317:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != '*') goto yy313;
	++YYCURSOR;
#line 543 "../src/parse/scanner_lex.re"
	{
					++depth;
					fatal("ambiguous /* found");
					goto comment;
				}
#line 2079 "src/parse/scanner_lex.cc"
yy320:
	++YYCURSOR;
#line 533 "../src/parse/scanner_lex.re"
	{
					if (--depth == 0)
					{
						goto scan;
					}
					else
					{
						goto comment;
					}
				}
#line 2093 "src/parse/scanner_lex.cc"
yy322:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 32) {
		goto yy322;
	}
	if (yych == '#') goto yy325;
yy324:
	YYCURSOR = YYMARKER;
	goto yy315;
yy325:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 5) YYFILL(5);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy325;
		goto yy324;
	} else {
		if (yych <= ' ') goto yy325;
		if (yych != 'l') goto yy324;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy324;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy324;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy324;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy332;
	if (yych <= '9') goto yy324;
	goto yy332;
yy331:
	YYCTXMARKER = YYCURSOR + 1;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy332:
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy331;
		goto yy324;
	} else {
		if (yych <= ' ') goto yy331;
		if (yych <= '0') goto yy324;
		if (yych >= ':') goto yy324;
	}
yy333:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy333;
	}
	if (yych <= '\f') {
		if (yych <= 0x08) goto yy324;
		if (yych <= '\t') goto yy335;
		if (yych <= '\n') goto yy337;
		goto yy324;
	} else {
		if (yych <= '\r') goto yy339;
		if (yych != ' ') goto yy324;
	}
yy335:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy335;
		goto yy324;
	} else {
		if (yych <= ' ') goto yy335;
		if (yych == '"') goto yy340;
		goto yy324;
	}
yy337:
	++YYCURSOR;
	YYCURSOR = YYCTXMARKER;
#line 548 "../src/parse/scanner_lex.re"
	{
					set_sourceline ();
					goto comment;
				}
#line 2176 "src/parse/scanner_lex.cc"
yy339:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == '\n') goto yy337;
	goto yy324;
yy340:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy340;
	}
	if (yych <= '\n') goto yy324;
	if (yych <= '"') goto yy343;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy324;
	goto yy340;
yy343:
	++YYCURSOR;
	if ((yych = (YYCTYPE)*YYCURSOR) == '\n') goto yy337;
	if (yych == '\r') goto yy339;
	goto yy324;
}
#line 568 "../src/parse/scanner_lex.re"


nextLine:

#line 2206 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy348;
	++YYCURSOR;
#line 579 "../src/parse/scanner_lex.re"
	{  if(cur == eof) {
                  return 0;
               }
               goto nextLine;
            }
#line 2219 "src/parse/scanner_lex.cc"
yy348:
	++YYCURSOR;
#line 572 "../src/parse/scanner_lex.re"
	{ if(cur == eof) {
                  return 0;
               }
               tok = pos = cur;
               cline++;
               goto scan;
            }
#line 2230 "src/parse/scanner_lex.cc"
}
#line 584 "../src/parse/scanner_lex.re"


conf:
	tok = cur;
	lexer_state = LEX_CONF;

#line 2239 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if ((YYLIMIT - YYCURSOR) < 27) YYFILL(27);
	yych = (YYCTYPE)*YYCURSOR;
	switch (yych) {
	case 'c':	goto yy354;
	case 'd':	goto yy355;
	case 'f':	goto yy356;
	case 'i':	goto yy357;
	case 'l':	goto yy358;
	case 's':	goto yy359;
	case 'v':	goto yy360;
	case 'y':	goto yy361;
	default:	goto yy352;
	}
yy352:
	++YYCURSOR;
yy353:
#line 590 "../src/parse/scanner_lex.re"
	{ fatal ((tok - pos) - tchar, "unrecognized configuration"); }
#line 2261 "src/parse/scanner_lex.cc"
yy354:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'g') goto yy686;
	if (yych == 'o') goto yy687;
	goto yy353;
yy355:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'e') goto yy531;
	goto yy353;
yy356:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'l') goto yy524;
	goto yy353;
yy357:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'n') goto yy507;
	goto yy353;
yy358:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy480;
	goto yy353;
yy359:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 't') goto yy451;
	goto yy353;
yy360:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'a') goto yy418;
	goto yy353;
yy361:
	yyaccept = 0;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != 'y') goto yy353;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= 'a') goto yy363;
		if (yych <= 'b') goto yy364;
		goto yy365;
	} else {
		if (yych == 'f') goto yy366;
	}
yy363:
	YYCURSOR = YYMARKER;
	if (yyaccept <= 1) {
		if (yyaccept == 0) {
			goto yy353;
		} else {
			goto yy555;
		}
	} else {
		if (yyaccept == 2) {
			goto yy701;
		} else {
			goto yy711;
		}
	}
yy364:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy412;
	goto yy363;
yy365:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy394;
	goto yy363;
yy366:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == 'c') goto yy373;
		goto yy363;
	} else {
		if (yych <= 'e') goto yy372;
		if (yych != 'p') goto yy363;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy385;
	goto yy363;
yy372:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy379;
	goto yy363;
yy373:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy363;
	++YYCURSOR;
#line 678 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_CHECK; }
#line 2369 "src/parse/scanner_lex.cc"
yy379:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	++YYCURSOR;
#line 679 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_ENABLE; }
#line 2382 "src/parse/scanner_lex.cc"
yy385:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	++YYCURSOR;
#line 680 "../src/parse/scanner_lex.re"
	{ return CONF_YYFILL_PARAMETER; }
#line 2401 "src/parse/scanner_lex.cc"
yy394:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'c') goto yy397;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy408;
	goto yy363;
yy397:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	++YYCURSOR;
#line 676 "../src/parse/scanner_lex.re"
	{ return CONF_YYCH_CONVERSION; }
#line 2433 "src/parse/scanner_lex.cc"
yy408:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	++YYCURSOR;
#line 677 "../src/parse/scanner_lex.re"
	{ return CONF_YYCH_EMIT; }
#line 2442 "src/parse/scanner_lex.cc"
yy412:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	++YYCURSOR;
#line 675 "../src/parse/scanner_lex.re"
	{ return CONF_YYBM_HEX; }
#line 2455 "src/parse/scanner_lex.cc"
yy418:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'c') {
		if (yych <= '`') goto yy363;
		if (yych <= 'a') goto yy428;
		if (yych <= 'b') goto yy429;
		goto yy430;
	} else {
		if (yych <= 'r') goto yy363;
		if (yych <= 's') goto yy431;
		if (yych <= 't') goto yy432;
		goto yy363;
	}
yy428:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'c') goto yy447;
	goto yy363;
yy429:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'm') goto yy437;
	goto yy363;
yy430:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'h') goto yy437;
	if (yych == 't') goto yy443;
	goto yy363;
yy431:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy439;
	goto yy363;
yy432:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
yy437:
	++YYCURSOR;
#line 637 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "variable:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2523 "src/parse/scanner_lex.cc"
yy439:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy437;
	goto yy363;
yy443:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy437;
	goto yy363;
yy447:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 't') goto yy437;
	goto yy363;
yy451:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy454;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'e') goto yy462;
	goto yy363;
yy454:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	++YYCURSOR;
#line 672 "../src/parse/scanner_lex.re"
	{ return CONF_STARTLABEL; }
#line 2579 "src/parse/scanner_lex.cc"
yy462:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'a') goto yy464;
	if (yych == 'n') goto yy465;
	goto yy363;
yy464:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'b') goto yy475;
	goto yy363;
yy465:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	++YYCURSOR;
#line 674 "../src/parse/scanner_lex.re"
	{ return CONF_STATE_NEXTLABEL; }
#line 2611 "src/parse/scanner_lex.cc"
yy475:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	++YYCURSOR;
#line 673 "../src/parse/scanner_lex.re"
	{ return CONF_STATE_ABORT; }
#line 2622 "src/parse/scanner_lex.cc"
yy480:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == ':') goto yy485;
	if (yych != 'p') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy501;
	goto yy363;
yy485:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'F') goto yy488;
	if (yych == 'N') goto yy489;
	goto yy363;
yy488:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'i') goto yy494;
	goto yy363;
yy489:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
yy492:
	++YYCURSOR;
#line 623 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "label:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2664 "src/parse/scanner_lex.cc"
yy494:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'b') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'l') goto yy492;
	goto yy363;
yy501:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	++YYCURSOR;
#line 671 "../src/parse/scanner_lex.re"
	{ return CONF_LABELPREFIX; }
#line 2693 "src/parse/scanner_lex.cc"
yy507:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'r') goto yy363;
	if (yych <= 's') goto yy514;
	if (yych >= 'u') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy521;
	goto yy363;
yy514:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy363;
	++YYCURSOR;
#line 669 "../src/parse/scanner_lex.re"
	{ return CONF_INDENT_STRING; }
#line 2726 "src/parse/scanner_lex.cc"
yy521:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy363;
	++YYCURSOR;
#line 670 "../src/parse/scanner_lex.re"
	{ return CONF_INDENT_TOP; }
#line 2733 "src/parse/scanner_lex.cc"
yy524:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'g') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'e') {
		if (yych == '8') goto yy529;
		if (yych <= 'd') goto yy363;
	} else {
		if (yych <= 'u') {
			if (yych <= 't') goto yy363;
		} else {
			if (yych <= 'v') goto yy363;
			if (yych >= 'y') goto yy363;
		}
	}
yy529:
	++YYCURSOR;
#line 658 "../src/parse/scanner_lex.re"
	{
		switch (YYCURSOR[-1])
		{
			case 'e': yylval.enc = Enc::EBCDIC; break;
			case 'w': yylval.enc = Enc::UCS2;   break;
			case 'x': yylval.enc = Enc::UTF16;  break;
			case 'u': yylval.enc = Enc::UTF32;  break;
			case '8': yylval.enc = Enc::UTF8;   break;
		}
		return CONF_FLAGS;
	}
#line 2769 "src/parse/scanner_lex.cc"
yy531:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	switch (yych) {
	case 'B':	goto yy542;
	case 'C':	goto yy543;
	case 'D':	goto yy544;
	case 'F':	goto yy541;
	case 'G':	goto yy540;
	case 'L':	goto yy545;
	case 'M':	goto yy546;
	case 'P':	goto yy547;
	case 'R':	goto yy548;
	case 'S':	goto yy539;
	default:	goto yy363;
	}
yy539:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy649;
	if (yych == 'K') goto yy648;
	goto yy363;
yy540:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy618;
	goto yy363;
yy541:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'I') goto yy603;
	goto yy363;
yy542:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'A') goto yy596;
	goto yy363;
yy543:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'S') {
		if (yych == 'O') goto yy579;
		goto yy363;
	} else {
		if (yych <= 'T') goto yy578;
		if (yych <= 'U') goto yy577;
		goto yy363;
	}
yy544:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy574;
	goto yy363;
yy545:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy566;
	if (yych == 'I') goto yy565;
	goto yy363;
yy546:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'A') goto yy561;
	goto yy363;
yy547:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy559;
	goto yy363;
yy548:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == 'C') goto yy556;
yy555:
#line 613 "../src/parse/scanner_lex.re"
	{
		tok += sizeof "define:" - 1;
		yylval.str = new std::string (tok, tok_len ());
		return CONF;
	}
#line 2866 "src/parse/scanner_lex.cc"
yy556:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'X') goto yy363;
yy558:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy555;
yy559:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'K') goto yy558;
	goto yy363;
yy561:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy558;
	goto yy363;
yy565:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'M') goto yy572;
	goto yy363;
yy566:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'H') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'N') goto yy558;
	goto yy363;
yy572:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy558;
	goto yy363;
yy574:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'B') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'G') goto yy558;
	goto yy363;
yy577:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy593;
	goto yy363;
yy578:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'W') goto yy363;
	if (yych <= 'X') goto yy585;
	if (yych <= 'Y') goto yy586;
	goto yy363;
yy579:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'Y') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy558;
	goto yy363;
yy585:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'M') goto yy588;
	goto yy363;
yy586:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'E') goto yy558;
	goto yy363;
yy588:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'R') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy558;
	goto yy363;
yy593:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'R') goto yy558;
	goto yy363;
yy596:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'C') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'K') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'U') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'P') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != 'C') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'X') goto yy558;
	goto yy363;
yy603:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'L') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy607;
	if (yych != '@') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'l') goto yy614;
	goto yy363;
yy607:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 650 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYFILL_NAKED; }
#line 3020 "src/parse/scanner_lex.cc"
yy614:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	++YYCURSOR;
#line 651 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYFILL_LEN; }
#line 3029 "src/parse/scanner_lex.cc"
yy618:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy621;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy637;
	goto yy363;
yy621:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != ':') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 652 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYGETCONDITION_NAKED; }
#line 3072 "src/parse/scanner_lex.cc"
yy637:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != ':') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 653 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYGETSTATE_NAKED; }
#line 3096 "src/parse/scanner_lex.cc"
yy648:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'I') goto yy685;
	goto yy363;
yy649:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'C') goto yy652;
	if (yych != 'S') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'T') goto yy667;
	goto yy363;
yy652:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'D') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'I') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'O') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'N') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych != '@') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 654 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETCONDITION_COND; }
#line 3141 "src/parse/scanner_lex.cc"
yy667:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'A') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'T') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'E') goto yy363;
	yyaccept = 1;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == ':') goto yy672;
	if (yych != '@') goto yy555;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 's') goto yy679;
	goto yy363;
yy672:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'k') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 655 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETSTATE_NAKED; }
#line 3170 "src/parse/scanner_lex.cc"
yy679:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'a') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	++YYCURSOR;
#line 656 "../src/parse/scanner_lex.re"
	{ return CONF_DEFINE_YYSETSTATE_STATE; }
#line 3183 "src/parse/scanner_lex.cc"
yy685:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'P') goto yy558;
	goto yy363;
yy686:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy734;
	goto yy363;
yy687:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= 'd') {
		if (yych == ':') goto yy692;
		goto yy363;
	} else {
		if (yych <= 'e') goto yy691;
		if (yych != 'p') goto yy363;
	}
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'r') goto yy728;
	goto yy363;
yy691:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'n') goto yy718;
	goto yy363;
yy692:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'd') goto yy694;
	if (yych != 'g') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych == 'o') goto yy708;
	goto yy363;
yy694:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'v') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yyaccept = 2;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy702;
yy701:
#line 645 "../src/parse/scanner_lex.re"
	{ return CONF_COND_DIVIDER; }
#line 3238 "src/parse/scanner_lex.cc"
yy702:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 646 "../src/parse/scanner_lex.re"
	{ return CONF_COND_DIVIDER_COND; }
#line 3251 "src/parse/scanner_lex.cc"
yy708:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yyaccept = 3;
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '@') goto yy712;
yy711:
#line 647 "../src/parse/scanner_lex.re"
	{ return CONF_COND_GOTO; }
#line 3263 "src/parse/scanner_lex.cc"
yy712:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'c') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'n') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 648 "../src/parse/scanner_lex.re"
	{ return CONF_COND_GOTO_COND; }
#line 3276 "src/parse/scanner_lex.cc"
yy718:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'u') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'm') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'p') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	++YYCURSOR;
#line 644 "../src/parse/scanner_lex.re"
	{ return CONF_CONDENUMPREFIX; }
#line 3297 "src/parse/scanner_lex.cc"
yy728:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'f') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'i') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'x') goto yy363;
	++YYCURSOR;
#line 643 "../src/parse/scanner_lex.re"
	{ return CONF_CONDPREFIX; }
#line 3310 "src/parse/scanner_lex.cc"
yy734:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != ':') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 't') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'r') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'e') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 's') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'h') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'o') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'l') goto yy363;
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych != 'd') goto yy363;
	++YYCURSOR;
#line 649 "../src/parse/scanner_lex.re"
	{ return CONF_CGOTO_THRESHOLD; }
#line 3339 "src/parse/scanner_lex.cc"
}
#line 681 "../src/parse/scanner_lex.re"


conf_eq:

#line 3346 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy752;
	} else {
		if (yych <= ' ') goto yy752;
		if (yych == '=') goto yy753;
	}
	++YYCURSOR;
yy751:
#line 685 "../src/parse/scanner_lex.re"
	{ fatal ("missing '=' in configuration"); }
#line 3395 "src/parse/scanner_lex.cc"
yy752:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy757;
		goto yy751;
	} else {
		if (yych <= ' ') goto yy757;
		if (yych == '=') goto yy755;
		goto yy751;
	}
yy753:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy756;
yy754:
#line 686 "../src/parse/scanner_lex.re"
	{ goto conf_val; }
#line 3413 "src/parse/scanner_lex.cc"
yy755:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy756:
	if (yybm[0+yych] & 128) {
		goto yy755;
	}
	goto yy754;
yy757:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= 0x1F) {
		if (yych == '\t') goto yy757;
	} else {
		if (yych <= ' ') goto yy757;
		if (yych == '=') goto yy755;
	}
	YYCURSOR = YYMARKER;
	goto yy751;
}
#line 687 "../src/parse/scanner_lex.re"


conf_val:
	tok = cur;
	lexer_state = LEX_NORMAL;

#line 3443 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 192,   0, 248, 248, 192, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		192, 248, 112, 248, 248, 248, 248, 168, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		252, 252, 252, 252, 252, 252, 252, 252, 
		252, 252, 248, 192, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248,  32, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
		248, 248, 248, 248, 248, 248, 248, 248, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '&') {
		if (yych <= '\r') {
			if (yych <= 0x08) goto yy772;
			if (yych <= '\n') goto yy762;
			if (yych <= '\f') goto yy772;
		} else {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy772;
			} else {
				if (yych == '"') goto yy768;
				goto yy772;
			}
		}
	} else {
		if (yych <= '/') {
			if (yych <= '\'') goto yy770;
			if (yych == '-') goto yy765;
			goto yy772;
		} else {
			if (yych <= '9') {
				if (yych <= '0') goto yy763;
				goto yy766;
			} else {
				if (yych != ';') goto yy772;
			}
		}
	}
yy762:
#line 709 "../src/parse/scanner_lex.re"
	{
		yylval.str = new std::string (tok, tok_len ());
		return STR;
	}
#line 3515 "src/parse/scanner_lex.cc"
yy763:
	++YYCURSOR;
	if (yybm[0+(yych = (YYCTYPE)*YYCURSOR)] & 32) {
		goto yy772;
	}
yy764:
#line 694 "../src/parse/scanner_lex.re"
	{
		if (!s_to_i32_unsafe (tok, cur, yylval.num))
		{
			fatal ("configuration value overflow");
		}
		return NUM;
	}
#line 3530 "src/parse/scanner_lex.cc"
yy765:
	yych = (YYCTYPE)*++YYCURSOR;
	if (yych <= '0') goto yy773;
	if (yych >= ':') goto yy773;
yy766:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 4) {
		goto yy766;
	}
	if (yych <= '\r') {
		if (yych <= 0x08) goto yy772;
		if (yych <= '\n') goto yy764;
		if (yych <= '\f') goto yy772;
		goto yy764;
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy772;
			goto yy764;
		} else {
			if (yych == ';') goto yy764;
			goto yy772;
		}
	}
yy768:
	YYMARKER = ++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 8) {
		goto yy768;
	}
	if (yych <= ' ') {
		if (yych == '\n') goto yy762;
		goto yy783;
	} else {
		if (yych <= '"') goto yy774;
		if (yych <= ';') goto yy783;
		goto yy782;
	}
yy770:
	YYMARKER = ++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 16) {
		goto yy770;
	}
	if (yych <= ' ') {
		if (yych == '\n') goto yy762;
		goto yy777;
	} else {
		if (yych <= '\'') goto yy774;
		if (yych <= ';') goto yy777;
		goto yy776;
	}
yy772:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy773:
	if (yybm[0+yych] & 32) {
		goto yy772;
	}
	goto yy762;
yy774:
	++YYCURSOR;
	if (yybm[0+(yych = (YYCTYPE)*YYCURSOR)] & 32) {
		goto yy772;
	}
yy775:
#line 702 "../src/parse/scanner_lex.re"
	{
		yylval.str = new std::string ();
		SubStr s (tok + 1, tok_len () - 2); // skip quotes
		unescape (s, *(yylval.str));
		return STR;
	}
#line 3608 "src/parse/scanner_lex.cc"
yy776:
	YYMARKER = ++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy770;
		} else {
			if (yych <= '\n') goto yy762;
			if (yych <= '\f') goto yy770;
		}
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy770;
		} else {
			if (yych != ';') goto yy770;
		}
	}
yy777:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 64) {
		goto yy777;
	}
	if (yych <= '\n') goto yy779;
	if (yych <= '\'') goto yy780;
	goto yy781;
yy779:
	YYCURSOR = YYMARKER;
	goto yy762;
yy780:
	yych = (YYCTYPE)*++YYCURSOR;
	goto yy775;
yy781:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy779;
	goto yy777;
yy782:
	YYMARKER = ++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '\r') {
		if (yych <= '\t') {
			if (yych <= 0x08) goto yy768;
		} else {
			if (yych <= '\n') goto yy762;
			if (yych <= '\f') goto yy768;
		}
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy768;
		} else {
			if (yych != ';') goto yy768;
		}
	}
yy783:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yybm[0+yych] & 128) {
		goto yy783;
	}
	if (yych <= '\n') goto yy779;
	if (yych <= '"') goto yy780;
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy779;
	goto yy783;
}
#line 713 "../src/parse/scanner_lex.re"

}

static void escape (std::string & dest, const std::string & src)
{
	dest = src;
	size_t l = dest.length();
	for (size_t p = 0; p < l; ++p)
	{
		if (dest[p] == '\\')
		{
			dest.insert(++p, "\\");
			++l;
		}
	}
}

void Scanner::set_sourceline ()
{
sourceline:
	tok = cur;

#line 3705 "src/parse/scanner_lex.cc"
{
	YYCTYPE yych;
	static const unsigned char yybm[] = {
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		192, 192, 192, 192, 192, 192, 192, 192, 
		192, 192, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128,   0, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych <= '!') {
		if (yych == '\n') goto yy790;
	} else {
		if (yych <= '"') goto yy792;
		if (yych <= '0') goto yy788;
		if (yych <= '9') goto yy793;
	}
yy788:
	++YYCURSOR;
yy789:
#line 758 "../src/parse/scanner_lex.re"
	{
  					goto sourceline;
  				}
#line 3758 "src/parse/scanner_lex.cc"
yy790:
	++YYCURSOR;
#line 746 "../src/parse/scanner_lex.re"
	{
  					if (cur == eof)
  					{
						--cur; 
					}
			  		else
			  		{
			  			pos = cur; 
			  		}
			  		tok = cur;
			  		return; 
				}
#line 3774 "src/parse/scanner_lex.cc"
yy792:
	yych = (YYCTYPE)*(YYMARKER = ++YYCURSOR);
	if (yych == '\n') goto yy789;
	goto yy798;
yy793:
	++YYCURSOR;
	yych = (YYCTYPE)*YYCURSOR;
	goto yy796;
yy794:
#line 735 "../src/parse/scanner_lex.re"
	{
					if (!s_to_u32_unsafe (tok, cur, cline))
					{
						fatal ("line number overflow");
					}
					goto sourceline; 
				}
#line 3792 "src/parse/scanner_lex.cc"
yy795:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy796:
	if (yybm[0+yych] & 64) {
		goto yy795;
	}
	goto yy794;
yy797:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
yy798:
	if (yybm[0+yych] & 128) {
		goto yy797;
	}
	if (yych <= '\n') goto yy799;
	if (yych <= '"') goto yy801;
	goto yy800;
yy799:
	YYCURSOR = YYMARKER;
	goto yy789;
yy800:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) YYFILL(1);
	yych = (YYCTYPE)*YYCURSOR;
	if (yych == '\n') goto yy799;
	goto yy797;
yy801:
	++YYCURSOR;
#line 742 "../src/parse/scanner_lex.re"
	{
					escape (in.file_name, std::string (tok + 1, tok_len () - 2)); // -2 to omit quotes
			  		goto sourceline; 
				}
#line 3829 "src/parse/scanner_lex.cc"
}
#line 761 "../src/parse/scanner_lex.re"

}

} // end namespace re2c
