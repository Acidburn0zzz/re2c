
``-Wcondition-order``
    Warn if the generated program makes implicit
    assumptions about condition numbering. One should use either ``-t, --type-header`` option or
    ``/*!types:re2c*/`` directive to generate mapping of condition names to numbers and use
    autogenerated condition names.

``-Wempty-character-class``
    Warn if regular expression contains empty
    character class. From the rational point of view trying to match empty
    character class makes no sense: it should always fail. However, for
    backwards compatibility reasons ``re2c`` allows empty character class and
    treats it as empty string. Use ``--empty-class`` option to change default
    behaviour.

``-Wmatch-empty-string``
    Warn if regular expression in a rule is
    nullable (matches empty string). If DFA runs in a loop and empty match
    is unintentional (input position in not advanced manually), lexer may
    get stuck in eternal loop.

``-Wswapped-range``
    Warn if range lower bound is greater that upper
    bound. Default ``re2c`` behaviour is to silently swap range bounds.

``-Wundefined-control-flow``
    Warn if some input strings cause undefined
    control flow in lexer (the faulty patterns are reported). This is the
    most dangerous and common mistake. It can be easily fixed by adding
    default rule ``*`` (this rule has the lowest priority, matches any code unit and consumes
    exactly one code unit).

``-Wunreachable-rules``
    Warn about rules that are shadowed by other rules and will never match.

``-Wuseless-escape``
    Warn if a symbol is escaped when it shouldn't be.
    By default re2c silently ignores escape, but this may as well indicate a
    typo or an error in escape sequence.
